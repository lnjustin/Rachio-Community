/**
 *  Rachio Community
 *
 *  Copyright\u00A9 2018 Anthony Santilli
 *  Copyright\u00A9 2020 Justin Leonard
 *
 *  V1.1.1 written by Anthony Santilli (@tonesto7)
 *  Ported to Hubitat and Enhanced to V2.0+ by Justin Leonard (@JustinL)
 *
 * Many thanks to Tom Walling (@tomw) for high-level consultation on architecture and functionality for enhancing the native Rachio app/drivers.
 * Thanks also to Josh Lyon (@josh) for proof of concept for generating an SVG for output at an Oath endpoint
 * Thanks to Rob (@Equis) in the Hubitat Community for icon design
 *
 * Attribution: Filled icons: Rain drop icon, icicle icon, and rain sensor icon made by Freepik from www.flaticon.com, Weather icons originally designed by Ashley Jager and modified by Justin Leonard
 * 
 * Outline icones licensed under [SIL OFL 1.1](http://scripts.sil.org/OFL) from https://github.com/erikflowers/weather-icons
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 * V1.1.1:  Modified by Rachio/Anthony Santilli (07-11-2018)
 * V2.0:    Ported to Hubitat; Added dashboard and exposed additional information in controller/zone, including next run, last run, rain sensor state, next upcoming event, weather intelligence information, and monthly watering summary (05-31-2020)    
 * V2.0.1:  Added external target for account setup link
 * V2.0.2:  Fixed issue with removal of webhook subscriptions upon app uninstall
 * V2.0.3:  Fixed issue with dashboard sizing; Added dashboard attribute to controller
 * V2.0.4:  Increased font size on dashboard for precipitation info
 * V2.0.5:  Fixed issue with web browser caching dashboard image in dashboard attribute of controller
 * V2.0.6:    Fixed issue with default zone run time
 * V2.0.7:    Fixed issue with logging and with getCurrentRainDelay method
 * V2.0.8: Added icon pack; Fixed Internal Server Error from Webhooks
 */

import groovy.json.*
import java.text.SimpleDateFormat
import groovy.json.JsonBuilder
import groovy.transform.Field

definition(
    name: "Rachio Community",
    namespace: "lnjustin",
    author: "Anthony Santilli, Justin Leonard",
    description: "Community version of Rachio Integration.",
    category: "Green Living",
    iconUrl: "https://s3-us-west-2.amazonaws.com/rachio-media/smartthings/Rachio-logo-100px.png",
    iconX2Url: "https://s3-us-west-2.amazonaws.com/rachio-media/smartthings/Rachio-logo-200px.png",
    iconX3Url: "https://s3-us-west-2.amazonaws.com/rachio-media/smartthings/Rachio-logo-300px.png",
    singleInstance: true,
    oauth: [displayName: "Rachio"],
    usesThirdPartyAuthentication: true)

preferences {
    page(name: "startPage")
    page(name: "dashboardSettingsPage")
    page(name: "apiKeyPage")
    page(name: "authPage")
    page(name: "noOauthPage")
    page(name: "devMigrationPage")
    page(name: "devicePage")
    page(name: "supportPage")
}

mappings {
    path("/rachioReceiver") { action: [ POST: "rachioReceiveHandler" ] }
    path("/rachioDashboard/:controllerID") { action: [ GET: "buildDashboard"] }
}

String appVer() { return "2.0.7" }

@Field Integer zoneRunTimeDefault = 10

def getZoneRunTimeDefaultSetting() {
    return (defaultZoneTime) ? defaultZoneTime : zoneRunTimeDefault
}

def appInfoSect()	{
    section() {
        def str = ""
        str += "${app?.name}"
        str += "\nCopyright\u00A9 Anthony Santilli, Justin Leonard"
        str += "\nVersion: ${appVer()}"
        paragraph str
    }
}

def startPage() {
    getAccessToken()
    if(!state?.accessToken) {
        noOauthPage()
    } else if(atomicState?.authToken) {
        devicePage()
    } else { authPage() }
}

def noOauthPage() {
    return dynamicPage(name: "noOauthPage", title: "Oauth Not Enabled", uninstall: true) {
        appInfoSect()
        section() {
            paragraph "Oauth is Not Enabled for this SmartApp.  Please Enable OAuth under App Settings", required: true, state: null
        }
        removeSect()
    }
}

def authPage()  {
    //log.debug "authPage()"
    def description = null
    def uninstallAllowed = false
    def oauthTokenProvided = false

    if(settings?.authKey && settings?.authKey.toString()?.length() > 10 && settings?.authKey != atomicState?.authToken) {
        atomicState?.authToken = settings?.authKey
        oauthTokenProvided = true
    }
    if(atomicState?.authToken) {
        getRachioDeviceData(true)
        def usrName = atomicState?.userName ?: ""
        description = usrName ? "You are signed in as $usrName" : "You are connected."
        uninstallAllowed = true
        oauthTokenProvided = true
    } else {
        description = "Login to Rachio Web App to get your API Key"
    }
    
    if (!oauthTokenProvided) { log.info "No Rachio AuthToken Found... Please Login to Web App > Account Settings > Get API Key..." }
    def authPara = !oauthTokenProvided ? "Please Login to Web App\n• Tap on More Tab\n• Click on Account Settings\n• Click Get API Key\n• Tap the Copy Icon\n• Press the back button\n• Paste the key in the input below" : "Tap Next to setup your sprinklers."
    return dynamicPage(name: "authPage", title: "Auth Page", nextPage: (oauthTokenProvided ? "devicePage" : null), uninstall: uninstallAllowed) {
        appInfoSect()
        section() {
            paragraph authPara
            href url: "https://app.rach.io", style: "external", required: (!oauthTokenProvided), state: (oauthTokenProvided ? "complete" : ""), title: "Rachio", description: description
            href "apiKeyPage", title: "Enter your API Key", description: (authKey ? "API Key Entered" : "Tap to Enter API Key"), state: (authKey ? "complete" : null), required: true
        }
        if(uninstallAllowed) { removeSect() }
    }
}

def apiKeyPage() {
    return dynamicPage(name: "apiKeyPage", title: "API Key", install: false, uninstall: false) {
        section() {
            input "authKey", "text", title: "API Key", required: true, description: "Paste the API Key Here...", submitOnChange: true
        }
    }
}

def removeSect() {
   // paragraph "Remove this App and Devices!", "WARNING!!!", "Last Chance to Stop!\nThis action is not reversible\n\nThis App and All Devices will be removed", required: true, state: null
}


// This method is called after "auth" page is done with Oauth2 authorization, then page "deviceList" with content of devicePage()
def devicePage() {
    //log.trace "devicePage()..."
    if(!atomicState?.authToken) {
        if (debugLogging) { log.debug "No accesstoken" }
        return
    }
    // Step 1: get (list) of available devices associated with the login account.
    def devData = getRachioDeviceData()
    def devices = getDeviceInputEnum(devData)
    if (debugLogging) { log.debug "rachioDeviceList(): ${devices}" }

    //step2: render the page for user to select which device
    return dynamicPage(name: "devicePage", title: "${(atomicState?.authToken && atomicState?.selectedDevices) ? "Select" : "Manage"} Your Devices", install: true, uninstall: true) {
        appInfoSect()
        section("Controller Configuration:"){
            input "controllers", "enum", title: "Select your controllers", description: "Tap to Select", required: true, multiple: true, options: devices, submitOnChange: true, image: (atomicState?.modelInfo ? atomicState?.modelInfo.img : "")
            atomicState?.controllerIds = settings?.controllers
        }
        if(settings?.controllers) {
            updateHwInfoMap(devData?.devices)
            devices?.sort { it?.value }?.each { cont->
                if(cont?.key in settings?.controllers) {
                    section("${cont?.value} Zones:"){
                        if(settings?."${cont?.key}_zones") {
                            def dData = devData?.devices?.find { it?.id == cont?.key }
                            if(dData) { devDesc(dData) }
                        }
                        def zoneData = zoneSelections(devData, cont?.key)
                        input "${cont?.key}_zones", "enum", title: "Select your zones", description: "Tap to Select", required: true, multiple: true, options: zoneData, submitOnChange: true
                    }
                }
            }
            section("Preferences:") {
                input(name: "pauseInStandby", title: "Disable Actions while in Standby?", type: "bool", defaultValue: true, multiple: false, submitOnChange: true,
                        description: "Allow your device to be disabled in Hubitat when you place your controller in Standby Mode...")
                paragraph "Select the Duration time to be used for manual Zone Runs (This can be changed under each zones device page)"
                input(name: "defaultZoneTime", title: "Default Zone Runtime (Minutes)", type: "number", description: "Tap to Modify", required: false, defaultValue: 10, submitOnChange: true)
            }

        }
        section() {
            href "supportPage", title: "Rachio Support", description: ""
            href "authPage", title: "Manage Login", description: ""
            href "dashboardSettingsPage", title: "Dashboard Setup", description: ""
        }
        section() {
            input "debugLogging", "bool", title: "Activate Debug Logging?", defaultValue: false, submitOnChange: true
        }
        if(settings?.controllers) {
            settings?.controllers?.each { contID ->
                if(contID) { 
                    section("") {
                    def localUri = getFullLocalApiServerUrl() + "/rachioDashboard/${contID}?access_token=${state.accessToken}"
                    def cloudUri = getFullApiServerUrl() + "/rachioDashboard/${contID}?access_token=${state.accessToken}"
                        paragraph("<a href='${cloudUri}'>Link for Dashboard of Controller ${contID}</a>")
                        d = getChildDevice(contID)
                        if (d) {
                            paragraph("<a href='${cloudUri}'>" + d.currentValue('dashboard') + "</a>")
                        }
                    }
                }
            }
        }
        removeSect()
    }
}

numPastDaysDashboardDefault = 2
numFutureDaysDashboardDefault = 2
showPrecipPercentDefault = true
showPrecipAmountDefault = true
showTempDefault = true
colorSchemeSelectionDefault = "Black with Color"
fontWeightDefault = "normal"
globalScaleDefault = 100
extraVerticalSpaceDefault = 0
extraHorizontalSpaceDefault = 0


def dashboardSettingsPage(){
    if(!state.accessToken){	
        //enable OAuth in the app settings or this call will fail
        createAccessToken()	
    }

    return dynamicPage(name: "dashboardSettings", title: "Dashboard Setup", nextPage: "devicePage"){
        section(getSectionTitle("Dashboard Day Settings")){
                input "numPastDaysDashboard", "number", title: "Number of Days in Past to Display on Dashboard", required: false, defaultValue: 2, submitOnChange: false
                input "numFutureDaysDashboard", "number", title: "Number of Days in Future to Display on Dashboard", required: false, defaultValue: 2, submitOnChange: false
        }
        section(getSectionTitle("Configure Information on Dashboard")) {
            input "showPrecipPercent", "bool", title: "Show Precipitation %?", defaultValue: true, submitOnChange: false
            input "showPrecipAmount", "bool", title: "Show Precipitation Amount?", defaultValue: true, submitOnChange: false
            input "showTemp", "bool", title: "Show High/Low Temperature?", defaultValue: true, submitOnChange: false
        }
        section(getSectionTitle("Configure Display Formatting")) {
            input(name: "iconSchemeSelection", type: "enum", title: "Select Icon Scheme:", required: true, multiple: false, options: ["Filled","Outline"], submitOnChange: false, defaultValue: 'Filled', width: 5)
            input(name: "colorSchemeSelection", type: "enum", title: "Select Color Scheme:", required: true, multiple: false, options: ["White with Color","Black with Color", "White without Color", "Black without Color", "Custom"], submitOnChange: false, defaultValue: 'Black with Color', width: 5)
            if(colorSchemeSelection == "Custom") {
                input "cloudColorCustom", "string", title: "Cloud Color (format: #FFFFFF)", submitOnChange: false
                input "lightColorCustom", "string", title: "Sun and Lightning Color (format: #FFFFFF)", submitOnChange: false
                input "precipColorCustom", "string", title: "Normal Precipitation Color (format: #FFFFFF)", submitOnChange: false
                input "frozenPrecipColorCustom", "string", title: "Frozen Precipitation Color (format: #FFFFFF)", submitOnChange: false           
                input "precipColorCustom", "string", title: "Normal Precipitation Color (format: #FFFFFF)", submitOnChange: false
                
                input "rainDropWateringColorCustom", "string", title: "Color of Rain Drop to indicate Watering (format: #FFFFFF)", submitOnChange: false
                input "rainDropAccentColorCustom", "string", title: "Color of Accent Mark on Rain Drop (format: #FFFFFF)", submitOnChange: false
                input "rainDropOutlineColorCustom", "string", title: "Color of Rain Drop Outline (format: #FFFFFF)", submitOnChange: false
                input "rainDropSkipColorCustom", "string", title: "Color of Rain Drop to indicate Watering Skip (format: #FFFFFF)", submitOnChange: false
                input "skipStrikethroughColorCustom", "string", title: "Color of Strikethrough on Rain Drop to indicate Watering Skip (format: #FFFFFF)", submitOnChange: false               
                input "windSkipColorCustom", "string", title: "Color of Wind to indicate Wind Skip (format: #FFFFFF)", submitOnChange: false
                input "rainSensorSkipColorCustom", "string", title: "Color of Rain Sensor to indicate Rain Sensor Skip (format: #FFFFFF)", submitOnChange: false
                input "freezeSkip0ColorCustom", "string", title: "Back Color of Icicle to indicate Freeze Skip (format: #FFFFFF)", submitOnChange: false
                input "freezeSkip1ColorCustom", "string", title: "Front Color of Icicle to indicate Freeze Skip (format: #FFFFFF)", submitOnChange: false
                input "saturatedSoilColorCustom", "string", title: "Color of Soil to indicate Soil Saturation Skip (format: #FFFFFF)", submitOnChange: false
                input "rainDropsPredictedColorCustom", "string", title: "Color of Small Rain Drops to indicate Predicted Rain Skip (format: #FFFFFF)", submitOnChange: false
                input "strokeColorCustom", "string", title: "Icon Outline Color (format: #FFFFFF)", submitOnChange: false
               
                input "dayTextColorCustom", "string", title: "Day Text Color (format: #FFFFFF)", submitOnChange: false
                input "precipTextColorCustom", "string", title: "Precipitation Text Color (format: #FFFFFF)", submitOnChange: false
                input "highTempTextColorCustom", "string", title: "High Temp Text Color (format: #FFFFFF)", submitOnChange: false
                input "lowTempTextColorCustom", "string", title: "Low Temp Text Color (format: #FFFFFF)", submitOnChange: false
                
            }
            input "fontWeight", "enum", title: "Text Weight", defaultValue: "normal", options:["normal", "bold"], multiple: false, width: 2, submitOnChange: false
          //  input "globalScale", "number", title: "Global Scale (in percent)",defaultValue: 100, submitOnChange: false
          //  input "extraVerticalSpace", "number", title: "Extra Vertical Spacing (in pts)", defaultValue: 0, submitOnChange: false
          //  input "extraHorizontalSpace", "number", title: "Extra Horizontal Spacing (in pts)", defaultValue: 0, submitOnChange: false

        }


        section(getSectionTitle("Attribution")) {
            paragraph("Rain drop icon, icicle icon, and rain sensor icon made by Freepik from www.flaticon.com")  
        }

    }
}

def getSectionTitle(txt) {
     return '<strong>' + txt + '</strong>'   
}

void settingUpdate(name, value, type=null) {
	//log.trace "settingUpdate($name, $value, $type)..."
	if(name && type) {
		app?.updateSetting("$name", [type: "$type", value: value])
	}
	else if (name && type == null){ app?.updateSetting(name.toString(), value) }
}

void settingRemove(name) {
	//log.trace "settingRemove($name)..."
    
     // if(name) { app?.deleteSetting("$name") }
	if(name) { app?.removeSetting("$name") }  // ported line
}

void appCleanup() {
  //  log.trace "appCleanup()"
    def stateItems = ["deviceId", "selectedDevice", "selectedZones", "inStandbyMode", "isWateringMap", "inStandbyModeMap"]
    def setItems = ["sprinklers", "selectedZones"]
    stateItems?.each { if(state?.containsKey(it as String)) {state.remove(it)} }
    setItems?.each { if(settings?.containsKey(it as String)) {settingRemove(it)} }
}

def devDesc(dev) {
    if(dev) {
        def str = ""
        def zoneCnt = dev?.zones?.findAll { it?.id in settings?."${dev?.id}_zones" }?.size() ?: 0
        str += "${atomicState?.installed ? "Installed" : "Installing"} Device:\n${atomicState?.modelInfo[dev?.id]?.desc}"
        str += "\n($zoneCnt) Zone(s) ${atomicState?.installed ? "are selected" :  "will be installed"}"
        paragraph "${str}", state: "complete", image: (atomicState?.modelInfo[dev?.id]?.img ?: "")
    }
}

def supportPage() {
    return dynamicPage(name: "supportPage", title: "Rachio Support", install: false, uninstall: false) {
        section() {
            href url: getSupportUrl(), style:"embedded", title:"Rachio Support (Web)", description:"", state: "complete", image: "http://rachio-media.s3.amazonaws.com/images/icons/icon-support.png"
            href url: getCommunityUrl(), style:"embedded", title:"Rachio Community (Web)", description:"", state: "complete", image: "http://d33v4339jhl8k0.cloudfront.net/docs/assets/5355b85be4b0d020874de960/images/58333550903360645bfa6cf8/file-Er3y7doeam.png"
        }
    }
}

def zoneSelections(devData, devId=null) {
    //log.debug "zoneSelections: $devData"
    def res = [:]
    if(!devData) { return res }
    devData?.devices.sort {it?.name}.each { dev ->
        if(dev?.id == devId) {
            dev?.zones?.sort {it?.zoneNumber }.each { zone ->
                def str = (zone?.enabled == true) ? "" : " (Disabled)"
                //log.debug "zoneId: $zone.id"
                def adni = [zone?.id].join('.')
                res[adni] = "${zone?.name}$str"
            }
        }
    }
    return res
}

// This was added to handle missing oauth on the app and notifying the user of why it failed.
def getAccessToken() {
    try {
        if(!atomicState?.accessToken) {
            atomicState?.accessToken = createAccessToken()
        }
        else { return true }
    }
    catch (ex) {
        def msg = "Error: OAuth is not Enabled for the Rachio Community application!!!.  Please click remove and Enable Oauth under the App Settings..."
        // sendPush(msg)
        log.warn "getAccessToken Exception | ${msg}"
        return false
    }
}

def getRachioDeviceData(noData=false) {
    //log.trace "getRachioDevicesData($noData)..."

    //Step1: GET account info "userId"
    atomicState.userId = getUserId();
    if (!atomicState?.userId) {
        log.error "No user Id found exiting"
        return
    }
    def userInfo = getUserInfo(atomicState?.userId)
    if (debugLogging) { log.debug "userInfo: ${userInfo}" }
    atomicState?.userName = userInfo?.username

    if(!noData) { return userInfo }
}

def getDeviceInputEnum(data) {
    //Step3: Obtain device information for a location
    def devices = [:]
    if(!data) { return devices }
    data?.devices.sort { it?.name }.each { sid ->
       //log.info "systemId: ${sid.id}"
       def dni = sid?.id
       devices[dni] = sid?.name
       //log.info "Found sprinkler with dni(locationId.gatewayId.systemId.zoneId): $dni and displayname: ${devices[dni]}"
    }
    // log.info "getRachioDevicesData() >> sprinklers: $devices"
    return devices
}

def getUserInfo(userId) {
    //log.trace "getUserInfo ${userId}"
    return _httpGet("person/${userId}");
}

def getUserId() {
    //log.trace "getUserId()"
    def res = _httpGet("person/info");
    if (res) {
        return res?.id;
    }
    return null
}

void updateHwInfoMap(devdata) {
    def result = [:]
    if(devdata && settings?.controllers) {
        def results = null
        results = devdata?.findAll { it?.id in settings?.controllers }
        results?.each { dev ->
            result[dev?.id] = getHardwareInfo(dev?.model)
        }
    }
    atomicState?.modelInfo = result
}

def getDevGeneration(devId) {
    if(devId && atomicState?.modelInfo[devId] && atomicState?.modelInfo[devId]?.gen) {
        return atomicState?.modelInfo[devId]?.gen
    } 
    return null
}

def getDevJsonTag(devId) {
    if(devId && atomicState?.modelInfo[devId] && atomicState?.modelInfo[devId]?.jsonTag) {
        return atomicState?.modelInfo[devId]?.jsonTag
    } 
    return null
}

def getHardwareInfo(val) {
    switch(val) {
        case "GENERATION1_8ZONE":
            return [model: "8ZoneV1", desc: "8-Zone (Gen 1)", img: getAppImg("rachio_gen1.png"), gen: "Gen1", jsonTag: "gen1IrrigationController"]
        case "GENERATION1_16ZONE":
            return [model: "16ZoneV1", desc: "16-Zone (Gen 1)", img: getAppImg("rachio_gen1.png"), gen: "Gen1", jsonTag: "gen1IrrigationController"]
        case "GENERATION2_8ZONE":
            return [model: "8ZoneV2", desc: "8-Zone (Gen 2)", img: getAppImg("rachio_gen2.png"), gen: "Gen2", jsonTag: "gen2IrrigationController"]
        case "GENERATION2_16ZONE":
            return [model: "16ZoneV2", desc: "16-Zone (Gen 2)", img: getAppImg("rachio_gen2.png"), gen: "Gen2", jsonTag: "gen2IrrigationController"]
        case "GENERATION3_8ZONE":
            return [model: "8ZoneV3", desc: "8-Zone (Gen 3)", img: getAppImg("rachio_gen3.png"), gen: "Gen3", jsonTag: "gen3IrrigationController"]
        case "GENERATION3_16ZONE":
            return [model: "16ZoneV3", desc: "16-Zone (Gen 3)", img: getAppImg("rachio_gen3.png"), gen: "Gen3", jsonTag: "gen3IrrigationController"]
        case "GENERATION3_8ZONE_LITE":
            return [model: "8ZoneV3Lite", desc: "8-Zone (Gen 3 Lite)", img: getAppImg("rachio_gen3_lite.PNG"), gen: "Gen3", jsonTag: "gen3IrrigationController"]
        
    }
    return [desc: null, model: null, img: "", gen: null]
}

def getAppImg(imgName)	{ return "https://raw.githubusercontent.com/lnjustin/Rachio-Community/master/Images/$imgName" }

def _httpGet(subUri, endpoint="open") {
    if (debugLogging) { log.debug "_httpGet($subUri)" }
    try {
        def baseURI = (endpoint == "open") ? "${apiEndpoint}/1/public" : getClosedApiEndpoint()
        def params = [
            uri: "${baseURI}/${subUri}",
            headers: ["Authorization": "Bearer ${atomicState.authToken}"]
        ]
        httpGet(params) { resp ->
            if(resp.status == 200) {
                return resp?.data
            } else {
                //refresh the auth token
                if (resp?.status == 500 && resp?.data?.status?.code == 14) {
                    if (debugLogging) { log.debug "Storing the failed action to try later" }
                    data.action = "getRachioDeviceData"
                    if (debugLogging) { log.debug "Refreshing your authToken!" }
                    // refreshAuthToken()
                } else {
                    log.error "Authentication error, invalid authentication method, lack of credentials, etc."
                }
              return null
            }
        }
    } catch (ex) {
        if(ex instanceof groovyx.net.http.HttpResponseException) {
            if(ex?.response) {
                log.error("httpGet() Response Exception | Status: ${ex?.response?.status} | Data: ${ex?.response?.data}")
            }
        } else {
            log.error "_httpGet exception: ${ex.message}"
        }
    }
}

def getDisplayName(iroName, zname) {
    if(zname) {
        return "${iroName}:${zname}"
    } else {
        return "Rachio"
    }
}

//Section3: installed, updated, initialize methods
def installed() {
    log.trace "Installed with settings: ${settings}"
    initialize()
    atomicState?.installed = true
}

def updated() {
    if (debugLogging) { log.debug "Updated with settings: ${settings}" }
    unsubscribe()
    initialize()
}

def initialize() {
    log.trace "initialized..."
    unschedule()
    scheduler()
    subscribe(app, onAppTouch)
    updateDevZoneStates() //Creates the selectedDevices maps in state
    runIn(2, "initStep2", [overwrite: true])
    sendActivityFeeds("is connected to Hubitat")
    atomicState.timeSendPush = null
}

void initStep2() {
    addRemoveDevices()
    appCleanup()
    runIn(3, "initStep3", [overwrite: true])
}

void initStep3() {
    initWebhooks()
    poll()
}

def uninstalled() {
    if (debugLogging) { log.debug "uninstalled() called... removing app and devices" }
    unschedule()
    //Remove any existing webhooks before uninstall...
    removeAllWebhooks()
    if(addRemoveDevices(true)) {
        //Revokes endpoint token...
              //  revokeAccessToken()
        state.accessToken = null   // ported line
        
        //Revokes Rachio Auth Token
        if(atomicState?.authToken) {
          atomicState?.authToken = null
        }
    }
}

def onAppTouch(event) {
    updated()
}

def scheduler() {
    // runEvery1Minute("heartbeat")
    runEvery15Minutes("heartbeat")
    //runEvery30Minutes("heartbeat")
}

def heartbeat() {
   // log.trace "heartbeat 15 minute keep alive poll()..."
    poll()
}

void initWebhooks() {
    settings?.controllers?.each { c->
        if(c) { 
            initWebhook(c)
            if (debugLogging) { log.debug "webhooks($c): ${getWebhookIdsForDev(c)}" }
        }
    }
}

//Subscribes to the selected controllers API events that will be used to trigger a poll
def initWebhook(controlId) {
    //log.trace "initWebhook..."
    def result = false
    def webhookIds = getWebhookIdsForDev(controlId)
    def cmdType = webhookIds == null ? "put" : "put"
    def apiWebhookUrl = "${rootApiUrl()}/notification/webhook"
    def endpointUrl = "${getApiServerUrl()}/${hubUID}/apps/${app.id}/rachioReceiver?access_token=${atomicState?.accessToken}"
    def bodyData
    if(!webhookIds) { 
        bodyData = new JsonOutput().toJson([device:[id: controlId], externalId: app.name, url: endpointUrl, eventTypes: webhookEvtTypes()])
    } else { 
        bodyData = new JsonOutput().toJson([id: webhookIds[0], externalId: app.name, url: endpointUrl, eventTypes: webhookEvtTypes()])
    }
    try {
        if(webhookHttp(apiWebhookUrl, bodyData, cmdType, controlId)) {
            log.info "Successfully ${cmdType == "post" ? "Created" : "Updated"} API Webhook Subscription for Controller (${controlId})!!!"
            result = true
        }
    } catch(ex) {
        log.error "initWebhook Exception: ${ex.message} | Data sent: ${bodyData}"
    }
    return result
}

def getWebhookIdsForDev(devId) {
    if(!devId) { return null }
    def data = _httpGet("notification/${devId}/webhook")
    def res = null
    if(data) { res = data?.findAll { it?.externalId == app?.name }?.collect { it?.id } }
    if (debugLogging) { log.debug "Get webhookIdsForDevice received data: ${data}. Webhook IDs for Device ${devId} include: ${res}" }
    return res
}

void removeWebhookByDevId(devId) {
    def webhookIds = getWebhookIdsForDev(devId)
    for (webhookId in webhookIds) {
        if(webhookHttp("${rootApiUrl()}/notification/webhook/${webhookId}", "", "delete", devId)) {
            log.warn "Removed API Webhook Subscription for (${webhookId})"
        }
        else {
            log.error "Failed to remove API Webhook Subscription for (${webhookId})"
        }
    }
}

//Removes the webhook subscription for the device.
void removeAllWebhooks() {
    if (debugLogging) { log.debug "removeAllWebhooks called." }
    if(settings?.controllers) {
        settings?.controllers?.each { c->
            if(c) {
                removeWebhookByDevId(c)
            }
        }
    }
}

//Returns the available event types to subscribe to.
def webhookEvtTypes() {
    if (debugLogging) { log.debug "Updating webhook event types" }
    def typeIds = []
    def okTypes = ["DEVICE_STATUS_EVENT", "ZONE_STATUS_EVENT", "SCHEDULE_STATUS_EVENT"] 
    def data = _httpGet("notification/webhook_event_type")
    if(data) {
        typeIds = data?.findAll { it?.name in okTypes }.collect { ["id":it?.id?.toString()] }
    }
    return typeIds
}

//Handles the http requests for the webhook methods
def webhookHttp(url, jsonBody, type=null, ctrlId) {
    if (debugLogging) { log.debug "webhookHttp($url, $jsonBody, $type, $ctrlId)" }
    def returnStatus = false
    def response = null
    def cmdParams = [
        uri: url,
        requestContentType: "application/x-www-form-urlencoded; charset=utf-8",
        headers: ["Authorization": "Bearer ${atomicState?.authToken}", "Content-Type": "application/json"],
        body: jsonBody
    ]
    
    try {
        if(type == "post") {
            httpPost(cmdParams) { resp ->
                response = resp
            }
        }
        else if(type == "put") {
            httpPut(cmdParams) { resp ->
                response = resp
            }
        }
        else if(type == "delete") {
            httpDelete(cmdParams) { resp ->
                response = resp
            }
        }
        if(response) {
            if (debugLogging) { log.debug "webhook http response status: ${response?.status} | data: ${response?.data}" }
            if(response?.status in [200, 201, 204]) {
                returnStatus = true
            } else {
                //refresh the auth token
                if (response?.status == 401) {
                    if (debugLogging) { log.debug "Refreshing your authToken!" }
                    // refreshAuthToken()
                } else {
                    log.error "Authentication error, invalid authentication method, lack of credentials, etc."
                }
            }
        } else { 
            log.error "Return Status in webhook Http: ${returnStatus}"
            return returnStatus 
        }
    } catch(Exception e) {
        log.error "webhookHttp Exception Error: ${e.message}"
    }
    return returnStatus
}

def getDeviceIds() {
    return settings?.controllers ?: null
}

def getZoneIds(devId) {
    return settings?."${devId}_zones" ?: null
}

def getZoneData(userId, zoneId) {
    return _httpGet("person/${userId}/${zoneId}")
}

void updateDevZoneStates() {
    def devMap = [:]
    def userInfo = getUserInfo(atomicState?.userId)
    userInfo?.devices?.each { dev ->
        if(dev?.id in settings?.controllers) {
            devMap[dev?.id] = [:]
            devMap[dev?.id]["name"] = dev?.name
            def zoneMap = [:]
            dev?.zones?.each { zone ->
               if(zone?.id in settings?."${dev?.id}_zones") {
                    zoneMap[zone?.id] = [:]
                    zoneMap[zone?.id] = zone?.name
                }
            }
            devMap[dev?.id]["zones"] = zoneMap
        }
    }
    atomicState?.selectedDevices = devMap
}

def getDeviceInfo(devId) {
    //log.trace "getDeviceInfo..."
    return _httpGet("device/${devId}")
}

def getCurSchedule(devId) {
    //log.trace "getCurSchedule..."
    return _httpGet("device/${devId}/current_schedule")
}

def getDeviceData(devId) {
    //log.trace "getDeviceData($devId)..."
    def result = _httpGet("device_with_current_schedule/${devId}")
   // log.trace "getDeviceData: ${result}"
    return result
}

def getDeviceState(devId) {
    //log.trace "getDeviceState($devId)..."
    def result = _httpGet("device/getDeviceState/${devId}", "closed")
  //  log.trace "getDeviceState: ${result}"
    return result
}

// Gets location id for device
def getDeviceDetails(devId) {
    //log.trace "getDeviceDetails($devId)..."
    def result = _httpGet("device/getDeviceDetails/${devId}", "closed")
  //  log.trace "getDeviceDetails: ${result}"
    return result
}

def getZoneDetails(devId) {
    //log.trace "getZoneDetails($devId)..."
    def result = _httpGet("device/listZones/${devId}", "closed")
  //  log.trace "getZoneDetails: ${result}"
    return result
}

def getDevicePastEvents(devId, start_time, end_time) {
    // start_time and end_time are Date objects
    //log.trace "getDeviceEvents($devId)..."
    def result = _httpGet("device/${devId}/event?startTime=${start_time.getTime()}&endTime=${end_time.getTime()}", "open")
  //  log.trace "getDeviceEvents: ${result}"
    return result
}

def getDeviceFutureEvents(devId, end_time) {
    // end_time is a Date object
   // log.trace "getDeviceUpcomingEvents(${devId})..."
    def jsonData = new JsonBuilder("device_id":devId, "hours_ahead":GetHoursUntilDate(end_time))
    def result = sendJsonGetResponse("events/upcoming", jsonData?.toString(), "closed", "post")
   // log.trace "Upcoming Events: ${result})"
    return result
}


def getDeviceNextEvent(devId) {
    //log.trace "getDeviceNextEvent(${devId})..."
    def jsonData = new JsonBuilder("device_id":devId)
    def result = sendJsonGetResponse("events/next", jsonData?.toString(), "closed", "post")
    log.trace "Next Event: ${result})"
    return result
}

def getDeviceAlerts(devId) {
    //log.trace "getDeviceAlerts(${devId})..."
    def jsonData = new JsonBuilder("device_id":devId)
    def result = sendJsonGetResponse("device/getActiveAlerts", jsonData?.toString(), "closed", "post")
    //log.trace "Active Alerts: ${result})"
    return result
}

def getDeviceWateringSummary(devId, start_date, end_date) {
    // start_date and end_date are Date objects
    log.trace "getDeviceWateringSummary(${devId})..."
    def jsonData = new JsonBuilder("device_id":devId, "start_date":getDateMap(start_date), "end_date":getDateMap(end_date))
    def result = sendJsonGetResponse("events/getWateringSummaryByInterval", jsonData?.toString(), "closed", "put")
    log.trace "Watering Summary: ${result})"
    return result
}

def getCalendar(locId, start_time, end_time) {
    // start_date and end_date are Date objects
    //log.trace "getCalendar(${locId})..."
    def jsonData = new JsonBuilder("location_id":locId, "start_time":formatDateToUtc(start_time), "end_time":formatDateToUtc(end_time))
    def result = sendJsonGetResponse("location/getCalendarForTimeRange", jsonData?.toString(), "closed", "post")
    //log.trace "Calendar: ${result})"
    return result
}

def getWeather(locId, start_date, end_date) {
    // start_date and end_date are Date objects
    //log.trace "getWeather(${locId})..."
    def jsonData = new JsonBuilder("location_id":locId, "start_date":getDateMap(start_date), "end_date":getDateMap(end_date))
    def result = sendJsonGetResponse("location/getWeatherByLocation", jsonData?.toString(), "closed", "post")
    //log.trace "Weather: ${result})"
    return result
}

def getLocationId(devId, detailsData) {
    def controllerDetails = detailsData.get(getDevJsonTag(devId))
    if (controllerDetails) return controllerDetails.locationId   
    return null
}

def cleanupObjects(id){
    if(settings?."${id}_zones") { settingRemove("${id}_zones") }
    removeWebhookByDevId(id)
}

def isWatering() {
    def i = atomicState?.isWateringMap?.findAll { it?.value == true }
    return (i?.size() > 0)
}

def removeWateringItem(id) {
    def i = atomicState?.isWateringMap ?: [:]
    if(id && i[id] != null) { i?.remove(id) }
    atomicState?.isWateringMap = i
}

def removeStandbyItem(id) {
    def i = atomicState?.inStandbyModeMap ?: [:]
    if(id && i[id] != null) { i?.remove(id) }
    atomicState?.inStandbyModeMap = i
}

def updateWateringItem(id, val) {
    def i = atomicState?.isWateringMap ?: [:]
    if(id && i != null) { i[id] = val }
    atomicState?.isWateringMap = i
}

def updateStandbyItem(String id, Boolean val) {
    def i = atomicState?.inStandbyModeMap ?: [:]
    if(id && i != null) { i[id] = val }
    atomicState?.inStandbyModeMap = i
}

def setDashboard(deviceId) {
    if (!state.refreshNum) state.refreshNum = 0
    state.refreshNum++
    def cloudUri = getFullApiServerUrl() + "/rachioDashboard/${deviceId}?access_token=${state.accessToken}&refreshNum=${refreshNum}"  // refreshNum forces the browser to retrieve the image instead of caching it
        
    String dashboard = '<style type=\'text/css\'>'
	dashboard += '.centerImage'
	dashboard += '{text-align:center;display:inline;height:50%;}'
	dashboard += '</style>'
	dashboard += '<table align="center" style="width:100%">'
	dashboard += '<tr>'
    dashboard += '<td><img src="' + cloudUri + '"/></td>'
    dashboard += '</tr>'
    dashboard += '</table>'

    d = getChildDevice(deviceId)
    d.sendEvent(name: 'dashboard', value: dashboard, displayed: true)   
}

def addRemoveDevices(uninst=false) {
    //log.trace "addRemoveDevices($uninst)..."
    try {
        def delete = []
        if(uninst == false) {
            def devsInUse = []
            def selectedDevices = atomicState?.selectedDevices
            selectedDevices?.each { contDev ->
                //Check if the discovered sprinklers are already initiated with corresponding device types.
                def d = getChildDevice(contDev?.key)
                if(!d) {
                    d = addChildDevice("lnjustin", getChildContName(), contDev?.key, null, [label: getDeviceLabelStr(contDev?.value?.name), completedSetup: true])
                    def localUri = getFullLocalApiServerUrl() + "/rachioDashboard/${contDev?.key}?access_token=${state.accessToken}"
                    String dashboard = '<style type=\'text/css\'>'
		            dashboard += '.centerImage'
		            dashboard += '{text-align:center;display:inline;width:100%;}'
		            dashboard += '</style>'
		            dashboard += '<table align="center" style="width:100%">'
		            dashboard += '<tr>'
                    dashboard += '<td width="100%"><img width="100%" src="' + localUri + '"/></td>'
                    dashboard += '</tr>'
                    dashboard += '</table>'
                    d.sendEvent(name: 'dashboard', value: dashboard, displayed: true, isStateChange: true)
                 //   d.completedSetup = true
                    log.info "Controller Device Created: (${d?.displayName}) with id: [${contDev?.key}]"
                } else {
                    if (debugLogging) { log.debug "found ${d?.displayName} with dni: ${dni?.key} already exists" }
                }
                devsInUse += contDev.key
                contDev?.value?.zones?.each { zoneDni ->
                    //Check if the discovered sprinklers are already initiated with corresponding device types.
                    def d2 = getChildDevice(zoneDni?.key)
                    if(!d2) {
                        d2 = addChildDevice("lnjustin", getChildZoneName(), zoneDni?.key, null, [label: getDeviceLabelStr(zoneDni?.value), completedSetup: true])
                      //  d2.completedSetup = true
                        log.info "Zone Device Created: (${d2?.displayName}) with id: [${zoneDni?.key}]"
                    } else {
                        if (debugLogging) { log.debug "found ${d2?.displayName} with dni: ${zoneDni?.key} already exists" }
                    }
                    devsInUse += zoneDni?.key
                }
            }
            if (debugLogging) { log.debug "devicesInUse: ${devsInUse}" }
            delete = app.getChildDevices().findAll { !(it?.deviceNetworkId in devsInUse) }
        } else {
            atomicState?.selectedDevices = []
            delete = app.getChildDevices()
        }
        if(delete?.size() > 0) {
            log.warn "Device Delete: ${delete} | Removing (${delete?.size()}) Devices..."
            delete?.each {
                cleanupObjects(it?.deviceNetworkId)
                deleteChildDevice(it?.deviceNetworkId)
                log.warn "Deleted the Device: ${it?.displayName}"
            }
        }
        return true
    } catch (ex) {
        if(ex instanceof hubitat.exception.ConflictException) {
            def msg = "Error: Can't Delete App because Devices are still in use in other Apps, Routines, or Rules.  Please double check before trying again."
            log.warn "addRemoveDevices Exception | $msg"
        }
   /*     else if(ex instanceof hubitat.app.exception.UnknownDeviceTypeException) {
            def msg = "Error: Device Handlers are likely Missing or Not Published.  Please verify all device handlers are present before continuing."
            log.warn "addRemoveDevices Exception | $msg"
        }
   */     else { log.error "addRemoveDevices Exception: ${ex}" }
        return false
    }
}

def getDeviceLabelStr(name) {
    return "Rachio - ${name}"
}

def getTimeSinceInSeconds(time) {
    if(!time) { return 10000 }
    return (int) (now() - time)/1000
}

// This is the endpoint the webhook sends the events to...
def rachioReceiveHandler() {
    def reqData = request.JSON
    if(reqData?.size() || reqData == [:]) {
        // log.trace "eventDatas: ${reqData?.summary}"
       // log.trace "Rachio Device Event | Summary: (${reqData?.summary}) | Requesting Latest Data from API | DeviceID: ${reqData?.deviceId}"
        if(reqData?.deviceId) {
            def dev = getChildDevice(reqData?.deviceId)
            poll(dev, "api")
        } else { poll() }
    }
}


//Section4: polling device info methods
void poll(child=null, type=null) {
    def lastPollSec = getTimeSinceInSeconds(atomicState?.lastPollDt)
    if(child && !type) { type = "device" }
    log.info "${app.label} -- Polling API for Latest Data -- Last Update was ($lastPollSec seconds ago)${type ? " | Reason: [$type]" : ""}"
    if(lastPollSec < 2) {
        runIn(3, "poll", [overwrite: true])
        //log.warn "Delaying poll... It's too soon to request new data"
        return
    }
    def selectedDevices = atomicState?.selectedDevices
    def ctrlCnt = 0
    def zoneCnt = 0
    selectedDevices?.each { cont->
        def devData = getDeviceData(cont?.key)
        if (debugLogging) { log.debug "devData for device ID ${cont?.key} is ${devData}" }
        def devDetails = getDeviceDetails(cont?.key)
        if (debugLogging) { log.debug "devDetails for device ID${cont?.key} is ${devDetails}" }
        def devState = getDeviceState(cont?.key)
        def devZoneDetails = getZoneDetails(cont?.key)
        def devNextEvent = getDeviceNextEvent(cont?.key)
        def devMonthlyWateringSummary = getDeviceWateringSummary(cont?.key, getMonthStart(), getMonthEnd()) 
        
        def cDev = getChildDevice(cont?.key)
        if(cDev) {
            ctrlCnt = ctrlCnt+1
            pollChild(cDev, devData, devDetails, devState, devZoneDetails, devMonthlyWateringSummary, devNextEvent)
            cont?.value?.zones?.each { zone->
                zoneCnt = zoneCnt+1
                def zDev = getChildDevice(zone?.key)
               // def zoneWateringJournal = getDashboardWateringJournalData(zone?.key)
                if(zDev) { pollChild(zDev, devData, devDetails, devState, devZoneDetails, devMonthlyWateringSummary, devNextEvent) }
            }
        }
    }
    log.info "Updating (${ctrlCnt}) Controllers and (${zoneCnt}) Zone devices..."
    atomicState?.lastPollDt = now()
}

def pollChild(child, devData, devDetails, devState, devZoneDetails, devMonthlyWateringSummary, devNextEvent) {
    if (pollChildren(child, devData, devDetails, devState, devZoneDetails, devMonthlyWateringSummary, devNextEvent)){
        //generate event for each (child) device type identified by different dni
    }
}

def pollChildren(childDev, devData, devDetails, devState, devZoneDetails, devMonthlyWateringSummary, devNextEvent) {
    if (debugLogging) { log.debug "updating child device ${childDev} with device data ${devData}" }
    try {
        if(childDev && devData) {
            String dni = childDev?.device?.deviceNetworkId
            String devLabel = childDev?.label
            def schedData = devData.currentSchedule
            def devStatus = devData
            
            def rainDelay = getCurrentRainDelay(devStatus)
            
            def status = devStatus?.status
            def onlStatus = status?.toString()?.toLowerCase() == "online" ? "online" : "offline"
            if(!childDev?.getDataValue("HealthEnrolled")) { childDev.updated() }
            Boolean pauseInStandby = settings?.pauseInStandby == false ? false : true
            Boolean inStandby = devData?.on.toString() != "true" ? true : false
            Boolean schedRunning = (schedData?.status == "PROCESSING") ? true : false
            def data = []
            Map selectedDevices = atomicState?.selectedDevices ?: [:]
            selectedDevices?.each { contDev ->
                if(dni == contDev?.key) {
                    updateStandbyItem(dni, inStandby)
                    // log.debug "schedRunning: ${schedRunning} | isWatering: ${isWatering()}"
                    
                    def controllerWebhookIDs = getWebhookIdsForDev(contDev?.key)
                    if (debugLogging) { log.debug "Webhook IDs for controller ${contDev?.key} include: ${controllerWebhookIDs}" }
                    if (isWatering() && !schedRunning) {
                        handleWateringSched(dni, false)
                    }
                    def newLabel = getDeviceLabelStr(devData?.name).toString()
                    if(devLabel != newLabel) {
                        childDev?.label = newLabel
                        log.info "Controller Label has changed from (${devLabel}) to [${newLabel}]"
                    }

                    data = [data: devData, schedData: schedData, rainDelay: rainDelay, status: status, standby: inStandby, pauseInStandby: pauseInStandby, stateData: devState, detailsData: devDetails, wateringSummaryData: devMonthlyWateringSummary, nextEvent: devNextEvent]
                } else {
                    contDev?.value?.zones?.each { zone ->
                        if (dni == zone?.key) {
                            def zoneData = findZoneData(zone?.key, devData)
                            def zoneState = findZoneState(zone?.key, devZoneDetails)
                            def newLabel = getDeviceLabelStr(zone?.value).toString()
                            if(devLabel != newLabel) {
                                childDev?.label = newLabel
                                log.info "Zone Label has changed from (${devLabel}) to [${newLabel}]"
                            }
                            data = [data: zoneData, schedData: schedData, devId: contDev?.key, status: status, standby: inStandby, pauseInStandby: pauseInStandby, stateData: zoneState]
                        }
                    }
                }
            }
            if (childDev && data != []) {
                childDev?.generateEvent(data)
                childDev?.sendEvent(name: "DeviceWatch-DeviceStatus", value: onlStatus, displayed: false)
            }
        } else { log.warn "pollChildren cannot update children because it is missing the required parameters..." }
        
    } catch (e) {
        log.error "exception polling children: ${e}"
    }
    return result
}

void setWateringDeviceState(devId, val) {
    // log.trace "setWateringDeviceState($devId, $val)"
    updateWateringItem(devId, val)
}

void handleWateringSched(devId, val=false) {
    // log.trace "handleWateringSched($devId, $val)"
    if(val == true) {
        log.trace "Watering is Active... Scheduling poll for every 1 minute"
        runEvery1Minute("poll")
    } else {
        log.trace "Watering has finished... 1 minute Poll has been unscheduled"
        unschedule("poll")
        runIn(60, "poll") // This is here just to make sure that the schedule actually stopped and that the data is really current.
    }
    updateWateringItem(devId, val)
}

def findZoneData(devId, devData) {
    if(!devId || !devData) { return null }
    if(devData?.zones) { return devData?.zones.find { it?.id == devId } }
    return null
}

def findZoneState(zoneId, zoneDetails) {
    if(!zoneId || !zoneDetails) { return null }
    if(zoneDetails?.zoneSummary) {
        def zone = zoneDetails?.zoneSummary.find { it?.zoneDetail.id == zoneId } 
        if (zone) {
            if (zone.zoneState != null) {
                zoneState = zone.zoneState
               // log.trace("Found Zone State: ${zoneState}")
                return zoneState
            }
        }
    }
    return null
}

def setValue(child, deviceId, newValue) {
    def jsonRequestBody = '{"value":'+ newValue+'}'
    def result = sendJson(child, jsonRequestBody, deviceId)
    return result
}

def sendJson(subUri, jsonBody, deviceId, standbyCmd=false, endpoint="open") {
    //log.trace "Sending: ${jsonBody}"
    def returnStatus = false
    
    def baseURI = (endpoint == "open") ? "${apiEndpoint}/1/public" : getClosedApiEndpoint()
    def cmdParams = [
        uri: "${baseURI}/${subUri}",
        requestContentType: "application/x-www-form-urlencoded; charset=utf-8",
        headers: ["Authorization": "Bearer ${atomicState?.authToken}", "Content-Type": "application/json"],
        body: jsonBody
    ]

    try{
        if(!standbyCmd && settings?.pauseInStandby == true && deviceId && atomicState?.inStandbyModeMap[deviceId] == true) {
            if (debugLogging) { log.debug "Skipping this command while controller is in 'Standby Mode'..." }
            return true
        }

        httpPut(cmdParams) { resp ->
            returnStatus = resp
            if(resp.status == 201 || resp.status == 204) {
                returnStatus = true
                //runIn(4, "poll", [overwrite: true])
            } else {
                //refresh the auth token
                if (resp.status == 401) {
                    if (debugLogging) { log.debug "Refreshing your authToken!" }
                    // refreshAuthToken()
                } else {
                    log.error "Authentication error, invalid authentication method, lack of credentials, etc."
                }
            }

        }
    } catch(Exception e) {
        log.error "sendJson Exception Error: ${e}"
    }
    return returnStatus
}

def sendJsonGetResponse(subUri, jsonBody, endpoint="open", type=null) {
   // log.trace "Send JSON With Response: ${jsonBody}"
    def returnStatus = false
    def returnData = null
    def response = null
    def baseURI = (endpoint == "open") ? "${apiEndpoint}/1/public" : getClosedApiEndpoint()
    def cmdParams = [
        uri: "${baseURI}/${subUri}",
        requestContentType: "application/x-www-form-urlencoded; charset=utf-8",
        headers: ["Authorization": "Bearer ${atomicState?.authToken}", "Content-Type": "application/json"],
        body: jsonBody
    ]

    try{

        if(type == "post") {
            httpPost(cmdParams) { resp ->
                response = resp
            }
        }
        else if(type == "put") {
            httpPut(cmdParams) { resp ->
                response = resp
            }
        }
        if(response) {
            returnData = response?.data
            if(response?.status in [200, 201, 204]) {
                returnStatus = true
                //runIn(4, "poll", [overwrite: true])
            } else {
                //refresh the auth token
                if (response?.status == 401) {
                    if (debugLogging) { log.debug "Refreshing your authToken!" }
                    // refreshAuthToken()
                } else {
                    log.error "Response status: ${response?.status} - Authentication error, invalid authentication method, lack of credentials, etc."
                }
            }

        } else { return returnStatus }
    } catch(Exception e) {
        log.error "sendJson Exception Error: ${e}"
    }
    return returnData
}

//Section6: helper methods ---------------------------------------------------------------------------------------------

def toJson(Map m) {
    return new groovy.json.JsonBuilder(m).toString()
}

def toQueryString(Map m) {
    return m.collect { k, v -> "${k}=${URLEncoder.encode(v.toString())}" }.sort().join("&")
}

def epochToDt(val) {
    return formatDt(new Date(val))
}

def formatDt(dt) {
    def tf = new SimpleDateFormat("MMM d, yyyy - h:mm:ss a")
    if(location?.timeZone) { tf?.setTimeZone(location?.timeZone) }
    else {
        log.warn "Hubitat TimeZone is not found or is not set... Please Try to open your Hubitat location and Press Save..."
        return null
    }
    return tf.format(dt)
}

def getDurationDesc(long secondsCnt) {
    int seconds = secondsCnt %60
    secondsCnt -= seconds
    long minutesCnt = secondsCnt / 60
    long minutes = minutesCnt % 60
    minutesCnt -= minutes
    long hoursCnt = minutesCnt / 60

    return "${minutes} min ${(seconds >= 0 && seconds < 10) ? "0${seconds}" : "${seconds}"} sec"
}

//Returns time differences is seconds
def GetTimeValDiff(timeVal) {
    try {
        def start = new Date(timeVal).getTime()
        def now = new Date().getTime()
        def diff = (int) (long) (now - start) / 1000
        //log.debug "diff: $diff"
        return diff
    } catch (ex) {
        log.error "GetTimeValDiff Exception: ${ex}"
        return 1000
    }
}

//Returns time differences is hours
def GetHoursUntilDate(futureDate) {
    // futureDate is a Date object
    try {
        def currentTime = new Date()
        def difference = futureDate.getTime() - currentTime.getTime()
        return Math.round(difference/3600000)
    } catch (ex) {
        log.error "GetTimeValDiffHours Exception: ${ex}"
        return 1000
    }
}

def formatDateToUtc(date) {
    def outFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'")
    outFormat.setTimeZone(TimeZone.getTimeZone("UTC"))
  //  if(location?.timeZone) { outFormat.setTimeZone(location?.timeZone) }
       
    def formattedDate = outFormat.format(date)
   // log.trace "formatted date = ${formattedDate}"
	return formattedDate
}

def getDateObjectFromUTCDt(utcDt) {
    return Date.parse("yyyy-MM-dd'T'HH:mm:ss'Z'", utcDt)
}

def getDateMap(date) {
    return [year: date[Calendar.YEAR], month: date[Calendar.MONTH]+1, day: date[Calendar.DATE]]
}

def getMonthStart() {
    def today = new Date()
    def monthStart = today.copyWith(date: 1, hourOfDay: 0, minute: 0, second: 0)
    return monthStart
}

def getMonthEnd() {
    def date = getMonthStart()
    Calendar calendar = GregorianCalendar.instance
    calendar.set(date[Calendar.YEAR], date[Calendar.MONTH], date[Calendar.DATE])
    def lastDayOfMonth = calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)
    def monthEnd = date.copyWith(date: lastDayOfMonth, hourOfDay: 23, minute: 59, second: 59)
    log.trace "last day of month: ${monthEnd}"
    return monthEnd
}

def getChildContName()	{ return "Rachio Controller" }
def getChildZoneName()	{ return "Rachio Zone" }
// def getServerUrl()		{ return "https://graph.api.smartthings.com" }    // commented out in port - doesn't seem to be needed?
def getShardUrl()		{ return getApiServerUrl() }
def getAppEndpoint()	{ return "https://app.rach.io" }
def getApiEndpoint()	{ return "https://api.rach.io" }
def getClosedApiEndpoint()	{ return "https://cloud-rest.rach.io" }
def getSupportUrl() 	{ return "http://support.rachio.com/" }
def getCommunityUrl() 	{ return "http://community.rachio.com/" }
def rootApiUrl() { return "https://api.rach.io/1/public" }

def debugEventFromParent(child, message) {
    child.sendEvent("name":"debugEventFromParent", "value":message, "description":message, displayed: true, isStateChange: true)
}

//send both push notification and mobile activity feeds
def sendPushAndFeeds(notificationMessage){
    if (atomicState.timeSendPush){
        if (now() - atomicState.timeSendPush > 86400000){
            sendPush("Rachio " + notificationMessage)
            sendActivityFeeds(notificationMessage)
            atomicState.timeSendPush = now()
        }
    } else {
        sendPush("Rachio " + notificationMessage)
        sendActivityFeeds(notificationMessage)
        atomicState.timeSendPush = now()
    }
    atomicState.authToken = null
}

def sendActivityFeeds(notificationMessage) {
   // def devices = app.getChildDevices(true)
    def devices = app.getChildDevices()
    devices.each { child ->
           //update(child)
        child.generateActivityFeedsEvent(notificationMessage)
    }
}

def standbyOn(child, deviceId) {
    if (debugLogging) { log.debug "standbyOn() command received from ${child?.device?.displayName}" }
    if(deviceId) {
        def jsonData = new JsonBuilder("id":deviceId)
        def res = sendJson("device/off", jsonData.toString(), deviceId, true)
        // poll()
        // child?.log("${child?.device.displayName} Standby OFF (Result: $res)")
        return res
    }
}

def standbyOff(child, deviceId) {
    if (debugLogging) { log.debug "standbyOff() command received from ${child?.device?.displayName}" }
    if(deviceId) {
        def jsonData = new JsonBuilder("id":deviceId)
        def res = sendJson("device/on", jsonData.toString(), deviceId, true)
        // // poll()
        // child?.log("${child?.device.displayName} Standby OFF (Result: $res)")
        return res
    }
}

def on(child, deviceId) {
    //log.trace "App on()..."
}

def off(child, deviceId) {
    //log.trace "Received off() command from (${child?.device?.displayName})..."
    // child?.log("Stop Watering - Received from (${child?.device.displayName})")
    if(deviceId) {
        def jsonData = new JsonBuilder("id":deviceId)
        def res = sendJson("device/stop_water", jsonData.toString(), deviceId)
        // poll()
        return res
    }
    return false
}

def setRainDelay(child, deviceId, delayVal) {
    if (delayVal) {
        def secondsPerDay = 24*60*60;
        def duration = delayVal * secondsPerDay;
        def jsonData = new JsonBuilder("id":child?.device?.deviceNetworkId, "duration":duration)
        def res = sendJson("device/rain_delay", jsonData?.toString(), deviceId)

        if (res) { child?.sendEvent(name: 'rainDelay', value: delayVal) }
        return res
    }
    return false
}

def isWatering(devId) {
    //log.debug "isWatering()..."
    def res = _httpGet("device/${devId}/current_schedule");
    def result = (res && res?.status) ? true : false
    return result
}

def getDeviceStatus(devId) {
    return _httpGet("device/${devId}")
}

def getControlLblById(id) {
    def dev = getChildDevice(id)
    return dev ? dev?.displayName : null
}

def getCurrentRainDelay(res) {
    if (debugLogging) { log.debug "getCurrentRainDelay with input ${res}" }
    // convert to configured rain delay to days.
    def ret =  (res?.rainDelayExpirationDate && res?.rainDelayStartDate) ? (res?.rainDelayExpirationDate - res?.rainDelayStartDate)/(26*60*60*1000) : 0
    def value = (long) Math.floor(ret + 0.5d)
    return value
}

def startZone(child, deviceId, zoneNum, mins) {
    def res = false
    def ctrlLbl = getControlLblById(deviceId)
    log.trace "Starting to Water on ${ctrlLbl ? "$ctrlLbl: " : ""}(ZoneName: ${child?.device.displayName} | ZoneNumber: ${zoneNum} | RunDuration: ${mins})"
    //child?.log("Starting to water on (ZoneName: ${child?.device.displayName} | ZoneNumber: ${zoneNum} | RunDuration: ${mins})...")
    def zoneId = child?.device?.deviceNetworkId
    if (zoneId && zoneNum && mins) {
        def duration = mins.toInteger() * 60
        def jsonData = new JsonBuilder("id":zoneId, "duration":duration)
        //log.debug "startZone jsonData: ${jsonData}"
        res = sendJson("zone/start", jsonData?.toString(), deviceId)
    } else { log.error "startZone Missing ZoneId or duration... ${zoneId} | ${mins}" }
    return res
}

def runAllZones(child, deviceId, mins) {
    def res = false
    //log.trace "runAllZones(ZoneName: ${child?.device?.displayName}, Duration: ${mins})..."
    //child?.log("runAllZones(ZoneName: ${child?.device?.displayName} | Duration: ${mins})")
    def selectedDevices = atomicState?.selectedDevices ?: [:]
    if (deviceId && selectedDevices[deviceId] && selectedDevices[deviceId]?.zones && mins) {
        def zoneData = []
        def sortNum = 1
        def duration = mins.toInteger() * 60
        selectedDevices[deviceId]?.zones?.each { z ->
            zoneData << ["id":z?.key, "duration":duration, "sortOrder": sortNum]
            sortNum = sortNum+1
        }
        def jsonData = new JsonBuilder("zones":zoneData)
        //child?.log("runAllZones  jsonData: ${jsonData}")
        res = sendJson("zone/start_multiple", jsonData?.toString(), deviceId)
    } else { log.error "runAllZones Missing ZoneIds or Duration... ${selectedDevices[deviceId]?.zones} | ${mins}" }
    return res
}

// TO DO: update this method with the latest API that includes pause zone
def pauseScheduleRun(child) {
    //log.trace "pauseScheduleRun..."
    def schedData = getCurSchedule(atomicState?.deviceId)
    def schedRuleData = getScheduleRuleInfo(schedData?.scheduleRuleId)
    child?.log "schedRuleData: $schedRuleData"
    child?.log "Schedule Started on: ${epochToDt(schedRuleData?.startDate)} | Total Duration: ${getDurationDesc(schedRuleData?.totalDuration.toLong())}"

    if(schedRuleData) {
        def zones = schedRuleData?.zones?.sort { a , b -> a.sortOrder <=> b.sortOrder }
        zones?.each { zn ->
            child?.log "Zone#: ${zn?.zoneNumber} | Zone Duration: ${getDurationDesc(zn?.duration.toLong())} | Order#: ${zn?.sortOrder}"
            if(zn?.zoneId == schedData?.zoneId) {
                def zoneRunTime = "Elapsed Runtime: ${getDurationDesc(GetTimeValDiff(schedData?.zoneStartDate.toLong()))}"
                child?.log "Zone Started: ${epochToDt(schedData?.zoneStartDate)} | ${zoneRunTime} | Cycle Count: ${schedData?.cycleCount} | Cycling: ${schedData?.cycling}"
            }
        }
    }
}

def pauseZoneRun(child, devId, duration) {
    def jsonData = new JsonBuilder("id":devId, "duration":duration)
    def result = sendJson("device/pause_zone_run", jsonData?.toString(), devId)
    return result
}

def resumeZoneRun(child, devId) {
    def jsonData = new JsonBuilder("id":devId)
    def result = sendJson("device/resume_zone_run", jsonData?.toString(), devId)
    return result
}

//Required by child devices
def getZones(device) {
   // log.trace "getZones(${device.label})..."
    def res = _httpGet("device/${device?.deviceNetworkId}")
    return !res ? null : res?.zones
}

def getScheduleRuleInfo(schedId) {
    def res = _httpGet("schedulerule/${schedId}")
    return res
}

// Dashboard

def getDashboardStartDate() {
    def today = new Date()
    today.set(hourOfDay: 0, minute: 0, second: 0)
    def numPastDaysDashboardSetting = (numPastDaysDashboard == null) ? numPastDaysDashboardDefault : numPastDaysDashboard
    def intDays = (int) numPastDaysDashboardSetting
    return today-intDays
}

def getDashboardEndDate() {
    def today = new Date()
    today.set(hourOfDay: 23, minute: 59, second: 59)
    def numFutureDaysDashboardSetting = (numFutureDaysDashboard == null) ? numFutureDaysDashboardDefault : numFutureDaysDashboard
    def intDays = (int) numFutureDaysDashboardSetting
    return today+intDays
}


def buildDashboard() {
    
    def numPastDaysDashboardSetting = (numPastDaysDashboard == null) ? numPastDaysDashboardDefault : numPastDaysDashboard
    def numFutureDaysDashboardSetting = (numFutureDaysDashboard == null) ? numFutureDaysDashboardDefault : numFutureDaysDashboard
    def showPrecipPercentSetting = (showPrecipPercent == null) ? showPrecipPercentDefault : showPrecipPercent
    def showPrecipAmountSetting = (showPrecipAmount == null) ? showPrecipAmountDefault : showPrecipAmount
    def showTempSetting = (showTemp == null) ? showTempDefault : showTemp
    def colorSchemeSelectionSetting = (colorSchemeSelection == null) ? colorSchemeSelectionDefault : colorSchemeSelection
    def fontWeightSetting = (fontWeight == null) ? fontWeightDefault : fontWeight
  //  def globalScaleSetting = (globalScale == null) ? globalScaleDefault : globalScale
 //   def extraVerticalSpaceSetting = (extraVerticalSpace == null) ? extraVerticalSpaceDefault : extraVerticalSpace
//    def extraHorizontalSpaceSetting = (extraHorizontalSpace == null) ? extraHorizontalSpaceDefault : extraHorizontalSpace
    def extraVerticalSpaceSetting = 0
    def extraHorizontalSpaceSetting = 0
   
    def devId = params.controllerID
    def startDate = getDashboardStartDate()
    def endDate = getDashboardEndDate()
    
    def detailsData = getDeviceDetails(devId)
    def locationId = getLocationId(devId, detailsData)
    
    def rainSensorState = getDeviceState(devId)?.state?.rainSensorTripped
    
    def jsonSlurper = new JsonSlurper()
    def weatherData = getWeather(locationId, startDate, endDate).weatherReadings
    def pastEventsData = getDevicePastEvents(devId, startDate, endDate)
    def futureEventsData = getDeviceFutureEvents(devId, endDate).entries
    
    colorScheme = getColorScheme(colorSchemeSelectionSetting)
    
    Integer columnWidth = 64 + extraHorizontalSpaceSetting
    Integer numDays = 1 + numPastDaysDashboardSetting + numFutureDaysDashboardSetting
    Integer svgWidth = columnWidth * numDays
    if (debugLogging) { log.debug("Column Width = ${columnWidth}. numDays = ${numDays}. svgWidth = ${svgWidth}") }
    svg = '<svg version="1.1" id="weather" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100%" viewBox="0 0 ' + Integer.toString(svgWidth) + ' 140"  xml:space="preserve">'
    
    svg += '<style type="text/css"> .cloud{fill:' + colorScheme.cloudColor + ';} .light{fill:' + colorScheme.lightColor + ';} .precip{fill:' + colorScheme.precipColor + ';} .frozenPrecip{fill:' + colorScheme.frozenPrecipColor + ';} .rainDropWatering{fill:' + colorScheme.rainDropWateringColor + ';stroke:' + colorScheme.strokeColor + ';} .rainDropAccent{fill:' + colorScheme.rainDropAccentColor + ';} .rainDropSkip{fill:' + colorScheme.rainDropSkipColor + ';stroke:' + colorScheme.strokeColor + ';} .skipStrikethrough{fill:' + colorScheme.skipStrikethroughColor + '} .saturatedSoil{fill:' + colorScheme.saturatedSoilColor + ';stroke:' + colorScheme.strokeColor + ';} .rainDropsPredicted{fill:' + colorScheme.rainDropsPredictedColor + ';stroke:' + colorScheme.strokeColor + ';} .freezeSkip0{fill:' + colorScheme.freezeSkip0Color + ';stroke:' + colorScheme.strokeColor + ';} .freezeSkip1{fill:' + colorScheme.freezeSkip1Color + ';stroke:' + colorScheme.strokeColor + ';} .windSkip{fill:' + colorScheme.windSkipColor + ';stroke:' + colorScheme.strokeColor + ';} .dayText{fill:' + colorScheme.dayTextColor + ';} .rainSensorSkip{fill:' + colorScheme.rainSensorSkipColor + ';stroke:' + colorScheme.strokeColor + ';} .precipText{fill:' + colorScheme.precipTextColor + '; word-spacing:110%;} .tempText{fill:url(#bicolored); word-spacing:100%;} .largeFontClass {font-family: "Oswald", sans-serif; text-transform: uppercase; font-size:12px;} .smallFontClass {font-family:"Oswald", sans-serif;font-size:10px;} .fontWeightClass {font-weight:' + fontWeightSetting + ';} </style> <defs> <linearGradient id="bicolored"> <stop offset="50%" stop-color="' + colorScheme.highTempTextColor + '"/> <stop offset="50%" stop-color="' + colorScheme.lowTempTextColor + '"/> </linearGradient> </defs>'
    
//    svg += '<g transform="scale(' + Double.toString((globalScaleSetting-40)/100) + ')">'
     svg += '<g>'
    
    def today = new Date()
    today.set(hourOfDay: 0, minute: 0, second: 0)
    def yesterday = today.copyWith(hourOfDay: 23, minute: 59, second: 59)
    yesterday -= 1
    def todayDateMap = getDateMap(today)
    def sevenDaysLater = today.copyWith(hourOfDay: 23, minute: 59, second: 59)
    sevenDaysLater += 6
    
    def iconPack = getIconPreference()
    def voffset = iconPack == "Outline" ? '-2' : '0'
    
    def i = 0
    for (date in startDate..endDate) {
        
        def dateMap = getDateMap(date)
       
        def dayLabel = ""
        def wateringIconOffset = 0
        if (dateMap == todayDateMap) { 
            dayLabel = "Today" 
            wateringIconOffset = 15
        }
        else if (date.after(today) && date.before(sevenDaysLater)) { 
            dayLabel = date.format('EEE') 
            wateringIconOffset = 8
        }
        else { 
         //   dayLabel = date.format('M/d') 
         //   if (dateMap.month > 9) wateringIconOffset = 11
         //   else wateringIconOffset = 8
            dayLabel = date.format('EEE') 
            wateringIconOffset = 8
            
        }

        def weather = weatherData?.find { it?.date == dateMap }
        if (debugLogging) { log.debug "Weather is: ${weather}" }
        def precipPercent = (weather.precipProbability > 0) ? ((int) (weather.precipProbability * 100)).toString() + "%" : ""
        def precipAmount = (weather.calculatedPrecip > 0) ? weather.calculatedPrecip + "\"" : ""
        def highTemp = weather.temperatureMax
        def lowTemp = weather.temperatureMin
        def weatherIconText = weather.weatherType
        def weatherIcon = null
        
        if (debugLogging) { log.debug "Weather icon text for ${dayLabel} is ${weatherIconText}" }
        
        weatherIcon = getWeatherIcon(weatherIconText)

        def pastEvents = pastEventsData?.findAll { getDateMap(new Date(it?.eventDate)) == dateMap }
        if (debugLogging) { log.debug "Past Events are: ${pastEvents}" }
        def futureEvents = futureEventsData?.findAll { getDateMap(getDateObjectFromUTCDt(it?.timestamp)) == dateMap }
        if (debugLogging) { log.debug "Future Events are: ${futureEvents}" }
        
        def irrigationIcon = getIrrigationIcon(pastEvents, futureEvents, rainSensorState)
        
        // Build SVG Body      
        Integer halfColumnWidth = columnWidth / 2
        columnCenter = Integer.toString(halfColumnWidth*(i+1))
        
        svg += '<g transform="translate(' + Integer.toString(columnWidth*i) + ', 10)">'
        svg += '<text x="' + Integer.toString(halfColumnWidth) + '" y="1.5" text-anchor="middle" class="dayText largeFontClass fontWeightClass">' + dayLabel + '</text>'
        
         svg += '<g transform="translate(' + Double.toString(halfColumnWidth + wateringIconOffset) + ',-15) scale(.8)">'
        svg += irrigationIcon
          
        svg += '</g>'
        
        svg += '<g transform="translate(' + Double.toString((extraHorizontalSpaceSetting/2) + 2) + ', ' + voffset + ')">'
        svg += weatherIcon
        svg += '</g>'
        
        if (showTempSetting) {  // only show % for dates that are on or after today
            tempBaseY = 68
            svg += '<text x="' + Integer.toString(halfColumnWidth) + '" y="' + Long.toString(tempBaseY + extraVerticalSpaceSetting) + '" text-anchor="middle" class="tempText largeFontClass fontWeightClass">' + highTemp + ' | ' + lowTemp + '</text>'

        }
        if (showPrecipPercentSetting && date.after(yesterday)) {
            popBaseY = showTempSetting ? 81 : 68
            precipPopExtraVerticalSpacing = showTempSetting ? extraVerticalSpaceSetting*2 : extraVerticalSpaceSetting
            svg += '<text x="' + Integer.toString(halfColumnWidth) + '" y="' + Long.toString((popBaseY+precipPopExtraVerticalSpacing)) + '" text-anchor="middle" class="precipText smallFontClass ">' + precipPercent + '</text>'

        }
        
        if (showPrecipAmountSetting) {
            precipAmountBaseY = 68
            tempExtraVerticalSpacing = extraVerticalSpaceSetting
            if (showPrecipPercentSetting && showTempSetting) {
                precipAmountBaseY = 93 
                tempExtraVerticalSpacing = extraVerticalSpaceSetting*3
            }
            else if (showPrecipPercentSetting || showTempSetting) {
                precipAmountBaseY = 81
                tempExtraVerticalSpacing = extraVerticalSpaceSetting*2
            }
            svg += '<text x="' + Integer.toString(halfColumnWidth) + '" y="' + Long.toString((precipAmountBaseY + tempExtraVerticalSpacing)) + '" text-anchor="middle" class="precipText smallFontClass">' + precipAmount + '</text>'

        }
        
        /*
        irrigationBaseY = 65
        irrigationExtraVerticalSpacing = extraVerticalSpaceSetting
        if (showPrecipPercentSetting && showPrecipAmountSetting && showTempSetting) {
            irrigationBaseY = 100
            irrigationExtraVerticalSpacing = extraVerticalSpaceSetting*4
        }
        else if ((showPrecipPercentSetting && showPrecipAmountSetting)) {
            irrigationBaseY = 86
            irrigationExtraVerticalSpacing = extraVerticalSpaceSetting*3
        }
        else if ((showPrecipPercentSetting && showTempSetting) || (showPrecipAmountSetting && showTempSetting)) {
            irrigationBaseY = 91
            irrigationExtraVerticalSpacing = extraVerticalSpaceSetting*3
        }
        else if (showPrecipPercentSetting || showPrecipAmountSetting) {
            irrigationBaseY = 76
            irrigationExtraVerticalSpacing = extraVerticalSpaceSetting*2
        }
        else if (showTempSetting) {
            irrigationBaseY = 80
            irrigationExtraVerticalSpacing = extraVerticalSpaceSetting*2
        }

        svg += '<g transform="translate(' + Double.toString((40 + extraHorizontalSpaceSetting)/2) + ',' + Long.toString(irrigationBaseY + irrigationExtraVerticalSpacing) + ')">'
        svg += irrigationIcon
          
        svg += '</g>'
*/
            
        svg += '</g>'
        i += 1
    }
    svg += '</g></svg>'
    render contentType: "image/svg+xml", data: svg, status: 200
}


def getIconPreference() {
    return (settings["iconSchemeSelection"] != null) ? settings["iconSchemeSelection"] : "Filled"
}

def getWeatherIcon(weatherIconText) {
    def weatherIcon = null
    def iconPack = getIconPreference()
    if (iconPack == "Filled") {
        if (weatherIconText == 'CHANCE_FLURRIES') { weatherIcon = chanceflurries }
        else if (weatherIconText == 'CHANCE_RAIN') { weatherIcon = chancerain }
        else if (weatherIconText == 'CHANCE_SLEET') { weatherIcon = chancesleet }
        else if (weatherIconText == 'CHANCE_SNOW') { weatherIcon = chancesnow }
        else if (weatherIconText == 'CHANCE_TSTORMS') { weatherIcon = chancetstorms }
        else if (weatherIconText == 'CLEAR') { weatherIcon = clear }
        else if (weatherIconText == 'CLOUDY') { weatherIcon = cloudy }
        else if (weatherIconText == 'FLURRIES') { weatherIcon = flurries }
        else if (weatherIconText == 'FOG') { weatherIcon = fog }
        else if (weatherIconText == 'HAZY') { weatherIcon = hazy }
        else if (weatherIconText == 'MOSTLY_CLOUDY') { weatherIcon = mostlycloudy }
        else if (weatherIconText == 'MOSTLY_SUNNY') { weatherIcon = mostlysunny }
        else if (weatherIconText == 'RAIN') { weatherIcon = rain }
        else if (weatherIconText == 'SLEET') { weatherIcon = sleet }
        else if (weatherIconText == 'SNOW') { weatherIcon = snow }
        else if (weatherIconText == 'SUNNY') { weatherIcon = sunny }
        else if (weatherIconText == 'TSTORMS') { weatherIcon = tstorms }
        else if (weatherIconText == 'PARTLY_CLOUDY') { weatherIcon = partlycloudy }
        else if (weatherIconText == 'PARTLY_SUNNY') { weatherIcon = partlysunny }    
    }
    else if (iconPack == "Outline") {
        if (weatherIconText == 'CHANCE_FLURRIES') { weatherIcon = chanceflurries2 }
        else if (weatherIconText == 'CHANCE_RAIN') { weatherIcon = chancerain2 }
        else if (weatherIconText == 'CHANCE_SLEET') { weatherIcon = chancesleet2 }
        else if (weatherIconText == 'CHANCE_SNOW') { weatherIcon = chancesnow2 }
        else if (weatherIconText == 'CHANCE_TSTORMS') { weatherIcon = chancetstorms2 }
        else if (weatherIconText == 'CLEAR') { weatherIcon = clear2 }
        else if (weatherIconText == 'CLOUDY') { weatherIcon = cloudy2 }
        else if (weatherIconText == 'FLURRIES') { weatherIcon = flurries2 }
        else if (weatherIconText == 'FOG') { weatherIcon = fog2 }
        else if (weatherIconText == 'HAZY') { weatherIcon = hazy2 }
        else if (weatherIconText == 'MOSTLY_CLOUDY') { weatherIcon = mostlycloudy2 }
        else if (weatherIconText == 'MOSTLY_SUNNY') { weatherIcon = mostlysunny2 }
        else if (weatherIconText == 'RAIN') { weatherIcon = rain2 }
        else if (weatherIconText == 'SLEET') { weatherIcon = sleet2 }
        else if (weatherIconText == 'SNOW') { weatherIcon = snow2 }
        else if (weatherIconText == 'SUNNY') { weatherIcon = sunny2 }
        else if (weatherIconText == 'TSTORMS') { weatherIcon = tstorms2 }
        else if (weatherIconText == 'PARTLY_CLOUDY') { weatherIcon = partlycloudy2 }
        else if (weatherIconText == 'PARTLY_SUNNY') { weatherIcon = partlysunny2 }            
    }
    return weatherIcon
}

def getIrrigationIcon(pastEvents, futureEvents, rainSensorState) {
    def irrigationIcon = null
    
    def iconPack = getIconPreference()
    def eventsList = []
        
        if (!pastEvents.isEmpty()) {
            for (event in pastEvents) {
                def foundEvent = [:]
                switch(event.subType) {
                    // show watering icon if ANY watering is done on this date; else show skip icon
                    case "SCHEDULE_STARTED":
                        foundEvent = [eventType : "WATER", eventSubType : null, eventDescription: event.summary]
                        irrigationIcon = iconPack == "Filled" ? sprinklerWatering : sprinklerWatering2
                        break
                    case "WEATHER_INTELLIGENCE_SKIP":
                        foundEvent = [eventType : "SKIP", eventSubType : "RAIN_PREDICTED", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? rainSkip : rainSkip2 }
                        break
                    case "WEATHER_INTELLIGENCE_CLIMATE_SKIP":
                        foundEvent = [eventType : "SKIP", eventSubType : "SOIL_SATURATED", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? saturationSkip : saturationSkip2 }
                        break
                    case "MANUAL_SKIP":
                        foundEvent = [eventType : "SKIP", eventSubType : "MANUAL", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? genericSkip : genericSkip2 }
                        break
                }
                if(!foundEvent.isEmpty()) { eventsList.add(foundEvent) }
            }
        }
        else if (!futureEvents.isEmpty()) {
            for (event in futureEvents) {
                def foundEvent = [:]
                switch(event.type) {
                    // show watering icon if ANY watering is done on this date; else show skip icon
                    case "FUTURE_FEED_SCHEDULE_EVENT":
                        foundEvent = [eventType : "WATER", eventSubType : null, eventDescription: event.summary]
                        if (rainSensorState == false) { irrigationIcon = iconPack == "Filled" ? sprinklerWatering : sprinklerWatering2 }
                        else if (rainSensorState == true) { irrigationIcon = iconPack == "Filled" ? rainSensorSkip : rainSensorSkip2 }
                        break
                    case "RAIN_FUTURE_FEED_SKIP_EVENT":
                        foundEvent = [eventType : "SKIP", eventSubType : "RAIN_PREDICTED", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? rainSkip : rainSkip2 }
                        break
                    case "WIND_FUTURE_FEED_SKIP_EVENT":
                        foundEvent = [eventType : "SKIP", eventSubType : "WIND_PREDICTED", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? windSkip : windSkip2 }
                        break
                    case "FREEZE_FUTURE_FEED_SKIP_EVENT":
                        foundEvent = [eventType : "SKIP", eventSubType : "FREEZE_PREDICTED", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? freezeSkip : freezeSkip2 }
                        break
                    case "CLIMATE_FUTURE_FEED_SKIP_EVENT":
                        foundEvent = [eventType : "SKIP", eventSubType : "SOIL_SATURATED", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? saturationSkip : saturationSkip2 }
                        break
                    case "MANUAL_FUTURE_FEED_SKIP_EVENT":
                        foundEvent = [eventType : "SKIP", eventSubType : "MANUAL", eventDescription: event.summary]
                        if (eventsList.isEmpty()) { irrigationIcon = iconPack == "Filled" ? genericSkip : genericSkip2 }
                        break
                }
                if(!foundEvent.isEmpty()) { eventsList.add(foundEvent) }
            }
        }   
    return irrigationIcon
}

def getColorScheme(schemeSelection) {
    
    // new color scheme:
    // white: #c0bfbc
    // yellow: #f6d32d
    // blue: #99c1f1
    
    // old color scheme
    white = "#FFFFFF"
    black = "#000000"
    red = "#cc3333"
  //  yellow = "#f4a71d"
    yellow = "#f6d32d"
  //  darkBlue = "#2885c7"
   // lightBlue = "#72b7d4"
    darkBlue = "#99c1f1"
    lightBlue = "#99c1f1"
    
    if (schemeSelection == "White with Color") {
        return [cloudColor: white, lightColor: yellow, precipColor: darkBlue, frozenPrecipColor: lightBlue, rainDropWateringColor: darkBlue, rainDropAccentColor: white, rainDropSkipColor:red, skipStrikethroughColor: white, saturatedSoilColor: darkBlue, rainDropsPredictedColor: darkBlue, freezeSkip0Color: lightBlue, freezeSkip1Color: darkBlue, windSkipColor: lightBlue, rainSensorSkipColor: darkBlue, strokeColor: none, dayTextColor: white, precipTextColor: darkBlue, highTempTextColor: white, lowTempTextColor: white]  
    }
    else if (schemeSelection == "Black with Color") {
        return [cloudColor: black, lightColor: yellow, precipColor: darkBlue, frozenPrecipColor: lightBlue, rainDropWateringColor: darkBlue, rainDropAccentColor: black, rainDropSkipColor:red, skipStrikethroughColor: black, saturatedSoilColor: darkBlue, rainDropsPredictedColor: darkBlue, freezeSkip0Color: lightBlue, freezeSkip1Color: darkBlue,  windSkipColor: lightBlue, rainSensorSkipColor: darkBlue, strokeColor: none, dayTextColor: black, precipTextColor: darkBlue, highTempTextColor: black, lowTempTextColor: black]  
    }
    else if (schemeSelection == "White without Color") {
        return [cloudColor: white, lightColor: white, precipColor: white,  frozenPrecipColor: white, rainDropWateringColor: white, rainDropAccentColor: black, rainDropSkipColor:black, skipStrikethroughColor: white, saturatedSoilColor: black, rainDropsPredictedColor: white, freezeSkip0Color: white, freezeSkip1Color: white,  windSkipColor: white, rainSensorSkipColor: white, strokeColor: white, dayTextColor: white, precipTextColor: white, highTempTextColor: white, lowTempTextColor: white]  
    }
    else if (schemeSelection == "Black without Color") {
        return [cloudColor: black, lightColor: black, precipColor: black, frozenPrecipColor: black, rainDropWateringColor: black, rainDropAccentColor: white, rainDropSkipColor: white, skipStrikethroughColor: black, saturatedSoilColor: white, rainDropsPredictedColor: black, freezeSkip0Color: black, freezeSkip1Color: black, windSkipColor: black, rainSensorSkipColor: black, strokeColor: black, dayTextColor: black, precipTextColor: black, highTempTextColor: black, lowTempTextColor: black]  
    }
    else if (schemeSelection == "Custom") {
        return [cloudColor: cloudColorCustom, lightColor: lightColorCustom, precipColor: precipColorCustom, rainDropWateringColor: rainDropWateringColorCustom, rainDropAccentColor: rainDropAccentColorCustom, rainDropSkipColor:rainDropSkipColorCustom, skipStrikethroughColor: skipStrikethroughColorCustom, saturatedSoilColor: saturatedSoilColorCustom, rainDropsPredictedColor: rainDropsPredictedColorCustom, freezeSkip0Color: freezeSkip0ColorCustom, freezeSkip1Color: freezeSkip1ColorCustom, windSkipColor: windSkipColorCustom, rainSensorSkipColor: rainSensorSkipColorCustom, strokeColor: strokeColorCustom, dayTextColor: dayTextColorCustom, precipTextColor: precipTextColorCustom, highTempTextColor: highTempTextColorCustom, lowTempTextColor: lowTempTextColorCustom]  
    }
    if (debugLogging) { log.debug("Error getting color scheme") }
    return
}


// Filled icons
chanceflurries = '<g transform="scale(2) translate(0,0)" id="chanceflurries"><path style="stroke-width:0.999998" class="light" d="m 17.779297,1.5312153 c -0.24,0 -0.439375,0.08977 -0.609375,0.259766 -0.17,0.17 -0.25,0.369609 -0.25,0.599609 v 2.041016 c 0,0.23 0.09977,0.430078 0.259766,0.580078 0.16,0.15 0.369609,0.230469 0.599609,0.230469 0.23,0 0.429609,-0.07047 0.599609,-0.230469 0.17,-0.16 0.25,-0.350078 0.25,-0.580078 v -2.050781 c 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.84961 c -0.23,0 -0.438672,0.08 -0.638672,0.25 -0.15,0.18 -0.230469,0.381328 -0.230469,0.611328 0,0.24 0.08023,0.449375 0.240235,0.609375 l 1.458984,1.429688 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.160001 0.240234,-0.35961 0.240234,-0.59961 0,-0.24 -0.08023,-0.439844 -0.240234,-0.589844 L 11.46875,4.6210593 c -0.17,-0.16 -0.369843,-0.240234 -0.589843,-0.240234 z m 13.800781,0.0098 c -0.22,0 -0.419844,0.08023 -0.589844,0.240234 l -1.419922,1.470703 c -0.15,0.14 -0.230469,0.339844 -0.230469,0.589844 0,0.24 0.08047,0.439609 0.230469,0.59961 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.16 0.240234,-0.369141 0.240234,-0.619141 0,-0.23 -0.08,-0.431562 -0.25,-0.601562 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.550781 c -0.93,0 -1.789609,0.229219 -2.599609,0.699219 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.7999997 -0.701172,1.6696097 -0.701172,2.5996097 0,0.94 0.241406,1.811093 0.691406,2.621091 0.47,0.800001 1.098438,1.43039 1.898438,1.900391 0.8,0.47 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.22922 2.609375,-0.69922 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699998 -0.140156,-1.381482 -0.410156,-2.021482 -0.27,-0.6399997 -0.639375,-1.1901557 -1.109375,-1.6601557 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.419922 -2.019532,-0.419922 z M 8.000035,11.291016 c -0.22,0 -0.431563,0.08023 -0.601563,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.09172,0.441329 0.261719,0.611328 0.17,0.17 0.369609,0.25 0.599609,0.25 h 2.039063 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.169999 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609375 -0.16,-0.17 -0.350078,-0.25 -0.580078,-0.25 z m 17.509765,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z m -13.210971,5.519526 c -0.24,0 -0.439844,0.07047 -0.589844,0.230467 l -1.46875,1.429689 c -0.15,0.18 -0.230469,0.381327 -0.230469,0.611328 0,0.229999 0.08023,0.429844 0.240235,0.589844 0.409999,0.32 0.818515,0.32 1.228515,0 l 1.419922,-1.419952 c 0.16,-0.18 0.240234,-0.400627 0.240234,-0.640625 0,-0.229998 -0.08023,-0.42031 -0.240234,-0.570314 -0.16,-0.149998 -0.359609,-0.230467 -0.599609,-0.230467 z m 10.929687,0.0098 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140002 -0.230469,0.330547 -0.230469,0.560547 0,0.260001 0.08047,0.470394 0.230469,0.650394 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429718 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.23047 z" id="path2" /><path id="path849" d="M 11.160157,8 C 9.750156,8 8.509688,8.440547 7.429688,9.310547 c -1.08,0.87 -1.780078,1.989609 -2.080078,3.349609 -1.12,0.26 -2.028282,0.830469 -2.738282,1.730469 -0.71,0.9 -1.070312,1.920313 -1.070312,3.070313 0,0.9 0.220156,1.730234 0.660156,2.490234 C 2.641172,20.711172 3.24,21.31 4,21.75 c 0.76,0.44 1.580703,0.660156 2.470703,0.660156 h 10.830078 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 h -0.320312 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 15.754214,10.121576 15.619138,9.984247 15.488281,9.84375 14.818229,9.160538 14.039562,8.724549 13.203125,8.353516 12.590468,8.119718 11.910966,8 11.160157,8 Z" class="cloud" /><path class="frozenPrecip" d="m 11.919922,19.021485 c -0.23,0 -0.420078,0.07828 -0.580078,0.238281 -0.16,0.16 -0.240235,0.371562 -0.240235,0.601562 0,0.23 0.08024,0.420078 0.240235,0.580078 0.16,0.16 0.360078,0.238282 0.580078,0.238282 0.24,0 0.439609,-0.07828 0.599609,-0.238282 0.17,-0.16 0.25,-0.351796 0.25,-0.591797 0,-0.23 -0.08,-0.429843 -0.25,-0.589843 -0.17,-0.16 -0.369609,-0.238282 -0.599609,-0.238281 z M 8.75,20.720703 c -0.2300001,0 -0.4298436,0.08023 -0.5898439,0.240235 -0.16,0.16 -0.2402343,0.360078 -0.2402343,0.580078 0,0.24 0.080234,0.439375 0.2402343,0.609375 0.1600003,0.17 0.3498438,0.25 0.5898439,0.25 0.23,0 0.4298435,-0.08 0.5898438,-0.25 0.16,-0.17 0.2402342,-0.369375 0.2402342,-0.609375 0,-0.23 -0.080234,-0.420078 -0.2402342,-0.580078 C 9.1798435,20.800938 8.99,20.720703 8.75,20.720703 Z m 6.400391,0 c -0.24,0 -0.429844,0.08023 -0.589844,0.240235 -0.16,0.16 -0.240234,0.360078 -0.240235,0.580078 0,0.24 0.08024,0.439375 0.240235,0.609375 0.16,0.17 0.359844,0.25 0.589844,0.25 0.23,0 0.429843,-0.08 0.589843,-0.25 0.16,-0.17 0.240235,-0.369375 0.240235,-0.609375 0,-0.23 -0.08024,-0.420078 -0.240235,-0.580078 -0.16,-0.16 -0.349843,-0.240235 -0.589843,-0.240235 z m -3.230469,1.890625 c -0.23,0 -0.420078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.36961 -0.240235,0.59961 0,0.22 0.08024,0.419609 0.240235,0.599609 0.16,0.16 0.360078,0.240234 0.580078,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.16 0.25,-0.359609 0.25,-0.599609 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.369609,-0.25 -0.599609,-0.25 z m -3.1894532,1.738281 c -0.2300001,0 -0.4298438,0.08047 -0.5898438,0.230469 -0.1400001,0.15 -0.2207032,0.349844 -0.2207032,0.589844 0,0.21 0.080234,0.400313 0.2402343,0.570313 0.18,0.16 0.3700782,0.240234 0.5800783,0.240234 0.24,0 0.4298436,-0.08047 0.5898436,-0.230469 0.16,-0.16 0.2304689,-0.350078 0.2304689,-0.580078 0,-0.24 -0.080234,-0.429844 -0.2402344,-0.589844 -0.1600001,-0.16 -0.349844,-0.230469 -0.5898437,-0.230469 z m 6.4101562,0 c -0.24,0 -0.441561,0.08023 -0.601563,0.240235 -0.139998,0.15 -0.218747,0.350078 -0.21875,0.580078 0,0.21 0.08047,0.400313 0.230469,0.570313 0.18,0.16 0.37961,0.240234 0.59961,0.240234 0.24,0 0.429843,-0.08047 0.589843,-0.230469 0.16,-0.16 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.08023,-0.429844 -0.240234,-0.589844 -0.16,-0.16 -0.349844,-0.230469 -0.589844,-0.230469 z m -3.220703,1.921876 c -0.22,0 -0.410078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.369609 -0.240235,0.599609 0,0.22 0.08024,0.410312 0.240235,0.570312 0.17,0.17 0.360078,0.25 0.580078,0.25 0.24,0 0.439609,-0.08047 0.599609,-0.230468 0.17,-0.16 0.25,-0.349844 0.25,-0.589844 0,-0.24 -0.08,-0.439611 -0.25,-0.599609 -0.17,-0.170001 -0.369609,-0.25 -0.599609,-0.25 z" id="path893" /></g>'

chancerain = '<g transform="scale(2) translate(0,0)"> <path style="stroke-width:0.999998" class="light" d="m 17.77957,1.5312458 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410154 c 0,0.23 0.09977,0.4300782 0.259766,0.5800784 0.16,0.1499998 0.369609,0.2304686 0.599609,0.2304686 0.23,0 0.429609,-0.070469 0.599609,-0.2304686 0.17,-0.16 0.25,-0.3500784 0.25,-0.5800784 v -2.050781 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.8496093 c -0.23,0 -0.438672,0.08 -0.638672,0.2499999 -0.15,0.1800002 -0.230469,0.3813282 -0.230469,0.6113282 0,0.2399999 0.08023,0.449375 0.240235,0.6093751 l 1.458984,1.429688 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.160001 0.240234,-0.35961 0.240234,-0.59961 0,-0.24 -0.08023,-0.439844 -0.240234,-0.589844 L 11.469023,4.6210896 C 11.299023,4.4610894 11.09918,4.3808551 10.87918,4.3808551 Z m 13.800781,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402345 l -1.419922,1.4707027 c -0.15,0.14 -0.230469,0.339844 -0.230469,0.589844 0,0.24 0.08047,0.439609 0.230469,0.59961 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.1600001 0.240234,-0.3691406 0.240234,-0.6191406 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015624 -0.16,-0.1700002 -0.359609,-0.2500002 -0.599609,-0.2500002 z m -6.910157,2.5507812 c -0.93,0 -1.789609,0.229219 -2.599609,0.699219 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.7999997 -0.701172,1.6696097 -0.701172,2.5996107 0,0.939999 0.241406,1.811093 0.691406,2.621091 0.47,0.8 1.098438,1.430389 1.898438,1.90039 0.8,0.470001 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.229219 2.609375,-0.69922 0.8,-0.469999 1.43039,-1.10039 1.90039,-1.90039 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699999 -0.140156,-1.381483 -0.410156,-2.021483 -0.27,-0.6399997 -0.639375,-1.1901557 -1.109375,-1.6601557 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.419922 -2.019532,-0.419922 z M 8.0003075,11.291016 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240234 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.091719,0.441329 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390628 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.169999 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609375 -0.16,-0.170001 -0.350078,-0.250001 -0.580078,-0.250001 z m 17.5097655,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.249999 0.580078,0.249999 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.249999 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.170001 -0.369609,-0.259766 -0.599609,-0.259766 z m -13.210971,5.519526 c -0.24,0 -0.439844,0.07047 -0.589844,0.230467 l -1.46875,1.429689 c -0.15,0.18 -0.230469,0.381328 -0.230469,0.611329 0,0.229998 0.08023,0.429843 0.240235,0.589843 0.409999,0.32 0.818515,0.32 1.228515,0 l 1.419922,-1.419922 c 0.16,-0.179999 0.240234,-0.400627 0.240234,-0.640625 0,-0.229997 -0.08023,-0.42031 -0.240234,-0.570314 -0.16,-0.149998 -0.359609,-0.230467 -0.599609,-0.230467 z m 10.929687,0.0098 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140001 -0.230469,0.330546 -0.230469,0.560547 0,0.26 0.08047,0.470393 0.230469,0.650393 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359843 0.240234,-0.589843 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.150001 -0.361562,-0.230469 -0.601562,-0.23047 z" id="path2" /><path id="path849" d="m 11.191133,8.000156 c -1.4100015,0 -2.6504695,0.440547 -3.7304695,1.310547 -1.08,0.87 -1.780078,1.989609 -2.080078,3.349609 -1.12,0.26 -2.028282,0.830469 -2.738282,1.730469 -0.71,0.9 -1.070312,1.920313 -1.070312,3.070313 0,0.9 0.220156,1.730234 0.660156,2.490234 0.44,0.76 1.038828,1.358828 1.798828,1.798828 0.76,0.44 1.580703,0.660156 2.470703,0.660156 H 17.331756 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.760001,-0.44 1.368595,-1.038828 1.808595,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936403,-0.857226 -2.037124,-1.300781 -3.322267,-1.300781 h -0.320312 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 15.78519,10.121732 15.650114,9.984403 15.519257,9.843906 14.849204,9.160694 14.070538,8.724705 13.234101,8.353672 12.621444,8.119874 11.941941,8.000156 11.191133,8.000156 Z" class="cloud" /><path class="precip" d="m 9.2991014,17.533203 c -0.1125,0.0125 -0.2183594,0.04742 -0.3183594,0.107422 -0.2,0.12 -0.3210937,0.289531 -0.3710937,0.519531 L 8.308867,19.179688 c 0,0.08 -0.00977,0.160234 -0.00977,0.240234 0,0.38 0.210625,0.641016 0.640625,0.791016 0.22,0.08 0.430625,0.05922 0.640625,-0.05078 0.21,-0.11 0.3401562,-0.289296 0.4101562,-0.529297 l 0.2402358,-1.03125 c 0.07,-0.209999 0.04969,-0.40914 -0.07031,-0.61914 -0.109999,-0.210002 -0.2797651,-0.349924 -0.5097651,-0.419924 -0.12,-0.03 -0.2390625,-0.03984 -0.3515625,-0.02734 z m 6.7558586,0.06055 c -0.107499,0.01 -0.209687,0.04266 -0.304687,0.09766 -0.2,0.11 -0.330625,0.28 -0.390625,0.5 l -0.300782,1.058594 c 0,0.08 -0.0098,0.160469 -0.0098,0.230469 0,0.16 0.05039,0.320469 0.150392,0.480469 0.1,0.16 0.25117,0.270312 0.45117,0.320312 l 0.25,0.0293 c 0.19,0 0.369532,-0.05969 0.519532,-0.179688 0.15,-0.12 0.239297,-0.280703 0.279297,-0.470703 l 0.269531,-0.990234 c 0.07,-0.24 0.05164,-0.448438 -0.06836,-0.648437 -0.11,-0.2 -0.281718,-0.330626 -0.511718,-0.390626 -0.115,-0.035 -0.226485,-0.04711 -0.333985,-0.03711 z m -4.193359,3.076172 c -0.11375,0.01375 -0.222265,0.05133 -0.322265,0.111328 -0.200001,0.12 -0.329141,0.299297 -0.36914,0.529297 l -0.28125,1.029297 c -0.02,0.03 -0.01953,0.09164 -0.01953,0.181641 0,0.17 0.05016,0.339765 0.160158,0.509765 0.11,0.17 0.260703,0.27961 0.470702,0.349609 0.23,0.07 0.438672,0.04922 0.638673,-0.05078 0.19,-0.1 0.33039,-0.288594 0.40039,-0.558593 l 0.240235,-1.011719 c 0.07,-0.23 0.04945,-0.448438 -0.06055,-0.648438 -0.11,-0.2 -0.28,-0.340156 -0.5,-0.410156 -0.125,-0.035 -0.243672,-0.045 -0.357422,-0.03125 z m -3.896484,1.636719 c -0.11125,0.01375 -0.2144531,0.04852 -0.3144531,0.103515 -0.2,0.11 -0.3210938,0.30125 -0.3710938,0.53125 l -0.2792968,0.988282 c 0,0.05 -0.00977,0.120937 -0.00977,0.210937 0,0.18 0.050156,0.359297 0.1601563,0.529297 0.11,0.18 0.2592187,0.291328 0.4492187,0.361328 0.19,0.07 0.399375,0.04945 0.609375,-0.06055 0.22,-0.11 0.3614063,-0.290781 0.4414063,-0.550781 l 0.25,-1.048828 c 0.07,-0.21 0.049688,-0.411094 -0.070312,-0.621094 -0.12,-0.21 -0.2897657,-0.349922 -0.5097657,-0.419922 -0.125,-0.03 -0.2442187,-0.03719 -0.3554687,-0.02344 z m 6.714844,0.06836 c -0.102501,0.01125 -0.205548,0.04547 -0.310548,0.105469 -0.21,0.12 -0.340155,0.289766 -0.410155,0.509766 l -0.269532,1.019531 c -0.01,0.02 -0.0095,0.05008 -0.01953,0.08008 -0.01,0.03 -0.0095,0.06008 -0.01953,0.08008 -0.01,0.02 0,0.05031 0,0.07031 0.02,0.379999 0.228908,0.650078 0.628908,0.830078 l 0.25,0.04102 c 0.159999,0 0.320703,-0.05016 0.470702,-0.160156 0.15,-0.11 0.260312,-0.27 0.320313,-0.5 l 0.289062,-1.009766 c 0.06,-0.24 0.03016,-0.460156 -0.08984,-0.660156 -0.119999,-0.2 -0.299296,-0.331094 -0.529296,-0.371094 -0.105001,-0.035 -0.208048,-0.04641 -0.310547,-0.03516 z m -4.117188,3.089844 c -0.108749,0.01125 -0.212499,0.04547 -0.3125,0.105469 -0.2,0.12 -0.3403904,0.289765 -0.4003904,0.509765 l -0.2792969,1.019531 c -0.04,0.09 -0.050781,0.160938 -0.050781,0.210938 0,0.16 0.059922,0.33 0.1699219,0.5 0.11,0.17 0.2802343,0.289375 0.4902344,0.359375 0.01,0 0.03961,-2.34e-4 0.09961,0.0098 0.06,0.01 0.110389,0.01172 0.15039,0.01172 0.139999,0 0.259141,-0.02031 0.36914,-0.07031 0.19,-0.08 0.330157,-0.270078 0.410157,-0.580078 l 0.271485,-0.990235 c 0.07,-0.23 0.04969,-0.45039 -0.07031,-0.65039 -0.119999,-0.2 -0.289766,-0.340391 -0.509766,-0.400391 -0.114999,-0.035 -0.22914,-0.04641 -0.33789,-0.03516 z" id="path884" /> </g>'

chancesleet = '<g transform="scale(2) translate(0,0)" id="chancesleet"> <path id="path2" d="m 17.859458,1.6503905 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410154 c 0,0.23 0.09977,0.4300782 0.259766,0.5800784 0.16,0.1499998 0.369609,0.2304686 0.599609,0.2304686 0.23,0 0.429609,-0.070469 0.599609,-0.2304686 0.17,-0.16 0.25,-0.3500784 0.25,-0.5800784 v -2.050781 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.8496093 c -0.23,0 -0.438672,0.08 -0.638672,0.2499999 -0.15,0.1800002 -0.230469,0.3813282 -0.230469,0.6113282 0,0.2399999 0.08023,0.449375 0.240235,0.6093751 l 1.458984,1.429688 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.160001 0.240234,-0.35961 0.240234,-0.59961 0,-0.24 -0.08023,-0.439844 -0.240234,-0.589844 L 11.548911,4.7402343 c -0.17,-0.1600002 -0.369843,-0.2402345 -0.589843,-0.2402345 z m 13.800781,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402345 L 22.750083,6.220707 c -0.15,0.14 -0.230469,0.339844 -0.230469,0.589844 0,0.24 0.08047,0.439609 0.230469,0.59961 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.1600001 0.240234,-0.3691406 0.240234,-0.6191406 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015624 -0.16,-0.1700002 -0.359609,-0.2500002 -0.599609,-0.2500002 z M 17.849692,7.060551 c -0.93,0 -1.789609,0.229219 -2.599609,0.699219 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8 -0.701172,1.66961 -0.701172,2.59961 0,0.94 0.241406,1.811093 0.691406,2.621092 0.47,0.8 1.098438,1.43039 1.898438,1.900391 0.8,0.469999 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.229221 2.609375,-0.69922 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699999 -0.140156,-1.381483 -0.410156,-2.021483 -0.27,-0.64 -0.639375,-1.190156 -1.109375,-1.660156 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.419922 -2.019532,-0.419922 z m -9.7694965,4.34961 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.091719,0.441329 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390628 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.169999 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609374 -0.16,-0.170001 -0.350078,-0.250001 -0.580078,-0.250001 z m 17.5097655,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z M 12.37899,16.929688 c -0.24,0 -0.439844,0.07047 -0.589844,0.230467 l -1.46875,1.429689 c -0.15,0.18 -0.230469,0.381327 -0.230469,0.611328 0,0.229999 0.08023,0.429844 0.240235,0.589844 0.409999,0.32 0.818515,0.32 1.228515,0 l 1.419922,-1.419922 c 0.16,-0.18 0.240234,-0.400627 0.240234,-0.640625 0,-0.229999 -0.08023,-0.42031 -0.240234,-0.570314 -0.16,-0.149998 -0.359609,-0.230467 -0.599609,-0.230467 z m 10.929687,0.0098 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140002 -0.230469,0.330547 -0.230469,0.560547 0,0.260001 0.08047,0.470394 0.230469,0.650394 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.23047 z" class="light" style="stroke-width:0.999998" /><path class="cloud" d="m 11.070198,8.150233 c -1.410001,0 -2.650469,0.440547 -3.730469,1.310547 -1.08,0.87 -1.780078,1.989609 -2.080078,3.349609 -1.12,0.26 -2.028282,0.830469 -2.738282,1.730469 -0.71,0.9 -1.070312,1.920313 -1.070312,3.070313 0,0.9 0.220156,1.730234 0.660156,2.490234 0.44,0.76 1.038828,1.358828 1.798828,1.798828 0.76,0.44 1.580703,0.660156 2.470703,0.660156 h 10.830078 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 C 19.596686,13.154335 18.495965,12.71078 17.210822,12.71078 H 16.89051 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 15.664255,10.271809 15.529179,10.13448 15.398322,9.993983 14.72827,9.310771 13.949603,8.874782 13.113166,8.503749 12.500509,8.269951 11.821007,8.150233 11.070198,8.150233 Z" id="path849" /><path class="frozenPrecip" d="m 8.5508982,20.970702 c -0.2399999,0 -0.4298437,0.07047 -0.5898437,0.230469 -0.15,0.16 -0.2304687,0.349845 -0.2304687,0.589844 -1e-7,0.22 0.08,0.410312 0.25,0.570312 0.15,0.160001 0.3403124,0.240235 0.5703124,0.240235 0.24,0 0.4398438,-0.07047 0.5898438,-0.230469 0.15,-0.16 0.2285156,-0.350078 0.2285156,-0.580078 0,-0.239999 -0.068516,-0.429844 -0.2285156,-0.589844 -0.16,-0.15 -0.3498437,-0.230469 -0.5898438,-0.230469 z m 6.5488278,0.0098 c -0.24,0 -0.429843,0.07047 -0.589843,0.230468 -0.15,0.160001 -0.230469,0.349844 -0.230469,0.589844 0,0.22 0.08023,0.410547 0.240234,0.560547 0.15,0.17 0.350078,0.25 0.580078,0.25 0.24,0 0.429844,-0.07047 0.589844,-0.230469 0.15,-0.15 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.07047,-0.429843 -0.230469,-0.589844 -0.16,-0.149999 -0.349844,-0.230468 -0.589844,-0.230468 z m -4.11914,3.080078 c -0.24,0 -0.429844,0.07047 -0.589844,0.230469 -0.15,0.15 -0.230469,0.350078 -0.230469,0.580078 0,0.22 0.08024,0.410312 0.240235,0.570312 0.17,0.17 0.360078,0.25 0.580078,0.25 0.24,0 0.429843,-0.07047 0.589843,-0.230469 0.150001,-0.159999 0.230469,-0.349843 0.230469,-0.589842 0,-0.230001 -0.07047,-0.420079 -0.230469,-0.580078 -0.16,-0.15 -0.349843,-0.230469 -0.589843,-0.23047 z" id="path862" /><path class="precip" d="m 11.765742,20.798827 c -0.10625,0.01375 -0.211406,0.05133 -0.316406,0.111328 -0.2,0.120001 -0.340156,0.30125 -0.410157,0.53125 l -0.228515,0.898438 c -0.02,0.08 -0.03125,0.171719 -0.03125,0.261719 -0.02,0.15 0.03039,0.298515 0.150391,0.478515 0.1,0.160001 0.251171,0.260781 0.451171,0.300781 0.23,0.06 0.448672,0.04945 0.638672,-0.06055 0.19,-0.11 0.330156,-0.300312 0.410157,-0.570313 l 0.259765,-0.898437 c 0.07,-0.22 0.04969,-0.421093 -0.07031,-0.621094 -0.12,-0.199998 -0.289297,-0.33039 -0.529297,-0.400391 -0.11,-0.035 -0.217969,-0.045 -0.324219,-0.03125 z m -3.9140625,2.455078 c -0.11375,0.0125 -0.2222656,0.04742 -0.3222656,0.107422 -0.21,0.120001 -0.3401563,0.289298 -0.4101563,0.529297 l -0.089844,0.589844 c 0,0.03 -0.00953,0.07109 -0.019531,0.121094 -0.01,0.06 -0.019531,0.09891 -0.019531,0.128906 0,0.17 0.050156,0.340234 0.1601562,0.490234 0.1,0.160001 0.2489844,0.270079 0.4589844,0.330078 0.02,0 0.060859,-2.34e-4 0.1308594,0.0098 0.07,0.01 0.1203906,0.0098 0.1503906,0.0098 0.41,-1e-6 0.6597656,-0.220157 0.7597656,-0.660157 l 0.1386719,-0.599609 c 0.06,-0.21 0.041641,-0.419141 -0.068359,-0.619141 -0.12,-0.21 -0.2797656,-0.340156 -0.5097656,-0.410156 -0.125,-0.03 -0.245625,-0.03984 -0.359375,-0.02734 z m 6.5292965,0.01953 c -0.11375,0.0125 -0.220312,0.04742 -0.320312,0.107422 -0.21,0.12 -0.340156,0.289297 -0.410156,0.529297 l -0.08984,0.589844 c 0,0.02 2.34e-4,0.05133 -0.0098,0.111328 -0.01,0.06 -0.01172,0.09891 -0.01172,0.128906 0,0.170001 0.05039,0.33 0.150391,0.5 0.1,0.16 0.251172,0.270079 0.451172,0.330079 0.02,0 0.05891,-2.34e-4 0.128906,0.0098 0.07,0.01 0.120391,0.0098 0.150391,0.0098 0.41,0 0.659766,-0.218438 0.759766,-0.648438 l 0.140624,-0.601562 c 0.07,-0.21 0.04969,-0.418906 -0.07031,-0.628907 -0.11,-0.199999 -0.279766,-0.340156 -0.509766,-0.410156 -0.125,-0.03 -0.245625,-0.03984 -0.359375,-0.02734 z m -4.115234,3.070313 c -0.105,0.01125 -0.211406,0.04742 -0.3164062,0.107422 -0.2,0.11 -0.3401563,0.279765 -0.4101563,0.509765 l -0.1289063,0.580079 c -0.03,0.120001 -0.041016,0.190469 -0.041016,0.230468 0,0.170001 0.050156,0.328283 0.1601563,0.488282 0.11,0.160001 0.2702344,0.270079 0.4902345,0.330078 0.11,0.03 0.190235,0.04102 0.240235,0.04102 0.43,0 0.700781,-0.199376 0.800781,-0.609375 l 0.128906,-0.591796 c 0.07,-0.25 0.03992,-0.479686 -0.08008,-0.679687 -0.12,-0.200001 -0.299297,-0.329141 -0.529297,-0.369141 -0.105,-0.035 -0.209453,-0.04836 -0.314453,-0.03711 z" id="path860" /> </g>'

chancesnow = '<g transform="scale(2) translate(0,0)" id="chancesnow"> <path id="path2" d="m 17.779297,1.5312153 c -0.24,0 -0.439375,0.08977 -0.609375,0.259766 -0.17,0.17 -0.25,0.369609 -0.25,0.599609 v 2.041016 c 0,0.23 0.09977,0.430078 0.259766,0.580078 0.16,0.15 0.369609,0.230469 0.599609,0.230469 0.23,0 0.429609,-0.07047 0.599609,-0.230469 0.17,-0.16 0.25,-0.350078 0.25,-0.580078 v -2.050781 c 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.84961 c -0.23,0 -0.438672,0.08 -0.638672,0.25 -0.15,0.18 -0.230469,0.381328 -0.230469,0.611328 0,0.24 0.08023,0.449375 0.240235,0.609375 l 1.458984,1.429688 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.160001 0.240234,-0.35961 0.240234,-0.59961 0,-0.24 -0.08023,-0.439844 -0.240234,-0.589844 L 11.46875,4.6210593 c -0.17,-0.16 -0.369843,-0.240234 -0.589843,-0.240234 z m 13.800781,0.0098 c -0.22,0 -0.419844,0.08023 -0.589844,0.240234 l -1.419922,1.470703 c -0.15,0.14 -0.230469,0.339844 -0.230469,0.589844 0,0.24 0.08047,0.439609 0.230469,0.59961 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.16 0.240234,-0.369141 0.240234,-0.619141 0,-0.23 -0.08,-0.431562 -0.25,-0.601562 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.550781 c -0.93,0 -1.789609,0.229219 -2.599609,0.699219 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.7999997 -0.701172,1.6696097 -0.701172,2.5996097 0,0.94 0.241406,1.811093 0.691406,2.621092 0.47,0.8 1.098438,1.43039 1.898438,1.900391 0.8,0.469999 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.229221 2.609375,-0.69922 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699999 -0.140156,-1.381483 -0.410156,-2.021483 -0.27,-0.6399997 -0.639375,-1.1901557 -1.109375,-1.6601557 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.419922 -2.019532,-0.419922 z M 8.000035,11.291016 c -0.22,0 -0.431563,0.08023 -0.601563,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.09172,0.441328 0.261719,0.611328 0.17,0.17 0.369609,0.25 0.59961,0.25 h 2.039062 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.17 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609375 -0.16,-0.17 -0.350078,-0.25 -0.580078,-0.25 z m 17.509765,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z m -13.210971,5.519527 c -0.24,0 -0.439844,0.07047 -0.589844,0.230467 l -1.46875,1.429689 c -0.15,0.18 -0.230469,0.381327 -0.230469,0.611328 0,0.229999 0.08023,0.429843 0.240235,0.589844 0.409999,0.32 0.818515,0.32 1.228515,0 l 1.419922,-1.419922 c 0.16,-0.18 0.240234,-0.400627 0.240234,-0.640625 0,-0.229999 -0.08023,-0.420311 -0.240234,-0.570314 -0.16,-0.149998 -0.359609,-0.230467 -0.599609,-0.230467 z m 10.929687,0.0098 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140002 -0.230469,0.330547 -0.230469,0.560547 0,0.260001 0.08047,0.470393 0.230469,0.650393 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z" class="light" style="stroke-width:0.999998" /><path class="frozenPrecip" d="m 11.919922,19.021485 c -0.23,0 -0.420078,0.07828 -0.580078,0.238281 -0.16,0.16 -0.240235,0.371562 -0.240235,0.601562 0,0.23 0.08024,0.420078 0.240235,0.580078 0.16,0.16 0.360078,0.238282 0.580078,0.238282 0.24,0 0.439609,-0.07828 0.599609,-0.238282 0.17,-0.16 0.25,-0.351796 0.25,-0.591797 0,-0.23 -0.08,-0.429843 -0.25,-0.589843 -0.17,-0.16 -0.369609,-0.238282 -0.599609,-0.238281 z M 8.75,20.720703 c -0.2300001,0 -0.4298436,0.08023 -0.5898439,0.240235 -0.16,0.16 -0.2402343,0.360078 -0.2402343,0.580078 0,0.24 0.080234,0.439375 0.2402343,0.609375 0.1600003,0.17 0.3498438,0.25 0.5898439,0.25 0.23,0 0.4298435,-0.08 0.5898438,-0.25 0.16,-0.17 0.2402342,-0.369375 0.2402342,-0.609375 0,-0.23 -0.080234,-0.420078 -0.2402342,-0.580078 C 9.1798435,20.800938 8.99,20.720703 8.75,20.720703 Z m 6.400391,0 c -0.24,0 -0.429844,0.08023 -0.589844,0.240235 -0.16,0.16 -0.240234,0.360078 -0.240235,0.580078 0,0.24 0.08024,0.439375 0.240235,0.609375 0.16,0.17 0.359844,0.25 0.589844,0.25 0.23,0 0.429843,-0.08 0.589843,-0.25 0.16,-0.17 0.240235,-0.369375 0.240235,-0.609375 0,-0.23 -0.08024,-0.420078 -0.240235,-0.580078 -0.16,-0.16 -0.349843,-0.240235 -0.589843,-0.240235 z m -3.230469,1.890625 c -0.23,0 -0.420078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.36961 -0.240235,0.59961 0,0.22 0.08024,0.419609 0.240235,0.599609 0.16,0.16 0.360078,0.240234 0.580078,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.16 0.25,-0.359609 0.25,-0.599609 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.369609,-0.25 -0.599609,-0.25 z m -3.1894532,1.738281 c -0.2300001,0 -0.4298438,0.08047 -0.5898438,0.230469 -0.1400001,0.15 -0.2207032,0.349844 -0.2207032,0.589844 0,0.21 0.080234,0.400313 0.2402343,0.570313 0.18,0.16 0.3700782,0.240234 0.5800783,0.240234 0.24,0 0.4298436,-0.08047 0.5898436,-0.230469 0.16,-0.16 0.2304689,-0.350078 0.2304689,-0.580078 0,-0.24 -0.080234,-0.429844 -0.2402344,-0.589844 -0.1600001,-0.16 -0.349844,-0.230469 -0.5898437,-0.230469 z m 6.4101562,0 c -0.24,0 -0.441561,0.08023 -0.601563,0.240235 -0.139998,0.15 -0.218747,0.350078 -0.21875,0.580078 0,0.21 0.08047,0.400313 0.230469,0.570313 0.18,0.16 0.37961,0.240234 0.59961,0.240234 0.24,0 0.429843,-0.08047 0.589843,-0.230469 0.16,-0.16 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.08023,-0.429844 -0.240234,-0.589844 -0.16,-0.16 -0.349844,-0.230469 -0.589844,-0.230469 z m -3.220703,1.921876 c -0.22,0 -0.410078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.369609 -0.240235,0.599609 0,0.22 0.08024,0.410312 0.240235,0.570312 0.17,0.17 0.360078,0.25 0.580078,0.25 0.24,0 0.439609,-0.08047 0.599609,-0.230468 0.17,-0.16 0.25,-0.349844 0.25,-0.589844 0,-0.24 -0.08,-0.439611 -0.25,-0.599609 -0.17,-0.170001 -0.369609,-0.25 -0.599609,-0.25 z" id="path893" /><path class="cloud" d="M 11.160157,8 C 9.750156,8 8.509688,8.440547 7.429688,9.310547 c -1.08,0.87 -1.780078,1.989609 -2.080078,3.349609 -1.12,0.26 -2.028282,0.830469 -2.738282,1.730469 -0.71,0.9 -1.070312,1.920313 -1.070312,3.070313 0,0.9 0.220156,1.730234 0.660156,2.490234 C 2.641172,20.711172 3.24,21.31 4,21.75 c 0.76,0.44 1.580703,0.660156 2.470703,0.660156 h 10.830078 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 h -0.320312 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 15.754214,10.121576 15.619138,9.984247 15.488281,9.84375 14.818229,9.160538 14.039562,8.724549 13.203125,8.353516 12.590468,8.119718 11.910966,8 11.160157,8 Z" id="path849" /></g>'

chancetstorms = '<g transform="scale(2) translate(0,0)" id="chancetstorms"><path class="cloud" d="m 14.259768,7.9707049 c -1.410001,0 -2.65047,0.4405468 -3.730469,1.3105469 C 9.449298,10.151252 8.74922,11.270861 8.44922,12.630861 c -1.12,0.26 -2.028281,0.830469 -2.738281,1.730469 -0.71,0.9 -1.070312,1.920313 -1.070312,3.070313 0,0.9 0.220156,1.730234 0.660156,2.490234 0.44,0.76 1.038828,1.358828 1.798828,1.798828 0.76,0.44 1.580703,0.660156 2.470703,0.660156 h 10.830078 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 H 20.08008 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 18.853825,10.092281 18.718749,9.954952 18.587892,9.8144549 17.91784,9.1312432 17.139173,8.6952543 16.302736,8.3242206 15.690079,8.0904235 15.010577,7.9707049 14.259768,7.9707049 Z" id="path849" /><path class="precip" d="m 19.429686,17.550781 c -0.17,0 -0.330235,0.05039 -0.490234,0.150391 -0.160002,0.1 -0.270079,0.260468 -0.330079,0.480468 l -0.269531,1.009766 c -0.01,0.08 -0.01953,0.14875 -0.01953,0.21875 -0.01,0.16 0.04039,0.310703 0.150391,0.470703 0.109998,0.16 0.268281,0.28086 0.488281,0.38086 0.08,0.04 0.161718,0.05859 0.261719,0.05859 0.109998,0 0.219843,-0.03008 0.339843,-0.08008 0.21,-0.1 0.349453,-0.290312 0.439453,-0.570312 l 0.289063,-1.029297 c 0.02,-0.13 0.03125,-0.200703 0.03125,-0.220703 0,-0.17 -0.05016,-0.328282 -0.160156,-0.488282 -0.11,-0.16 -0.270235,-0.270078 -0.490235,-0.330078 -0.02,0 -0.05937,-0.01148 -0.109375,-0.02148 -0.06,-0.03 -0.100859,-0.0293 -0.130859,-0.0293 z m -4.292969,3.091797 c -0.1075,0.0125 -0.211406,0.04742 -0.316406,0.107422 -0.21,0.12 -0.340156,0.291484 -0.410156,0.521484 L 14.16992,22.28125 c -0.02,0.17 -0.0293,0.259531 -0.0293,0.269531 0,0.14 0.04844,0.289453 0.148438,0.439453 0.1,0.15 0.251172,0.260078 0.451172,0.330078 0.22,0.07 0.438672,0.06117 0.638672,-0.04883 0.2,-0.11 0.33039,-0.281484 0.40039,-0.521484 l 0.300781,-1.039063 c 0.06,-0.22 0.02992,-0.430859 -0.08008,-0.630859 -0.12,-0.2 -0.299297,-0.340156 -0.529296,-0.410156 -0.115001,-0.03 -0.226485,-0.03984 -0.333985,-0.02734 z m 2.814453,1.695312 c -0.11375,0.01375 -0.222265,0.04852 -0.322265,0.103516 -0.2,0.12 -0.329141,0.299297 -0.369141,0.529297 L 16.990233,24 c -0.02,0.06 -0.03125,0.131172 -0.03125,0.201172 0,0.17 0.05016,0.339765 0.160156,0.509765 0.11,0.17 0.270703,0.27961 0.470703,0.34961 0.02,0 0.05914,0.0095 0.119141,0.01953 0.05,0.01 0.09109,0.02148 0.121093,0.02148 0.13,0 0.258907,-0.02008 0.378907,-0.08008 0.19,-0.07 0.330156,-0.260312 0.410156,-0.570312 l 0.25,-1.009766 c 0.07,-0.23 0.05141,-0.450156 -0.05859,-0.660156 -0.11,-0.21 -0.28,-0.349922 -0.5,-0.419922 -0.125,-0.03 -0.245625,-0.03719 -0.359375,-0.02344 z m -4.144531,3.085938 c -0.105,0.0125 -0.206641,0.04742 -0.306641,0.107422 -0.2,0.12 -0.340156,0.289297 -0.410156,0.529297 l -0.269531,1 c -0.01,0.17 -0.02148,0.259765 -0.02149,0.259765 0,0.16 0.05039,0.310938 0.150391,0.460938 0.1,0.15 0.260938,0.260312 0.460938,0.320312 0.14,0.03 0.22,0.04883 0.25,0.04883 0.09,0 0.208906,-0.02961 0.378906,-0.09961 0.21,-0.09 0.349922,-0.269531 0.419922,-0.519531 l 0.28125,-1.050781 c 0.06,-0.22 0.03992,-0.428907 -0.08008,-0.628907 -0.12,-0.2 -0.29125,-0.33039 -0.53125,-0.40039 -0.11,-0.03 -0.217266,-0.03984 -0.322266,-0.02734 z" id="path851" /><path class="light" id="path845" d="m 10.119139,17.621093 c -0.09,0 -0.1687499,0.05063 -0.2187499,0.140626 l -0.4648438,1.220703 0.00977,0.0039 -0.5253907,1.357422 -0.109375,0.287109 c -6.073e-4,-1.54e-4 -0.00135,1.54e-4 -0.00195,0 l -1.21875,3.146484 -0.00195,-0.002 -0.048828,0.125 c -0.03,0.14 0.020625,0.220703 0.140625,0.220703 h 2.1308593 l -1.0410156,3.779297 h 0.2792969 l 3.9707038,-5.21875 c 0.04,-0.04 0.03953,-0.09062 0.01953,-0.140625 -0.02,-0.05 -0.06867,-0.07031 -0.138672,-0.07031 h -2.179687 l 2.478515,-4.640625 c 0.06,-0.14 0.02133,-0.208985 -0.138672,-0.208985 z" /></g>'

clear = '<g transform="scale(2) translate(0,0)" id="clear"><path class="light" d="m 15.010742,4.3700995 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410156 c 0,0.23 0.09977,0.4300781 0.259766,0.5800782 0.16,0.1499999 0.369609,0.2304687 0.599609,0.2304687 0.23,0 0.429609,-0.070469 0.599609,-0.2304687 0.17,-0.16 0.25,-0.3500782 0.25,-0.5800782 V 5.2197089 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z M 8.1103516,7.2197089 c -0.23,0 -0.4386719,0.08 -0.6386719,0.25 -0.15,0.18 -0.2304687,0.3813281 -0.2304687,0.6113281 0,0.24 0.080234,0.449375 0.2402343,0.609375 L 8.9404297,10.1201 c 0.15,0.16 0.3498437,0.240234 0.5898437,0.240234 0.24,0 0.4396094,-0.08023 0.5996096,-0.240234 0.16,-0.1600005 0.240234,-0.3596099 0.240234,-0.5996099 0,-0.24 -0.08023,-0.4398437 -0.240234,-0.5898437 L 8.7001953,7.4599433 C 8.5301953,7.2999432 8.3303516,7.2197089 8.1103516,7.2197089 Z m 13.8007814,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402344 l -1.419922,1.4707031 c -0.15,0.14 -0.230469,0.3398437 -0.230469,0.5898437 0,0.24 0.08047,0.4396094 0.230469,0.5996099 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.16 0.240234,-0.3691406 0.240234,-0.6191406 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015625 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.5507812 c -0.93,0 -1.789609,0.2292189 -2.599609,0.6992189 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8 -0.7011719,1.66961 -0.7011719,2.59961 0,0.94 0.2414059,1.811093 0.6914059,2.621093 0.47,0.8 1.098438,1.430391 1.898438,1.900391 0.8,0.47 1.671328,0.699219 2.611328,0.699219 0.94,0 1.809375,-0.229219 2.609375,-0.699219 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.7 -0.140156,-1.381484 -0.410156,-2.021484 -0.27,-0.64 -0.639375,-1.190156 -1.109375,-1.660156 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.4199219 -2.019532,-0.4199219 z M 5.2314793,14.12987 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240234 -0.17,0.17 -0.25,0.379141 -0.25,0.619141 0,0.24 0.091719,0.441328 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390624 c 0.23,0 0.4300782,-0.08 0.5800782,-0.25 0.15,-0.17 0.2207031,-0.371328 0.2207031,-0.611328 0,-0.24 -0.080469,-0.439375 -0.2304687,-0.609375 -0.16,-0.17 -0.3500782,-0.25 -0.5800782,-0.25 z m 17.5097657,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.16,0.18 -0.240234,0.379141 -0.240234,0.619141 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371562 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z M 9.5302734,19.649397 c -0.24,0 -0.4398437,0.07047 -0.5898437,0.230468 l -1.46875,1.429688 c -0.15,0.18 -0.2304687,0.381328 -0.2304687,0.611328 -1e-7,0.23 0.080234,0.429844 0.2402343,0.589844 0.41,0.32 0.8185156,0.32 1.2285157,0 l 1.419922,-1.419922 c 0.16,-0.18 0.240234,-0.400626 0.240234,-0.640625 0,-0.23 -0.08023,-0.420312 -0.240234,-0.570313 C 9.9698828,19.729866 9.7702735,19.649397 9.5302734,19.649397 Z m 10.9296876,0.0098 c -0.22,1e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.14 -0.230469,0.330547 -0.230469,0.560547 0,0.26 0.08047,0.470391 0.230469,0.650391 l 1.419922,1.419922 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z m -5.458985,2.271485 c -0.23,0 -0.429609,0.08023 -0.599609,0.240234 -0.17,0.16 -0.25,0.35961 -0.25,0.59961 v 1.990234 c 0,0.24 0.08,0.449141 0.25,0.619141 0.16,0.17 0.369609,0.25 0.599609,0.25 0.23,0 0.42961,-0.08 0.59961,-0.25 0.17,-0.17 0.25,-0.379141 0.25,-0.619141 v -1.990234 c 0,-0.24 -0.08024,-0.43961 -0.240235,-0.59961 -0.16,-0.16 -0.369375,-0.240234 -0.609375,-0.240234 z" id="path2" /></g>'

cloudy = '<g transform="scale(2) translate(0,0)"><path style="stroke-width:0.891848" d="m 10.300181,13.071256 c 0,-0.882929 0.276473,-1.676673 0.829418,-2.363396 0.552946,-0.686723 1.257506,-1.1326468 2.122598,-1.3288528 0.23188,-1.043462 0.75807,-1.908561 1.587489,-2.568529 0.829418,-0.668885 1.783695,-0.998869 2.871749,-0.998869 1.052381,0 1.997739,0.321065 2.818239,0.972114 0.829418,0.651049 1.364527,1.480473 1.605326,2.497181 h 0.240799 c 1.05238,0 1.944228,0.365657 2.684461,1.1058908 0.740234,0.740233 1.11481,1.632081 1.11481,2.675543 0,1.05238 -0.374576,1.944228 -1.11481,2.684461 -0.740233,0.740234 -1.632081,1.11481 -2.684461,1.11481 h -8.267428 c -0.517272,0 -1.007788,-0.0981 -1.471549,-0.303228 -0.463761,-0.205125 -0.882929,-0.454843 -1.221831,-0.793745 -0.338903,-0.338902 -0.606457,-0.749152 -0.811582,-1.212913 -0.205125,-0.46376 -0.303228,-0.972113 -0.303228,-1.480467 z" id="path2-2" class="cloud" /><path class="cloud" id="path2" d="m 3.895,16.140912 c 0,-0.99 0.31,-1.88 0.93,-2.65 0.62,-0.77 1.41,-1.27 2.38,-1.49 0.26,-1.17 0.85,-2.1400078 1.78,-2.8800078 0.93,-0.7500004 2,-1.1200001 3.22,-1.1200001 1.18,0 2.24,0.3599997 3.16,1.0900001 0.93,0.73 1.53,1.6600068 1.8,2.8000078 h 0.27 c 1.18,0 2.18,0.41 3.01,1.24 0.83,0.83 1.25,1.83 1.25,3 0,1.18 -0.42,2.18 -1.25,3.01 -0.83,0.83 -1.83,1.25 -3.01,1.25 h -9.27 c -0.58,0 -1.13,-0.11 -1.65,-0.34 -0.52,-0.23 -0.99,-0.51 -1.37,-0.89 -0.38,-0.38 -0.68,-0.84 -0.91,-1.36 -0.23,-0.52 -0.34,-1.09 -0.34,-1.66 z m 10.3,-8.7200079 c -0.1,0.09 -0.08,0.16 0.07,0.21 0.43,0.19 0.79,0.37 1.08,0.5499997 0.11,0.03 0.19,0.02 0.22,-0.03 0.61,-0.5699997 1.31,-0.8599997 2.12,-0.8599997 0.81,0 1.5,0.27 2.1,0.81 0.59,0.5399997 0.92,1.2100001 0.99,1.9999999 l 0.09,0.640007 h 1.42 c 0.65,0 1.21,0.230001 1.68,0.700001 0.47,0.47 0.7,1.02 0.7,1.66 0,0.6 -0.21,1.12 -0.62,1.57 -0.41,0.45 -0.92,0.7 -1.53,0.77 -0.1,0 -0.15,0.05 -0.15,0.16 v 1.13 c 0,0.11 0.05,0.16 0.15,0.16 1.01,-0.06 1.86,-0.46 2.55,-1.19 0.69,-0.73 1.04,-1.6 1.04,-2.6 0,-1.06 -0.37,-1.96 -1.12,-2.700005 -0.75,-0.7500028 -1.65,-1.1200028 -2.7,-1.1200028 h -0.15 c -0.26,-1.0000004 -0.81,-1.8200001 -1.65,-2.4700001 -0.83,-0.65 -1.77,-0.97 -2.8,-0.97 -1.4,-0.01 -2.57,0.52 -3.49,1.58 z" /></g>'

flurries = '<g transform="scale(2) translate(0,0)" id="flurries"><path class="cloud" d="m 14.255547,8.009843 c -1.410001,0 -2.650469,0.440547 -3.730469,1.310547 C 9.445078,10.190391 8.745,11.31 8.445,12.67 c -1.12,0.26 -2.028282,0.830469 -2.738282,1.730469 -0.71,0.9 -1.070312,1.920313 -1.070312,3.070313 0,0.899999 0.220156,1.730233 0.660156,2.490233 0.44,0.76 1.038828,1.358828 1.798828,1.798828 0.76,0.44 1.580703,0.660156 2.470703,0.660156 h 10.830078 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490233 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 h -0.320312 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 18.849604,10.13142 18.714528,9.994091 18.583671,9.853593 17.913619,9.170382 17.134952,8.734393 16.298515,8.363359 15.685858,8.129562 15.006356,8.009843 14.255547,8.009843 Z" id="path849" /><path class="frozenPrecip" d="m 15.014766,19.050235 c -0.2,0 -0.390313,0.08023 -0.570313,0.240234 -0.17,0.170001 -0.25,0.369609 -0.25,0.59961 0,0.23 0.08023,0.429608 0.240235,0.599609 0.16,0.16 0.350078,0.240234 0.580078,0.240234 0.24,0 0.439375,-0.08023 0.609375,-0.240234 0.17,-0.160002 0.25,-0.359844 0.25,-0.589844 0,-0.239999 -0.08,-0.42961 -0.25,-0.599609 -0.17,-0.170001 -0.369375,-0.25 -0.609375,-0.25 z m 3.25,1.699219 c -0.23,0 -0.42961,0.08 -0.59961,0.25 -0.17,0.17 -0.25,0.360078 -0.25,0.580078 0,0.23 0.09,0.429842 0.25,0.589843 0.16,0.170001 0.35961,0.25 0.59961,0.25 0.24,0 0.429843,-0.08 0.589843,-0.25 0.16,-0.160001 0.240235,-0.359608 0.240235,-0.599609 0,-0.22 -0.08023,-0.420078 -0.240235,-0.580078 -0.16,-0.160002 -0.359843,-0.240234 -0.589843,-0.240234 z m -6.429688,0.0098 c -0.24,0 -0.429844,0.08023 -0.589844,0.240234 -0.16,0.16 -0.240234,0.360079 -0.240234,0.58008 0,0.239999 0.08023,0.439609 0.240234,0.599609 0.16,0.170001 0.359844,0.25 0.589844,0.25 0.24,0 0.429844,-0.08 0.589844,-0.25 0.16,-0.16 0.240234,-0.35961 0.240234,-0.599609 0,-0.22 -0.08023,-0.42008 -0.240234,-0.58008 -0.16,-0.16 -0.359844,-0.240234 -0.589844,-0.240234 z m 3.179688,1.890625 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.17,0.18 -0.25,0.389141 -0.25,0.619141 0,0.23 0.08023,0.431562 0.240235,0.601563 0.16,0.17 0.350078,0.25 0.580078,0.25 0.24,0 0.439375,-0.08 0.609375,-0.25 0.17,-0.170001 0.25,-0.371563 0.25,-0.601563 0,-0.23 -0.08977,-0.42961 -0.259766,-0.599609 -0.17,-0.170001 -0.369609,-0.259766 -0.599609,-0.259766 z m -3.189454,1.730468 c -0.229999,0 -0.420078,0.08047 -0.580078,0.230469 -0.16,0.16 -0.240234,0.35961 -0.240234,0.59961 0,0.23 0.08047,0.430078 0.230469,0.580078 0.16,0.15 0.359843,0.230469 0.589843,0.230469 0.240001,0 0.429844,-0.07047 0.589844,-0.230469 0.16,-0.16 0.240235,-0.349844 0.240235,-0.589844 0,-0.24 -0.08024,-0.429844 -0.240235,-0.589844 -0.16,-0.15 -0.359843,-0.230469 -0.589844,-0.230469 z m 6.439454,0 c -0.24,0 -0.43961,0.08047 -0.59961,0.230469 -0.17,0.18 -0.25,0.37961 -0.25,0.59961 0,0.23 0.09,0.420312 0.25,0.570312 0.16,0.16 0.35961,0.240235 0.59961,0.240235 0.24,0 0.429843,-0.07047 0.589843,-0.230469 0.15,-0.16 0.230469,-0.349844 0.230469,-0.589844 0,-0.24 -0.07047,-0.439844 -0.230469,-0.589844 -0.16,-0.15 -0.349843,-0.230469 -0.589843,-0.230469 z m -3.25,1.939454 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.17,0.18 -0.25,0.379375 -0.25,0.609375 0,0.23 0.08023,0.419845 0.240235,0.589844 0.16,0.16 0.350078,0.240234 0.580078,0.240234 0.24,0 0.439375,-0.08023 0.609375,-0.240234 0.17,-0.16 0.25,-0.359844 0.25,-0.589844 0,-0.23 -0.08,-0.429608 -0.25,-0.599609 -0.17,-0.17 -0.369375,-0.25 -0.609375,-0.25 z" id="path844" /></g>'

fog = '<g transform="scale(2) translate(0,0)" id="fog"><path id="path849" d="m 14.775547,8.019844 c -1.410001,0 -2.650469,0.440547 -3.730469,1.310547 C 9.965078,10.200391 9.265,11.32 8.965,12.68 c -1.12,0.26 -2.028282,0.830469 -2.738282,1.730469 -0.71,0.9 -1.070312,1.920314 -1.070312,3.070313 0,0.9 0.220156,1.730234 0.660156,2.490234 0.44,0.76 1.038828,1.358828 1.798828,1.798829 0.76,0.44 1.580703,0.660156 2.470703,0.660156 h 10.830078 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.440001 1.368594,-1.038829 1.808594,-1.798829 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 h -0.320312 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 19.369604,10.14142 19.234528,10.004091 19.103671,9.863594 18.433619,9.180382 17.654952,8.744393 16.818515,8.37336 16.205858,8.139562 15.526356,8.019844 14.775547,8.019844 Z" class="cloud" /><path class="cloud" id="path2" d="m 2.625,21.63 c 0,-0.24 0.08,-0.45 0.25,-0.61 0.17,-0.16 0.38,-0.24 0.63,-0.24 h 18.67 c 0.25,0 0.45,0.08 0.61,0.24 0.16,0.16 0.24,0.36 0.24,0.61 0,0.23 -0.08,0.43 -0.25,0.58 -0.17,0.16 -0.37,0.23 -0.6,0.23 H 3.505 c -0.25,0 -0.46,-0.08 -0.63,-0.23 -0.17,-0.16 -0.25,-0.35 -0.25,-0.58 z m 2.62,-3.14 c 0,-0.24 0.09,-0.44 0.26,-0.6 0.15,-0.15 0.35,-0.23 0.59,-0.23 h 18.67 c 0.23,0 0.42,0.08 0.58,0.24 0.16,0.16 0.23,0.35 0.23,0.59 0,0.24 -0.08,0.44 -0.23,0.6 -0.16,0.17 -0.35,0.25 -0.58,0.25 H 6.095 c -0.24,0 -0.44,-0.08 -0.6,-0.25 -0.17,-0.17 -0.25,-0.37 -0.25,-0.6 z m 1.74,6.2 c 0,-0.24 0.09,-0.43 0.26,-0.59 0.15,-0.15 0.35,-0.23 0.6,-0.23 h 18.68 c 0.24,0 0.44,0.08 0.6,0.23 0.17,0.16 0.25,0.35 0.25,0.58 0,0.24 -0.08,0.44 -0.25,0.61 -0.17,0.17 -0.37,0.25 -0.6,0.25 H 7.845 c -0.23,0 -0.43,-0.09 -0.6,-0.26 -0.17,-0.15 -0.26,-0.36 -0.26,-0.59 z" /></g>'

mostlycloudy = '<g transform="scale(2) translate(0,0)" id="mostlycloudy"><path id="path2" d="m 17.769532,1.5390582 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410154 c 0,0.23 0.09977,0.4300782 0.259766,0.5800784 0.16,0.1499998 0.369609,0.2304686 0.599609,0.2304686 0.23,0 0.429609,-0.070469 0.599609,-0.2304686 0.17,-0.16 0.25,-0.3500784 0.25,-0.5800784 v -2.050781 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.8496093 c -0.23,0 -0.438672,0.08 -0.638672,0.2499999 -0.15,0.1800002 -0.230469,0.3813282 -0.230469,0.6113282 0,0.2399999 0.08023,0.449375 0.240235,0.6093749 l 1.458984,1.4296882 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.1600008 0.240234,-0.3596101 0.240234,-0.5996101 0,-0.24 -0.08023,-0.4398436 -0.240234,-0.5898436 L 11.458985,4.628902 c -0.17,-0.1600002 -0.369843,-0.2402345 -0.589843,-0.2402345 z m 13.800781,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402345 l -1.419922,1.4707031 c -0.15,0.14 -0.230469,0.3398436 -0.230469,0.5898436 0,0.2399999 0.08047,0.4396095 0.230469,0.59961 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.4296881 c 0.16,-0.16 0.240234,-0.3691405 0.240234,-0.6191405 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015624 -0.16,-0.1700002 -0.359609,-0.2500002 -0.599609,-0.2500002 z m -6.910157,2.5507812 c -0.93,0 -1.789609,0.229219 -2.599609,0.699219 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8000003 -0.701172,1.6696103 -0.701172,2.5996103 0,0.94 0.241406,1.811093 0.691406,2.621092 0.47,0.8 1.098438,1.43039 1.898438,1.900391 0.8,0.469999 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.229221 2.609375,-0.69922 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699999 -0.140156,-1.381483 -0.410156,-2.021483 -0.27,-0.6400003 -0.639375,-1.1901563 -1.109375,-1.6601563 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.2800002 -1.319532,-0.419922 -2.019532,-0.419922 z M 7.9902695,11.298829 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.091719,0.441328 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390628 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.17 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609375 -0.16,-0.17 -0.350078,-0.25 -0.580078,-0.25 z m 17.5097655,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z m -13.210971,5.519527 c -0.24,0 -0.439844,0.07047 -0.589844,0.230467 l -1.46875,1.429689 c -0.15,0.18 -0.230469,0.381327 -0.230469,0.611328 0,0.229999 0.08023,0.429843 0.240235,0.589844 0.409999,0.32 0.818515,0.32 1.228515,0 l 1.419922,-1.419922 c 0.16,-0.18 0.240234,-0.400627 0.240234,-0.640625 0,-0.229999 -0.08023,-0.420311 -0.240234,-0.570314 -0.16,-0.149998 -0.359609,-0.230467 -0.599609,-0.230467 z m 10.929687,0.0098 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140002 -0.230469,0.330547 -0.230469,0.560547 0,0.260001 0.08047,0.470393 0.230469,0.650393 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z" class="light" style="stroke-width:0.999998" /><path class="cloud" d="m 11.179688,8.0292969 c -1.410001,0 -2.6504693,0.4405468 -3.7304692,1.3105469 -1.0800001,0.8700002 -1.7800782,1.9896092 -2.0800782,3.3496092 -1.12,0.26 -2.0282812,0.830469 -2.7382812,1.730469 -0.71,0.9 -1.0703125,1.920313 -1.0703125,3.070313 0,0.9 0.2201562,1.730234 0.6601562,2.490234 0.44,0.76 1.0388282,1.358828 1.7988281,1.798828 0.76,0.44 1.5807032,0.660156 2.4707032,0.660156 H 17.320312 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 H 17 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 15.773745,10.150873 15.638669,10.013544 15.507812,9.8730469 14.83776,9.1898352 14.059093,8.7538463 13.222656,8.3828126 12.609999,8.1490155 11.930497,8.0292969 11.179688,8.0292969 Z" id="path849" /></g>'

mostlysunny = '<g transform="scale(2) translate(0,0)" id="mostlysunny"><path style="stroke-width:0.999998" class="light" d="m 15.281752,4.3237673 c -0.24,0 -0.439375,0.08977 -0.609375,0.259766 -0.17,0.17 -0.25,0.369609 -0.25,0.599609 v 2.041016 c 0,0.23 0.09977,0.430078 0.259766,0.580078 0.16,0.15 0.369609,0.230469 0.599609,0.230469 0.23,0 0.429609,-0.07047 0.599609,-0.230469 0.17,-0.16 0.25,-0.350078 0.25,-0.580078 v -2.050781 c 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.84961 c -0.23,0 -0.438672,0.08 -0.638672,0.25 -0.15,0.18 -0.230469,0.381328 -0.230469,0.611328 0,0.24 0.08023,0.449375 0.240235,0.609375 L 9.21144,10.073768 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.1600007 0.240234,-0.3596097 0.240234,-0.5996097 0,-0.24 -0.08023,-0.439844 -0.240234,-0.589844 L 8.971205,7.4136113 c -0.17,-0.16 -0.369843,-0.240234 -0.589843,-0.240234 z m 13.800781,0.0098 c -0.22,0 -0.419844,0.08023 -0.589844,0.240234 l -1.419922,1.470673 c -0.15,0.14 -0.230469,0.339844 -0.230469,0.589844 0,0.24 0.08047,0.439609 0.230469,0.5996097 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.4296877 c 0.16,-0.16 0.240234,-0.369141 0.240234,-0.619141 0,-0.23 -0.08,-0.431562 -0.25,-0.601562 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.550781 c -0.93,0 -1.789609,0.229219 -2.599609,0.6992187 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8 -0.701172,1.66961 -0.701172,2.59961 0,0.94 0.241406,1.811093 0.691406,2.621092 0.47,0.8 1.098438,1.43039 1.898438,1.900391 0.8,0.469999 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.229221 2.609375,-0.69922 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699999 -0.140156,-1.381483 -0.410156,-2.021483 -0.27,-0.64 -0.639375,-1.190156 -1.109375,-1.660156 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.2799997 -1.319532,-0.4199217 -2.019532,-0.4199217 z M 5.50249,14.083568 c -0.22,0 -0.431563,0.08023 -0.601563,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.09172,0.441328 0.261719,0.611328 0.17,0.17 0.369609,0.25 0.599609,0.25 h 2.039063 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.17 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609375 -0.16,-0.17 -0.350078,-0.25 -0.580078,-0.25 z m 17.509765,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z m -2.281284,5.529327 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140002 -0.230469,0.330547 -0.230469,0.560547 0,0.260001 0.08047,0.470393 0.230469,0.650393 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z" id="path2" /><path class="cloud" d="m 12.008142,14.744242 c -0.79944,0.01243 -1.439552,0.170503 -2.1270558,0.613023 -0.7294244,0.483304 -1.2324277,1.140419 -1.4820345,1.990642 -0.6553288,0.206946 -1.1731651,0.568697 -1.5611887,1.094684 -0.3880236,0.525988 -0.5860773,1.129446 -0.5860773,1.80202 0,0.836406 0.3022677,1.561997 0.9144827,2.174212 0.612215,0.612215 1.3277008,0.912798 2.1641072,0.912798 H 15.24504 c 0.836407,0 1.552297,-0.300785 2.147267,-0.904377 0.594969,-0.603593 0.897641,-1.328981 0.897641,-2.182633 0,-0.315549 -0.04772,-0.583211 -0.117889,-0.828592 -0.218757,-0.7288 -0.589271,-1.203309 -1.202469,-1.667289 -0.478638,-0.355431 -1.018572,-0.538921 -1.620133,-0.538921 -0.25006,-0.758802 -0.699318,-1.353637 -1.328778,-1.80202 -0.595622,-0.424278 -1.269809,-0.640738 -2.012537,-0.663547 z" id="path853" /></g>'

rain = '<g transform="scale(2) translate(0,0)" id="rain"><path class="cloud" d="m 14.255547,8.009844 c -1.410001,0 -2.650469,0.440546 -3.730469,1.310547 C 9.445078,10.190391 8.745,11.31 8.445,12.67 c -1.12,0.26 -2.028281,0.830469 -2.738281,1.730469 -0.71,0.9 -1.070313,1.920313 -1.070313,3.070313 0,0.9 0.220156,1.730234 0.660156,2.490234 0.44,0.76 1.038829,1.358828 1.798828,1.798828 0.76,0.44 1.580704,0.660156 2.470704,0.660156 h 10.830077 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 h -0.320312 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 18.849604,10.13142 18.714528,9.994091 18.583671,9.853594 17.913619,9.170382 17.134952,8.734393 16.298515,8.363359 15.685858,8.129562 15.006356,8.009844 14.255547,8.009844 Z" id="path849" /><path class="precip" d="m 19.164922,17.589298 c -0.16,0 -0.308985,0.05039 -0.458984,0.150391 -0.140001,0.1 -0.240782,0.249453 -0.300782,0.439453 l -1.630859,5.771483 c -0.03,0.120001 -0.03906,0.188516 -0.03906,0.228516 0,0.160001 0.05063,0.320704 0.140625,0.470703 0.11,0.160001 0.258985,0.260312 0.458985,0.320313 l 0.240234,0.05078 c 0.19,0 0.359766,-0.06188 0.509766,-0.171877 0.15,-0.109998 0.239297,-0.268983 0.279297,-0.458984 L 19.995,18.65961 c 0,-0.02 0.0095,-0.05914 0.01953,-0.11914 0.01,-0.06 0.01953,-0.110625 0.01953,-0.140625 0,-0.16 -0.04844,-0.320703 -0.148437,-0.470703 -0.1,-0.15 -0.250937,-0.248594 -0.460937,-0.308594 -0.09,-0.02 -0.179766,-0.03125 -0.259766,-0.03125 z m -6.730469,0.0098 c -0.15,10e-7 -0.308984,0.05039 -0.458984,0.150391 -0.15,0.1 -0.260313,0.251405 -0.320313,0.441406 l -1.630859,5.76953 c -0.03,0.09 -0.039063,0.159219 -0.039063,0.199219 0,0.17 0.050157,0.329999 0.160157,0.5 0.11,0.159999 0.270234,0.270077 0.490234,0.330078 0.01,0 0.03961,0.01125 0.09961,0.03125 0.04,0.01 0.06937,0.01953 0.109375,0.01953 0.42,0 0.700313,-0.210625 0.820313,-0.640625 l 1.630859,-5.730469 c 0.07,-0.25 0.03992,-0.469922 -0.08008,-0.669922 -0.12,-0.199999 -0.301015,-0.329141 -0.541015,-0.36914 -0.09,-0.02 -0.170235,-0.03125 -0.240235,-0.03125 z m 3.400391,0.01172 c -0.17,0 -0.330235,0.04844 -0.490235,0.148438 -0.16,0.1 -0.258828,0.251405 -0.298828,0.441406 l -2.441406,8.769529 c -0.07,0.260001 -0.04945,0.470391 0.06055,0.650391 0.15,0.21 0.319531,0.338672 0.519531,0.388672 0.07,0.03 0.16,0.05078 0.25,0.05078 0.19,0 0.349766,-0.05969 0.509766,-0.179687 0.16,-0.120001 0.251015,-0.259687 0.291015,-0.429688 l 2.429688,-8.781249 c 0.06,-0.230001 0.03969,-0.438673 -0.07031,-0.638672 -0.11,-0.2 -0.270234,-0.330626 -0.490234,-0.390625 -0.09,-0.02 -0.179531,-0.0293 -0.269531,-0.0293 z" id="path840" /></g>'

sleet = '<g transform="scale(2) translate(0,0)" id="sleet"><path class="cloud" d="m 14.279688,8.029452 c -1.410001,0 -2.650469,0.440547 -3.730469,1.310547 -1.08,0.870001 -1.780078,1.98961 -2.080078,3.34961 -1.12,0.26 -2.028282,0.830469 -2.738282,1.730469 -0.71,0.9 -1.070312,1.920313 -1.070312,3.070313 0,0.899999 0.220156,1.730233 0.660156,2.490233 0.44,0.76 1.038828,1.358828 1.798828,1.798828 0.76,0.44 1.580703,0.660156 2.470703,0.660156 h 10.830078 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490233 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 C 22.806176,13.033555 21.705455,12.59 20.420312,12.59 H 20.1 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 18.873745,10.151029 18.738669,10.0137 18.607812,9.873202 17.93776,9.189991 17.159093,8.754002 16.322656,8.382968 15.709999,8.149171 15.030497,8.029452 14.279688,8.029452 Z" id="path849" /><path class="frozenPrecip" d="m 11.650391,20.929375 c -0.24,0 -0.439844,0.07047 -0.589844,0.230468 -0.15,0.16 -0.230469,0.349845 -0.230469,0.589844 0,0.22 0.09,0.410313 0.25,0.570313 0.15,0.16 0.340313,0.240234 0.570313,0.240234 0.24,0 0.439843,-0.07047 0.589843,-0.230467 0.15,-0.16 0.230469,-0.350078 0.230469,-0.58008 0,-0.239999 -0.07047,-0.439844 -0.230469,-0.589842 -0.16,-0.15 -0.349843,-0.230469 -0.589843,-0.23047 z m 6.548828,0.0098 c -0.24,0 -0.429844,0.07047 -0.589844,0.230468 -0.15,0.16 -0.228516,0.349844 -0.228516,0.589844 0,0.23 0.09,0.420313 0.25,0.570313 0.15,0.16 0.340079,0.240234 0.580079,0.240234 0.24,0 0.428125,-0.08047 0.578124,-0.230469 0.15,-0.15 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.07047,-0.429844 -0.230469,-0.589844 -0.16,-0.15 -0.349843,-0.230468 -0.589843,-0.230468 z m -4.119141,3.080078 c -0.24,0 -0.429844,0.07047 -0.589844,0.230469 -0.15,0.149999 -0.230468,0.350078 -0.230468,0.580078 0,0.23 0.08023,0.420078 0.240234,0.580078 0.16,0.16 0.350078,0.240235 0.580078,0.240235 0.24,0 0.429844,-0.07047 0.589844,-0.230469 0.15,-0.16 0.230469,-0.349843 0.230469,-0.589843 0,-0.23 -0.07047,-0.420078 -0.230469,-0.580078 -0.16,-0.150001 -0.349844,-0.230469 -0.589844,-0.23047 z" id="path848" /><path class="precip" d="m 14.867188,20.749687 c -0.10625,0.01375 -0.211407,0.04937 -0.316407,0.109374 -0.2,0.12 -0.340156,0.30125 -0.410156,0.53125 l -0.230469,0.900391 c -0.02,0.08 -0.0293,0.169531 -0.0293,0.269531 -0.01,0.15 0.02844,0.310703 0.148438,0.470704 0.1,0.16 0.251172,0.258829 0.451172,0.298828 0.23,0.06 0.448672,0.03945 0.638672,-0.06055 0.19,-0.100001 0.330156,-0.278594 0.410156,-0.558594 l 0.259765,-0.900391 c 0.07,-0.219999 0.05164,-0.430859 -0.06836,-0.630859 -0.12,-0.2 -0.29125,-0.328438 -0.53125,-0.398438 -0.11,-0.035 -0.216016,-0.045 -0.322265,-0.03125 z m -3.91211,2.462891 c -0.1125,0.0125 -0.219219,0.04742 -0.324219,0.107422 -0.21,0.12 -0.340156,0.289297 -0.410156,0.529296 l -0.08984,0.589844 c 0,0.03 -0.01148,0.07109 -0.02148,0.121093 -0.01,0.06 -0.01953,0.09891 -0.01953,0.128907 0,0.170001 0.05016,0.330468 0.160156,0.480468 0.1,0.16 0.250938,0.270078 0.460938,0.330079 0.04,-1e-6 0.07867,0.0095 0.138671,0.01953 0.06,0.01 0.110625,0.02148 0.140625,0.02148 0.41,0 0.659766,-0.220156 0.759766,-0.660156 l 0.140625,-0.599609 c 0.06,-0.21 0.03969,-0.42086 -0.07031,-0.63086 -0.119999,-0.2 -0.279765,-0.340156 -0.509765,-0.410156 -0.125,-0.03 -0.242969,-0.03984 -0.355469,-0.02734 z m 6.529297,0.01953 c -0.1125,0.0125 -0.219219,0.04742 -0.324219,0.107421 -0.21,0.120001 -0.340156,0.291251 -0.410156,0.53125 l -0.08984,0.589844 c 0,0.02 2.35e-4,0.05937 -0.0098,0.109375 -0.01,0.05 -0.0098,0.100859 -0.0098,0.13086 0,0.17 0.05844,0.328282 0.148437,0.488282 0.1,0.16 0.251172,0.270079 0.451172,0.330078 0.03,0 0.08062,0.01148 0.140625,0.02148 0.06,0.01 0.108672,0.01953 0.138672,0.01953 0.41,0 0.659766,-0.220155 0.759766,-0.660156 l 0.140625,-0.599609 c 0.07,-0.210001 0.04969,-0.420861 -0.07031,-0.63086 -0.11,-0.199999 -0.279765,-0.340156 -0.509765,-0.410156 -0.125,-0.03 -0.242969,-0.03984 -0.355469,-0.02734 z m -4.119141,3.072265 c -0.105,0.01125 -0.209453,0.04547 -0.314453,0.105469 -0.2,0.11 -0.340156,0.279765 -0.410156,0.509766 l -0.130859,0.589843 c -0.03,0.120001 -0.03906,0.190469 -0.03906,0.230469 0,0.170001 0.06016,0.330234 0.160156,0.490234 0.11,0.160001 0.268282,0.270079 0.488282,0.330079 0.08,0.02 0.170234,0.0293 0.240234,0.0293 0.43,0 0.700781,-0.199375 0.800781,-0.609375 l 0.128906,-0.589843 c 0.07,-0.25 0.04188,-0.479687 -0.07812,-0.679688 -0.12,-0.2 -0.30125,-0.331094 -0.53125,-0.371094 -0.105001,-0.035 -0.209454,-0.04641 -0.314454,-0.03516 z" id="path846" /></g>'

snow = '<g transform="scale(2) translate(0,0)"><path d="m 7.465,15.015 c 0,-0.19 0.07,-0.36 0.2,-0.5 0.13,-0.14 0.29,-0.21 0.48,-0.21 0.19,0 0.36,0.07 0.49,0.21 0.13,0.14 0.2,0.3 0.2,0.5 0,0.19 -0.07,0.35 -0.2,0.48 -0.13,0.13 -0.3,0.2 -0.48,0.2 -0.18,0 -0.35,-0.07 -0.48,-0.2 -0.15,-0.14 -0.21,-0.3 -0.21,-0.48 z m 1.98,0 c 0,-0.19 0.07,-0.36 0.2,-0.5 0.13,-0.14 0.29,-0.21 0.48,-0.21 h 3.23 l -2.28,-2.28 c -0.14,-0.12 -0.21,-0.28 -0.21,-0.47 0,-0.19 0.07,-0.35 0.21,-0.49 0.14,-0.14 0.3,-0.21 0.49,-0.21 0.19,0 0.35,0.07 0.49,0.21 l 2.27,2.27 v -3.21 c 0,-0.19 0.07,-0.36 0.21,-0.5 0.14,-0.14 0.3,-0.21 0.5,-0.21 0.19,0 0.35,0.07 0.48,0.21 0.13,0.14 0.2,0.3 0.2,0.5 v 3.23 l 2.29,-2.3 c 0.14,-0.14 0.3,-0.21 0.48,-0.21 0.18,0 0.35,0.07 0.49,0.21 0.12,0.14 0.18,0.3 0.18,0.49 0,0.19 -0.06,0.35 -0.18,0.47 l -2.28,2.28 h 3.23 c 0.18,0 0.34,0.07 0.47,0.21 0.13,0.14 0.2,0.3 0.2,0.5 0,0.18 -0.07,0.34 -0.2,0.47 -0.13,0.13 -0.29,0.2 -0.47,0.2 h -3.23 l 2.29,2.29 c 0.12,0.12 0.18,0.28 0.18,0.47 0,0.19 -0.06,0.35 -0.18,0.49 -0.14,0.14 -0.31,0.21 -0.49,0.21 -0.18,0 -0.35,-0.07 -0.48,-0.21 l -2.29,-2.3 v 3.24 c 0,0.19 -0.07,0.36 -0.2,0.49 -0.13,0.13 -0.29,0.2 -0.48,0.2 -0.19,0 -0.36,-0.07 -0.5,-0.2 -0.14,-0.13 -0.21,-0.3 -0.21,-0.49 v -3.22 l -2.27,2.27 c -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.49,-0.21 -0.14,-0.14 -0.21,-0.3 -0.21,-0.49 0,-0.19 0.07,-0.34 0.21,-0.47 l 2.3,-2.29 h -3.24 c -0.19,0 -0.35,-0.07 -0.48,-0.2 -0.16,-0.11 -0.22,-0.27 -0.22,-0.45 z m 0.01,4.84 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.48 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.13 -0.21,-0.29 -0.21,-0.48 z m 0,-9.71 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.49 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.14 -0.21,-0.31 -0.21,-0.49 z m 4.85,11.71 c 0,-0.18 0.07,-0.34 0.21,-0.47 0.14,-0.13 0.3,-0.2 0.5,-0.2 0.19,0 0.35,0.07 0.48,0.2 0.13,0.13 0.2,0.29 0.2,0.47 0,0.19 -0.07,0.36 -0.2,0.49 -0.13,0.13 -0.29,0.2 -0.48,0.2 -0.19,0 -0.36,-0.07 -0.5,-0.2 -0.14,-0.13 -0.21,-0.29 -0.21,-0.49 z m 0,-13.71 c 0,-0.19 0.07,-0.36 0.21,-0.49 0.14,-0.13 0.3,-0.2 0.5,-0.2 0.19,0 0.35,0.07 0.48,0.2 0.13,0.13 0.2,0.3 0.2,0.49 0,0.18 -0.07,0.34 -0.2,0.47 -0.13,0.13 -0.29,0.2 -0.48,0.2 -0.19,0 -0.36,-0.07 -0.5,-0.2 -0.14,-0.13 -0.21,-0.29 -0.21,-0.47 z m 4.87,11.71 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.48 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.13 -0.21,-0.29 -0.21,-0.48 z m 0,-9.71 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.49 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.14 -0.21,-0.31 -0.21,-0.49 z m 2,4.87 c 0,-0.19 0.07,-0.36 0.2,-0.5 0.13,-0.14 0.3,-0.21 0.49,-0.21 0.18,0 0.34,0.07 0.47,0.21 0.13,0.14 0.2,0.3 0.2,0.5 0,0.18 -0.07,0.34 -0.2,0.47 -0.13,0.13 -0.29,0.2 -0.47,0.2 -0.19,0 -0.36,-0.07 -0.49,-0.2 -0.13,-0.13 -0.2,-0.29 -0.2,-0.47 z" id="path2" class="frozenPrecip" /></g>'

sunny = '<g transform="scale(2) translate(0,0)" id="clear"><path class="light" d="m 15.010742,4.3700995 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410156 c 0,0.23 0.09977,0.4300781 0.259766,0.5800782 0.16,0.1499999 0.369609,0.2304687 0.599609,0.2304687 0.23,0 0.429609,-0.070469 0.599609,-0.2304687 0.17,-0.16 0.25,-0.3500782 0.25,-0.5800782 V 5.2197089 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z M 8.1103516,7.2197089 c -0.23,0 -0.4386719,0.08 -0.6386719,0.25 -0.15,0.18 -0.2304687,0.3813281 -0.2304687,0.6113281 0,0.24 0.080234,0.449375 0.2402343,0.609375 L 8.9404297,10.1201 c 0.15,0.16 0.3498437,0.240234 0.5898437,0.240234 0.24,0 0.4396094,-0.08023 0.5996096,-0.240234 0.16,-0.1600005 0.240234,-0.3596099 0.240234,-0.5996099 0,-0.24 -0.08023,-0.4398437 -0.240234,-0.5898437 L 8.7001953,7.4599433 C 8.5301953,7.2999432 8.3303516,7.2197089 8.1103516,7.2197089 Z m 13.8007814,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402344 l -1.419922,1.4707031 c -0.15,0.14 -0.230469,0.3398437 -0.230469,0.5898437 0,0.24 0.08047,0.4396094 0.230469,0.5996099 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.16 0.240234,-0.3691406 0.240234,-0.6191406 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015625 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.5507812 c -0.93,0 -1.789609,0.2292189 -2.599609,0.6992189 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8 -0.7011719,1.66961 -0.7011719,2.59961 0,0.94 0.2414059,1.811093 0.6914059,2.621093 0.47,0.8 1.098438,1.430391 1.898438,1.900391 0.8,0.47 1.671328,0.699219 2.611328,0.699219 0.94,0 1.809375,-0.229219 2.609375,-0.699219 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.7 -0.140156,-1.381484 -0.410156,-2.021484 -0.27,-0.64 -0.639375,-1.190156 -1.109375,-1.660156 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.4199219 -2.019532,-0.4199219 z M 5.2314793,14.12987 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240234 -0.17,0.17 -0.25,0.379141 -0.25,0.619141 0,0.24 0.091719,0.441328 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390624 c 0.23,0 0.4300782,-0.08 0.5800782,-0.25 0.15,-0.17 0.2207031,-0.371328 0.2207031,-0.611328 0,-0.24 -0.080469,-0.439375 -0.2304687,-0.609375 -0.16,-0.17 -0.3500782,-0.25 -0.5800782,-0.25 z m 17.5097657,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.16,0.18 -0.240234,0.379141 -0.240234,0.619141 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371562 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z M 9.5302734,19.649397 c -0.24,0 -0.4398437,0.07047 -0.5898437,0.230468 l -1.46875,1.429688 c -0.15,0.18 -0.2304687,0.381328 -0.2304687,0.611328 -1e-7,0.23 0.080234,0.429844 0.2402343,0.589844 0.41,0.32 0.8185156,0.32 1.2285157,0 l 1.419922,-1.419922 c 0.16,-0.18 0.240234,-0.400626 0.240234,-0.640625 0,-0.23 -0.08023,-0.420312 -0.240234,-0.570313 C 9.9698828,19.729866 9.7702735,19.649397 9.5302734,19.649397 Z m 10.9296876,0.0098 c -0.22,1e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.14 -0.230469,0.330547 -0.230469,0.560547 0,0.26 0.08047,0.470391 0.230469,0.650391 l 1.419922,1.419922 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z m -5.458985,2.271485 c -0.23,0 -0.429609,0.08023 -0.599609,0.240234 -0.17,0.16 -0.25,0.35961 -0.25,0.59961 v 1.990234 c 0,0.24 0.08,0.449141 0.25,0.619141 0.16,0.17 0.369609,0.25 0.599609,0.25 0.23,0 0.42961,-0.08 0.59961,-0.25 0.17,-0.17 0.25,-0.379141 0.25,-0.619141 v -1.990234 c 0,-0.24 -0.08024,-0.43961 -0.240235,-0.59961 -0.16,-0.16 -0.369375,-0.240234 -0.609375,-0.240234 z" id="path2" /></g>'

tstorms = '<g transform="scale(2) translate(0,0)" id="tstorms"><path class="cloud" d="m 14.249144,7.9707049 c -1.410001,0 -2.650469,0.4405468 -3.730469,1.3105469 -1.0799999,0.8700002 -1.780078,1.9896092 -2.080078,3.3496092 -1.12,0.26 -2.0282812,0.830469 -2.7382812,1.730469 -0.71,0.9 -1.0703125,1.920313 -1.0703125,3.070313 0,0.9 0.2201562,1.730234 0.6601562,2.490234 0.44,0.76 1.0388282,1.358828 1.7988281,1.798828 0.76,0.44 1.5807032,0.660156 2.4707032,0.660156 H 20.389768 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 h -0.320312 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 18.843201,10.092281 18.708125,9.954952 18.577268,9.8144549 17.907216,9.1312432 17.128549,8.6952543 16.292112,8.3242206 15.679455,8.0904235 14.999953,7.9707049 14.249144,7.9707049 Z" id="path849" /><path class="light" id="path845" d="m 10.108516,17.621093 c -0.09,0 -0.1687504,0.05063 -0.2187504,0.140626 l -0.4648438,1.220703 0.00977,0.0039 -0.5253907,1.357422 -0.109375,0.287109 c -6.073e-4,-1.54e-4 -0.00135,1.54e-4 -0.00195,0 l -1.21875,3.146484 -0.00195,-0.002 -0.048828,0.125 c -0.03,0.14 0.020625,0.220703 0.140625,0.220703 h 2.1308593 l -1.0410156,3.779297 h 0.2792969 l 3.9707043,-5.21875 c 0.04,-0.04 0.03953,-0.09062 0.01953,-0.140625 -0.02,-0.05 -0.06867,-0.07031 -0.138672,-0.07031 h -2.179687 l 2.478515,-4.640625 c 0.06,-0.14 0.02133,-0.208985 -0.138672,-0.208985 z" /><path class="precip" d="m 15.830078,17.609531 c -0.16,0 -0.320703,0.05039 -0.470703,0.150391 -0.15,0.1 -0.258594,0.249219 -0.308594,0.449219 l -2.261719,8.720703 c -0.01,0.1 -0.01953,0.189297 -0.01953,0.279297 0,0.39 0.190078,0.651484 0.580078,0.771484 0.01,0 0.05133,-2.34e-4 0.111329,0.0098 0.06,0.01 0.108671,0.0098 0.138671,0.0098 0.17,0 0.330235,-0.05039 0.490235,-0.15039 0.16,-0.1 0.270312,-0.260469 0.320312,-0.480469 l 2.25,-8.689453 c 0.06,-0.24 0.03969,-0.450391 -0.07031,-0.650391 -0.11,-0.19 -0.27,-0.318672 -0.5,-0.388672 -0.17,-0.02 -0.259766,-0.03125 -0.259766,-0.03125 z m 3.359375,0.01953 c -0.17,0 -0.32875,0.05039 -0.46875,0.150391 -0.14,0.1 -0.240781,0.251172 -0.300781,0.451172 l -1.458984,5.699219 c 0,0.02 -0.0017,0.04938 -0.01172,0.109375 -0.02,0.05 -0.01953,0.08133 -0.01953,0.111328 0,0.13 0.02961,0.258906 0.09961,0.378906 0.14,0.22 0.309766,0.371406 0.509765,0.441406 0.11,0.03 0.210782,0.04883 0.300782,0.04883 0.09,0 0.200312,-0.02008 0.320312,-0.08008 0.21,-0.09 0.349922,-0.280312 0.419922,-0.570312 l 1.439453,-5.669922 c 0.03,-0.14 0.05078,-0.229531 0.05078,-0.269531 0,-0.15 -0.05016,-0.299219 -0.160156,-0.449219 -0.11,-0.15 -0.260937,-0.260313 -0.460937,-0.320313 -0.17,-0.02 -0.259766,-0.03125 -0.259766,-0.03125 z" id="path854" /></g>'

partlycloudy = '<g transform="scale(2) translate(0,0)" id="mostlysunny"><path style="stroke-width:0.999998" class="light" d="m 15.281752,4.3237673 c -0.24,0 -0.439375,0.08977 -0.609375,0.259766 -0.17,0.17 -0.25,0.369609 -0.25,0.599609 v 2.041016 c 0,0.23 0.09977,0.430078 0.259766,0.580078 0.16,0.15 0.369609,0.230469 0.599609,0.230469 0.23,0 0.429609,-0.07047 0.599609,-0.230469 0.17,-0.16 0.25,-0.350078 0.25,-0.580078 v -2.050781 c 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.84961 c -0.23,0 -0.438672,0.08 -0.638672,0.25 -0.15,0.18 -0.230469,0.381328 -0.230469,0.611328 0,0.24 0.08023,0.449375 0.240235,0.609375 L 9.21144,10.073768 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.1600007 0.240234,-0.3596097 0.240234,-0.5996097 0,-0.24 -0.08023,-0.439844 -0.240234,-0.589844 L 8.971205,7.4136113 c -0.17,-0.16 -0.369843,-0.240234 -0.589843,-0.240234 z m 13.800781,0.0098 c -0.22,0 -0.419844,0.08023 -0.589844,0.240234 l -1.419922,1.470673 c -0.15,0.14 -0.230469,0.339844 -0.230469,0.589844 0,0.24 0.08047,0.439609 0.230469,0.5996097 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.4296877 c 0.16,-0.16 0.240234,-0.369141 0.240234,-0.619141 0,-0.23 -0.08,-0.431562 -0.25,-0.601562 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.550781 c -0.93,0 -1.789609,0.229219 -2.599609,0.6992187 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8 -0.701172,1.66961 -0.701172,2.59961 0,0.94 0.241406,1.811093 0.691406,2.621092 0.47,0.8 1.098438,1.43039 1.898438,1.900391 0.8,0.469999 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.229221 2.609375,-0.69922 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699999 -0.140156,-1.381483 -0.410156,-2.021483 -0.27,-0.64 -0.639375,-1.190156 -1.109375,-1.660156 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.2799997 -1.319532,-0.4199217 -2.019532,-0.4199217 z M 5.50249,14.083568 c -0.22,0 -0.431563,0.08023 -0.601563,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.09172,0.441328 0.261719,0.611328 0.17,0.17 0.369609,0.25 0.599609,0.25 h 2.039063 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.17 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609375 -0.16,-0.17 -0.350078,-0.25 -0.580078,-0.25 z m 17.509765,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z m -2.281284,5.529327 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140002 -0.230469,0.330547 -0.230469,0.560547 0,0.260001 0.08047,0.470393 0.230469,0.650393 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z" id="path2" /><path class="cloud" d="m 12.008142,14.744242 c -0.79944,0.01243 -1.439552,0.170503 -2.1270558,0.613023 -0.7294244,0.483304 -1.2324277,1.140419 -1.4820345,1.990642 -0.6553288,0.206946 -1.1731651,0.568697 -1.5611887,1.094684 -0.3880236,0.525988 -0.5860773,1.129446 -0.5860773,1.80202 0,0.836406 0.3022677,1.561997 0.9144827,2.174212 0.612215,0.612215 1.3277008,0.912798 2.1641072,0.912798 H 15.24504 c 0.836407,0 1.552297,-0.300785 2.147267,-0.904377 0.594969,-0.603593 0.897641,-1.328981 0.897641,-2.182633 0,-0.315549 -0.04772,-0.583211 -0.117889,-0.828592 -0.218757,-0.7288 -0.589271,-1.203309 -1.202469,-1.667289 -0.478638,-0.355431 -1.018572,-0.538921 -1.620133,-0.538921 -0.25006,-0.758802 -0.699318,-1.353637 -1.328778,-1.80202 -0.595622,-0.424278 -1.269809,-0.640738 -2.012537,-0.663547 z" id="path853" /></g>'

partlysunny = '<g transform="scale(2) translate(0,0)" id="mostlycloudy"><path id="path2" d="m 17.769532,1.5390582 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410154 c 0,0.23 0.09977,0.4300782 0.259766,0.5800784 0.16,0.1499998 0.369609,0.2304686 0.599609,0.2304686 0.23,0 0.429609,-0.070469 0.599609,-0.2304686 0.17,-0.16 0.25,-0.3500784 0.25,-0.5800784 v -2.050781 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.90039,2.8496093 c -0.23,0 -0.438672,0.08 -0.638672,0.2499999 -0.15,0.1800002 -0.230469,0.3813282 -0.230469,0.6113282 0,0.2399999 0.08023,0.449375 0.240235,0.6093749 l 1.458984,1.4296882 c 0.15,0.16 0.349844,0.240234 0.589844,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.1600008 0.240234,-0.3596101 0.240234,-0.5996101 0,-0.24 -0.08023,-0.4398436 -0.240234,-0.5898436 L 11.458985,4.628902 c -0.17,-0.1600002 -0.369843,-0.2402345 -0.589843,-0.2402345 z m 13.800781,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402345 l -1.419922,1.4707031 c -0.15,0.14 -0.230469,0.3398436 -0.230469,0.5898436 0,0.2399999 0.08047,0.4396095 0.230469,0.59961 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.4296881 c 0.16,-0.16 0.240234,-0.3691405 0.240234,-0.6191405 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015624 -0.16,-0.1700002 -0.359609,-0.2500002 -0.599609,-0.2500002 z m -6.910157,2.5507812 c -0.93,0 -1.789609,0.229219 -2.599609,0.699219 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8000003 -0.701172,1.6696103 -0.701172,2.5996103 0,0.94 0.241406,1.811093 0.691406,2.621092 0.47,0.8 1.098438,1.43039 1.898438,1.900391 0.8,0.469999 1.671328,0.69922 2.611328,0.69922 0.94,0 1.809375,-0.229221 2.609375,-0.69922 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.699999 -0.140156,-1.381483 -0.410156,-2.021483 -0.27,-0.6400003 -0.639375,-1.1901563 -1.109375,-1.6601563 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.2800002 -1.319532,-0.419922 -2.019532,-0.419922 z M 7.9902695,11.298829 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.091719,0.441328 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390628 c 0.23,0 0.430078,-0.08 0.580078,-0.25 0.15,-0.17 0.220703,-0.371328 0.220703,-0.611328 0,-0.24 -0.08047,-0.439375 -0.230469,-0.609375 -0.16,-0.17 -0.350078,-0.25 -0.580078,-0.25 z m 17.5097655,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z m -13.210971,5.519527 c -0.24,0 -0.439844,0.07047 -0.589844,0.230467 l -1.46875,1.429689 c -0.15,0.18 -0.230469,0.381327 -0.230469,0.611328 0,0.229999 0.08023,0.429843 0.240235,0.589844 0.409999,0.32 0.818515,0.32 1.228515,0 l 1.419922,-1.419922 c 0.16,-0.18 0.240234,-0.400627 0.240234,-0.640625 0,-0.229999 -0.08023,-0.420311 -0.240234,-0.570314 -0.16,-0.149998 -0.359609,-0.230467 -0.599609,-0.230467 z m 10.929687,0.0098 c -0.22,3e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.140002 -0.230469,0.330547 -0.230469,0.560547 0,0.260001 0.08047,0.470393 0.230469,0.650393 l 1.419922,1.41992 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z" class="light" style="stroke-width:0.999998" /><path class="cloud" d="m 11.179688,8.0292969 c -1.410001,0 -2.6504693,0.4405468 -3.7304692,1.3105469 -1.0800001,0.8700002 -1.7800782,1.9896092 -2.0800782,3.3496092 -1.12,0.26 -2.0282812,0.830469 -2.7382812,1.730469 -0.71,0.9 -1.0703125,1.920313 -1.0703125,3.070313 0,0.9 0.2201562,1.730234 0.6601562,2.490234 0.44,0.76 1.0388282,1.358828 1.7988281,1.798828 0.76,0.44 1.5807032,0.660156 2.4707032,0.660156 H 17.320312 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 H 17 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 15.773745,10.150873 15.638669,10.013544 15.507812,9.8730469 14.83776,9.1898352 14.059093,8.7538463 13.222656,8.3828126 12.609999,8.1490155 11.930497,8.0292969 11.179688,8.0292969 Z" id="path849" /></g>'

sprinklerWatering = '<g transform="translate(0,0)"><path   d="m 9.785,16.555 c 0,0.92 0.23,1.78 0.7,2.57 0.47,0.79 1.1,1.43 1.9,1.9 0.8,0.47 1.66,0.71 2.59,0.71 0.93,0 1.8,-0.24 2.61,-0.71 0.81,-0.47 1.45,-1.11 1.92,-1.9 0.47,-0.8 0.71,-1.65 0.71,-2.57 0,-0.6 -0.17,-1.31 -0.52,-2.14 -0.35,-0.83 -0.77,-1.6 -1.26,-2.3 -0.44,-0.57 -0.96,-1.2 -1.56,-1.88 -0.6,-0.68 -1.65,-1.73 -1.89,-1.97 l -1.28,1.29 c -0.62,0.6 -1.22,1.29 -1.79,2.08 -0.57,0.79 -1.07,1.64 -1.49,2.55 -0.44,0.91 -0.64,1.7 -0.64,2.37 z"   id="path2"   class="rainDropWatering" /></g>'

saturationSkip = '<g transform="translate(0,0)"><path   id="path2"   d="M 12.724609 7.4394531 L 12.380859 7.8242188 C 12.1204 8.1258033 11.887267 8.4540556 11.681641 8.8378906 C 11.634545 8.9226625 11.611082 8.9934112 11.574219 9.0722656 L 13.427734 10.925781 C 13.529105 10.869077 13.624622 10.803113 13.710938 10.716797 C 13.957688 10.456338 14.095703 10.139657 14.095703 9.7695312 C 14.095703 9.1800712 13.643071 8.3990405 12.724609 7.4394531 z M 18.400391 10.099609 L 17.892578 10.689453 C 17.508744 11.114413 17.166855 11.594207 16.851562 12.15625 C 16.536269 12.718294 16.371094 13.17089 16.371094 13.541016 C 16.371094 13.664728 16.383601 13.783612 16.402344 13.900391 L 18.068359 15.566406 C 18.176056 15.58282 18.284983 15.595703 18.400391 15.595703 C 18.962434 15.595703 19.455973 15.389731 19.853516 14.992188 C 20.25106 14.580936 20.455078 14.10306 20.455078 13.541016 C 20.455078 13.184598 20.278256 12.732002 19.935547 12.15625 C 19.592837 11.580499 19.248886 11.100595 18.933594 10.730469 C 18.851344 10.634509 18.742516 10.496495 18.619141 10.345703 C 18.495765 10.194911 18.414099 10.113318 18.400391 10.099609 z M 12.875 13.964844 L 12.533203 14.294922 C 11.998576 14.802132 11.394367 15.499616 10.722656 16.376953 C 10.366238 16.843038 10.092381 17.336504 9.8730469 17.857422 C 9.6537129 18.378341 9.5449219 18.830973 9.5449219 19.228516 C 9.5449219 20.174395 9.8596122 20.955314 10.503906 21.599609 C 11.1482 22.243903 11.94283 22.560547 12.875 22.560547 C 13.80717 22.560547 14.588127 22.230231 15.232422 21.585938 C 15.876716 20.941644 16.179688 20.146978 16.179688 19.228516 C 16.179688 18.830973 16.068943 18.378377 15.849609 17.84375 C 15.630275 17.322831 15.356345 16.829293 15.027344 16.390625 C 14.396758 15.554414 13.808174 14.856966 13.232422 14.294922 C 13.177592 14.253802 13.053209 14.143053 12.875 13.964844 z "   class="saturatedSoil" /><path   d="m 6.5126951,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457545 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'

rainSkip = '<g transform="translate(0,0)"><path   id="path844"   d="M 19.164062 14.560547 C 19.004062 14.560547 18.855078 14.610937 18.705078 14.710938 C 18.565078 14.810937 18.464297 14.960391 18.404297 15.150391 L 18.238281 15.736328 L 19.582031 17.080078 L 19.994141 15.630859 C 19.994141 15.610859 20.005625 15.569769 20.015625 15.509766 C 20.025625 15.449766 20.035156 15.399141 20.035156 15.369141 C 20.035156 15.209141 19.984766 15.050391 19.884766 14.900391 C 19.784766 14.750391 19.635781 14.649844 19.425781 14.589844 C 19.335781 14.569844 19.244062 14.560547 19.164062 14.560547 z M 12.435547 14.570312 C 12.285547 14.570312 12.124609 14.620702 11.974609 14.720703 C 11.824609 14.820703 11.714297 14.970156 11.654297 15.160156 L 10.025391 20.929688 C 9.9953906 21.019687 9.984375 21.090858 9.984375 21.130859 C 9.984375 21.300858 10.034531 21.460858 10.144531 21.630859 C 10.254531 21.790859 10.414766 21.900937 10.634766 21.960938 C 10.644766 21.960938 10.674375 21.970234 10.734375 21.990234 C 10.774375 22.000234 10.805705 22.009766 10.845703 22.009766 C 11.265703 22.009766 11.544063 21.799141 11.664062 21.369141 L 13.294922 15.640625 C 13.364922 15.390625 13.334844 15.170703 13.214844 14.970703 C 13.094844 14.770703 12.915781 14.639609 12.675781 14.599609 C 12.585781 14.579609 12.505547 14.570312 12.435547 14.570312 z M 15.113281 15.005859 C 15.087705 15.058499 15.057851 15.108509 15.044922 15.169922 L 12.605469 23.939453 C 12.535469 24.199453 12.554062 24.409844 12.664062 24.589844 C 12.814063 24.799844 12.985547 24.930469 13.185547 24.980469 C 13.255547 25.010469 13.345547 25.029297 13.435547 25.029297 C 13.625547 25.029297 13.785313 24.969606 13.945312 24.849609 C 14.105313 24.729608 14.194375 24.589923 14.234375 24.419922 L 16.464844 16.359375 L 15.113281 15.005859 z M 17.710938 17.605469 L 16.775391 20.919922 C 16.745391 21.039923 16.734375 21.110391 16.734375 21.150391 C 16.734375 21.310391 16.785005 21.469141 16.875 21.619141 C 16.985 21.779141 17.135937 21.879454 17.335938 21.939453 L 17.574219 21.990234 C 17.764219 21.990234 17.935938 21.930314 18.085938 21.820312 C 18.235937 21.710311 18.325234 21.549376 18.365234 21.359375 L 19.052734 18.945312 L 17.710938 17.605469 z "   class="rainDropsPredicted" /><path   id="path2"   d="M 14.304688 4.9707031 C 12.894687 4.9707031 11.644687 5.40125 10.554688 6.28125 C 10.219393 6.5519464 9.9327202 6.8518529 9.6699219 7.1679688 L 10.871094 8.3691406 C 11.035344 8.1516787 11.220942 7.9434094 11.435547 7.75 C 12.235547 7.02 13.195156 6.6601562 14.285156 6.6601562 C 15.375156 6.6601562 16.314766 7.02 17.134766 7.75 C 17.944766 8.47 18.415391 9.380937 18.525391 10.460938 L 18.605469 11.041016 C 18.605469 11.151016 18.665156 11.210938 18.785156 11.210938 L 20.394531 11.210938 C 21.284531 11.210938 22.055078 11.529922 22.705078 12.169922 C 23.355078 12.809922 23.685547 13.559688 23.685547 14.429688 C 23.685547 15.299687 23.385156 16.049453 22.785156 16.689453 C 22.185156 17.329453 21.455469 17.670938 20.605469 17.710938 C 20.475469 17.710938 20.404297 17.770624 20.404297 17.890625 L 20.404297 17.902344 L 21.728516 19.226562 C 22.174662 19.107834 22.602464 18.928356 23.005859 18.679688 C 23.735859 18.229688 24.314375 17.630859 24.734375 16.880859 C 25.154375 16.130859 25.365234 15.319453 25.365234 14.439453 C 25.365234 13.549453 25.135313 12.720703 24.695312 11.970703 C 24.255312 11.220703 23.644766 10.619453 22.884766 10.189453 C 22.124766 9.7594526 21.294297 9.5410156 20.404297 9.5410156 L 20.085938 9.5410156 C 19.765937 8.2010156 19.064375 7.1 17.984375 6.25 C 16.904375 5.4 15.684687 4.9707031 14.304688 4.9707031 z M 8.7578125 8.6523438 C 8.6279809 8.9665128 8.5239683 9.2955544 8.4453125 9.640625 C 7.3453125 9.900625 6.4348437 10.471094 5.7148438 11.371094 C 4.9948438 12.271094 4.6347656 13.289453 4.6347656 14.439453 C 4.6347656 15.769452 5.0758594 16.911094 6.0058594 17.871094 C 6.9358594 18.831094 8.0642969 19.340391 9.4042969 19.400391 C 9.5142969 19.400391 9.5742188 19.340469 9.5742188 19.230469 L 9.5742188 17.900391 C 9.5742188 17.780391 9.5142969 17.720703 9.4042969 17.720703 C 8.5542969 17.680703 7.8246094 17.341172 7.2246094 16.701172 C 6.6246094 16.061172 6.3242188 15.309452 6.3242188 14.439453 C 6.3242188 13.609453 6.6057812 12.89125 7.1757812 12.28125 C 7.7457813 11.67125 8.4453906 11.310937 9.2753906 11.210938 L 9.8046875 11.179688 C 9.9346875 11.179688 10.005859 11.110234 10.005859 10.990234 L 10.074219 10.460938 C 10.087664 10.315728 10.124267 10.181695 10.150391 10.042969 L 8.7578125 8.6523438 z "   class="windSkip" /><path   d="m 6.512695,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.568359,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.143554,5.9457545 A 0.84712499,0.84712499 0 0 0 6.512695,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'

windSkip = '<g transform="translate(0,0)"><path   id="path2"   d="M 18.689453 8.625 C 17.949453 8.625 17.290469 8.9050781 16.730469 9.4550781 C 16.540469 9.6250781 16.449219 9.8359379 16.449219 10.085938 C 16.449219 10.315934 16.540703 10.525315 16.720703 10.695312 C 16.900703 10.865311 17.109375 10.955078 17.359375 10.955078 C 17.599375 10.955078 17.800937 10.875312 17.960938 10.695312 C 18.150938 10.505316 18.399453 10.404297 18.689453 10.404297 C 18.989453 10.404297 19.229688 10.505314 19.429688 10.695312 C 19.629687 10.885311 19.730469 11.124063 19.730469 11.414062 C 19.730469 11.704063 19.629687 11.954297 19.429688 12.154297 C 19.229688 12.354297 18.989219 12.455078 18.699219 12.455078 L 14.957031 12.455078 L 16.746094 14.244141 L 18.689453 14.244141 C 19.459453 14.244141 20.129453 13.964297 20.689453 13.404297 C 21.249453 12.844297 21.529297 12.184297 21.529297 11.404297 C 21.529297 10.624299 21.259219 9.9755469 20.699219 9.4355469 C 20.139219 8.8955469 19.469453 8.625 18.689453 8.625 z M 4.0097656 12.455078 C 3.7497656 12.455078 3.5408594 12.544375 3.3808594 12.734375 C 3.1908594 12.904375 3.0996094 13.115469 3.0996094 13.355469 C 3.0996094 13.605469 3.1891406 13.814375 3.3691406 13.984375 C 3.5491406 14.154375 3.7597656 14.244141 4.0097656 14.244141 L 14.349609 14.244141 L 12.560547 12.455078 L 4.0097656 12.455078 z M 4.0097656 15.765625 C 3.7597656 15.765625 3.5508594 15.845391 3.3808594 16.025391 C 3.1908594 16.205391 3.0996094 16.404766 3.0996094 16.634766 C 3.0996094 16.884766 3.1891406 17.095156 3.3691406 17.285156 C 3.5491406 17.455156 3.7597656 17.544922 4.0097656 17.544922 L 17.652344 17.544922 L 15.873047 15.765625 L 4.0097656 15.765625 z M 18.267578 15.765625 L 20.046875 17.544922 L 24.050781 17.544922 C 24.340781 17.544922 24.579297 17.645937 24.779297 17.835938 C 24.979297 18.025937 25.080078 18.264688 25.080078 18.554688 C 25.080078 18.844687 24.979297 19.085156 24.779297 19.285156 C 24.579297 19.485156 24.340781 19.585938 24.050781 19.585938 C 23.770781 19.585937 23.539609 19.485391 23.349609 19.275391 C 23.169609 19.115391 22.960703 19.035156 22.720703 19.035156 C 22.470703 19.035156 22.259844 19.115391 22.089844 19.275391 C 22.033446 19.328471 21.999361 19.394898 21.960938 19.458984 L 23.859375 21.357422 C 23.923798 21.361407 23.984585 21.375 24.050781 21.375 C 24.830781 21.375 25.500547 21.094922 26.060547 20.544922 C 26.620547 19.994922 26.900391 19.324687 26.900391 18.554688 C 26.900391 17.784688 26.620547 17.125937 26.060547 16.585938 C 25.500547 16.035938 24.830781 15.765625 24.050781 15.765625 L 18.267578 15.765625 z "   class="windSkip" /><path   d="m 6.5126951,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457545 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'

freezeSkip = '<g transform="translate(0,0)"><path  id="path2"   d="M 15.019531 5.5859375 C 14.76998 5.5859375 14.569217 5.6737289 14.394531 5.8359375 C 14.219842 5.9981461 14.132812 6.2101915 14.132812 6.4472656 C 14.132812 6.6718621 14.219844 6.8709945 14.394531 7.0332031 C 14.569217 7.1954116 14.782457 7.2832031 15.019531 7.2832031 C 15.256606 7.2832031 15.45498 7.1954117 15.617188 7.0332031 C 15.7794 6.8709945 15.867188 6.6718621 15.867188 6.4472656 C 15.867188 6.2101915 15.779397 5.9981461 15.617188 5.8359375 C 15.45498 5.6737288 15.256606 5.5859375 15.019531 5.5859375 z M 15.042969 8.03125 C 14.793417 8.03125 14.594609 8.1182826 14.419922 8.2929688 C 14.245233 8.467655 14.158203 8.6808947 14.158203 8.9179688 L 14.158203 11.65625 L 18.34375 15.841797 L 21.144531 15.841797 C 21.369128 15.841797 21.570214 15.754006 21.732422 15.591797 C 21.894634 15.429589 21.980469 15.230456 21.980469 15.005859 C 21.980469 14.756308 21.894632 14.557498 21.732422 14.382812 C 21.570214 14.208122 21.369128 14.121094 21.144531 14.121094 L 17.115234 14.121094 L 19.958984 11.275391 C 20.108711 11.12566 20.183594 10.926527 20.183594 10.689453 C 20.183594 10.452379 20.108715 10.252811 19.958984 10.078125 C 19.784298 9.9034388 19.572252 9.8164062 19.347656 9.8164062 C 19.123059 9.8164062 18.924686 9.9034392 18.75 10.078125 L 15.892578 12.947266 L 15.892578 8.9179688 C 15.892578 8.6684171 15.804786 8.467655 15.642578 8.2929688 C 15.480369 8.1182825 15.280042 8.03125 15.042969 8.03125 z M 21.058594 8.0820312 C 20.821521 8.0820313 20.620434 8.1690637 20.470703 8.34375 C 20.296014 8.5059586 20.208984 8.7168097 20.208984 8.9414062 C 20.208984 9.1660028 20.296017 9.378048 20.470703 9.5527344 C 20.620434 9.7274197 20.821521 9.8164062 21.058594 9.8164062 C 21.295669 9.8164062 21.495236 9.7274206 21.669922 9.5527344 C 21.844611 9.3780481 21.931641 9.1660028 21.931641 8.9414062 C 21.931641 8.7168097 21.844607 8.5184362 21.669922 8.34375 C 21.495236 8.1690637 21.295669 8.0820312 21.058594 8.0820312 z M 8.4042969 8.2988281 C 8.38568 8.3166822 8.3610531 8.3235631 8.34375 8.34375 C 8.1690637 8.5059586 8.0820312 8.7168097 8.0820312 8.9414062 C 8.0820309 9.1660028 8.1690637 9.378048 8.34375 9.5527344 C 8.4934808 9.7274197 8.6926135 9.8164062 8.9296875 9.8164062 C 9.1667617 9.8164063 9.3663288 9.7274207 9.5410156 9.5527344 C 9.562202 9.531548 9.5692738 9.504665 9.5878906 9.4824219 L 8.4042969 8.2988281 z M 10.158203 10.052734 C 10.140929 10.06792 10.120317 10.073043 10.103516 10.089844 C 9.928825 10.26453 9.8398438 10.464097 9.8398438 10.701172 C 9.8398438 10.938246 9.9288285 11.137377 10.103516 11.287109 L 12.947266 14.132812 L 8.9179688 14.132812 C 8.6808946 14.132813 8.480568 14.219844 8.3183594 14.394531 C 8.1561517 14.569217 8.0683594 14.782457 8.0683594 15.019531 C 8.0683594 15.244128 8.1441085 15.442825 8.34375 15.580078 C 8.5059585 15.74229 8.7043323 15.830078 8.9414062 15.830078 L 12.984375 15.830078 L 10.115234 18.6875 C 9.9405437 18.849708 9.8535156 19.036362 9.8535156 19.273438 C 9.8535156 19.510511 9.9405471 19.71008 10.115234 19.884766 C 10.28992 20.059456 10.489489 20.146484 10.726562 20.146484 C 10.963637 20.146484 11.163204 20.059453 11.337891 19.884766 L 14.169922 17.052734 L 14.169922 21.070312 C 14.169922 21.307387 14.256955 21.519432 14.431641 21.681641 C 14.606328 21.843853 14.819566 21.931641 15.056641 21.931641 C 15.293714 21.931641 15.492089 21.843849 15.654297 21.681641 C 15.816509 21.519432 15.904297 21.307388 15.904297 21.070312 L 15.904297 17.027344 L 18.761719 19.896484 C 18.923928 20.071173 19.136731 20.160156 19.361328 20.160156 C 19.585924 20.160156 19.79797 20.071171 19.972656 19.896484 C 19.977861 19.890411 19.979351 19.883087 19.984375 19.876953 L 10.158203 10.052734 z M 6.4472656 14.132812 C 6.2101915 14.132813 6.0098648 14.219844 5.8476562 14.394531 C 5.6854476 14.569217 5.5976562 14.782457 5.5976562 15.019531 C 5.5976562 15.244128 5.6722112 15.442502 5.859375 15.617188 C 6.0215836 15.779399 6.2343878 15.867188 6.4589844 15.867188 C 6.6835809 15.867187 6.8963852 15.779397 7.0585938 15.617188 C 7.2208016 15.45498 7.3066406 15.256606 7.3066406 15.019531 C 7.3066406 14.76998 7.2208023 14.569217 7.0585938 14.394531 C 6.8963852 14.219842 6.6843397 14.132812 6.4472656 14.132812 z M 23.566406 14.132812 C 23.329332 14.132812 23.117287 14.219844 22.955078 14.394531 C 22.792866 14.569217 22.705078 14.782457 22.705078 15.019531 C 22.705078 15.244128 22.79287 15.443261 22.955078 15.605469 C 23.117287 15.76768 23.329332 15.855469 23.566406 15.855469 C 23.791002 15.855469 23.990135 15.767678 24.152344 15.605469 C 24.314556 15.443261 24.402344 15.244128 24.402344 15.019531 C 24.402344 14.76998 24.314552 14.569217 24.152344 14.394531 C 23.990135 14.219842 23.791002 14.132812 23.566406 14.132812 z M 8.9296875 20.197266 C 8.6926134 20.197266 8.4934811 20.284297 8.34375 20.458984 C 8.1690637 20.621192 8.0820312 20.833998 8.0820312 21.058594 C 8.0820309 21.295669 8.1690635 21.494042 8.34375 21.65625 C 8.4934811 21.830939 8.6926134 21.917969 8.9296875 21.917969 C 9.1667616 21.917969 9.3663293 21.830937 9.5410156 21.65625 C 9.7157018 21.494042 9.8027344 21.283191 9.8027344 21.058594 C 9.8027344 20.833998 9.7157018 20.63367 9.5410156 20.458984 C 9.3663293 20.284295 9.1667616 20.197266 8.9296875 20.197266 z M 20.525391 20.417969 C 20.508704 20.434287 20.486319 20.440766 20.470703 20.458984 C 20.296014 20.621192 20.208984 20.833998 20.208984 21.058594 C 20.208984 21.295669 20.296017 21.494042 20.470703 21.65625 C 20.620434 21.830939 20.821521 21.917969 21.058594 21.917969 C 21.295669 21.917969 21.495236 21.830937 21.669922 21.65625 C 21.687308 21.640106 21.693328 21.618659 21.708984 21.601562 L 20.525391 20.417969 z M 15.019531 22.716797 C 14.76998 22.716797 14.569217 22.804589 14.394531 22.966797 C 14.219842 23.129007 14.132812 23.328138 14.132812 23.552734 C 14.132812 23.802286 14.219844 24.001853 14.394531 24.164062 C 14.569217 24.326274 14.782457 24.414062 15.019531 24.414062 C 15.256606 24.414063 15.45498 24.32627 15.617188 24.164062 C 15.7794 24.001854 15.867188 23.789808 15.867188 23.552734 C 15.867188 23.328138 15.779397 23.129007 15.617188 22.966797 C 15.45498 22.804586 15.256606 22.716797 15.019531 22.716797 z "   class="freezeSkip0" /><path   d="m 6.5126951,5.6977075 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457544 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977075 Z"   id="path869"   class="skipStrikethrough" /></g>'

rainSensorSkip = '<g transform="translate(0,0)"><path   id="path2"   d="M 15 5.8496094 C 14.104678 5.8496094 13.912952 5.8611994 13.214844 5.9609375 C 11.946516 6.1421453 10.725634 6.5243764 9.5820312 7.0800781 L 11.283203 8.78125 C 12.062918 8.4811261 12.869781 8.2735315 13.703125 8.1699219 C 14.323876 8.0927729 15.290006 8.0694714 15.828125 8.1191406 C 17.269474 8.2522593 18.474363 8.5924445 19.691406 9.2089844 C 20.67514 9.7073399 21.471361 10.280372 22.279297 11.070312 C 22.469315 11.256108 22.60516 11.373334 22.65625 11.396484 C 22.761803 11.444474 22.936155 11.445087 23.042969 11.398438 C 23.154446 11.349697 24.055608 10.441836 24.085938 10.347656 C 24.098157 10.308406 24.105063 10.194361 24.101562 10.0625 C 24.096662 9.8836218 24.087821 9.8274816 24.056641 9.7675781 C 24.000024 9.6587637 23.418072 9.099267 22.984375 8.7363281 C 21.200546 7.2435141 19.064479 6.2865884 16.785156 5.9609375 C 16.087048 5.8612306 15.895328 5.8496094 15 5.8496094 z M 8.0625 7.9570312 C 7.7032104 8.1993889 7.351355 8.4553703 7.015625 8.7363281 C 6.5819283 9.099267 5.9999694 9.6587639 5.9433594 9.7675781 C 5.9121824 9.8274801 5.9029875 9.8836216 5.8984375 10.0625 C 5.8947975 10.194361 5.9014275 10.308406 5.9140625 10.347656 C 5.9425035 10.435976 6.8443948 11.34985 6.9511719 11.398438 C 7.0534716 11.444748 7.2400401 11.443584 7.34375 11.396484 C 7.394783 11.373324 7.5306853 11.256104 7.7207031 11.070312 C 8.3457208 10.459194 8.9666967 9.9798152 9.6699219 9.5625 L 8.0625 7.9570312 z M 15.279297 9.6191406 C 14.34242 9.5894845 13.400447 9.7173385 12.492188 9.9902344 L 14.431641 11.929688 C 14.619319 11.915045 14.79634 11.886719 15 11.886719 C 15.779637 11.886719 16.411825 11.988891 17.128906 12.232422 C 18.114934 12.56729 19.071509 13.173523 19.730469 13.880859 C 19.855737 14.015324 19.939921 14.090035 19.988281 14.109375 C 20.078431 14.145475 20.256194 14.146208 20.339844 14.111328 C 20.429624 14.073808 21.394032 13.105894 21.419922 13.027344 C 21.430722 12.993784 21.437094 12.872068 21.433594 12.748047 C 21.428694 12.569016 21.419902 12.515248 21.388672 12.455078 C 21.314452 12.312306 20.637725 11.684105 20.195312 11.347656 C 19.635649 10.922032 18.880399 10.497598 18.191406 10.222656 C 17.263131 9.8522298 16.2755 9.6506744 15.279297 9.6191406 z M 10.810547 10.705078 C 10.449852 10.904217 10.10299 11.120798 9.8046875 11.347656 C 9.3622803 11.684105 8.6855451 12.312305 8.6113281 12.455078 C 8.5800941 12.515248 8.5709462 12.569016 8.5664062 12.748047 C 8.5629962 12.871773 8.5690461 12.993944 8.5800781 13.027344 C 8.6040591 13.100014 9.5501104 14.054646 9.6464844 14.103516 C 9.7282854 14.144736 9.9145656 14.148195 10.011719 14.109375 C 10.060079 14.090035 10.144263 14.015324 10.269531 13.880859 C 10.843093 13.26519 11.644505 12.736921 12.492188 12.386719 L 10.810547 10.705078 z M 16.015625 13.513672 L 18.480469 15.978516 C 18.573889 15.876594 18.725061 15.724027 18.732422 15.701172 C 18.762692 15.607272 18.746061 15.232316 18.707031 15.134766 C 18.671911 15.046986 18.337212 14.715002 18.052734 14.484375 C 17.498253 14.03485 16.771247 13.68123 16.076172 13.523438 C 16.053349 13.518256 16.037427 13.518404 16.015625 13.513672 z M 13.697266 13.589844 C 13.073211 13.767358 12.441215 14.083704 11.947266 14.484375 C 11.695388 14.688695 11.341935 15.034404 11.296875 15.121094 C 11.264855 15.182724 11.257053 15.235707 11.251953 15.423828 C 11.246653 15.622167 11.251233 15.662726 11.283203 15.728516 C 11.331483 15.827786 12.221089 16.717349 12.322266 16.767578 C 12.419756 16.816138 12.608213 16.818144 12.710938 16.771484 C 12.754917 16.751504 12.834297 16.682415 12.904297 16.603516 C 12.969547 16.529956 13.097083 16.407168 13.189453 16.330078 C 13.971104 15.677754 15.021866 15.508337 15.949219 15.841797 L 13.697266 13.589844 z M 14.992188 17.664062 L 14.376953 18.285156 C 14.078378 18.574101 13.788169 18.906666 13.513672 19.287109 C 13.239176 19.667552 12.999136 20.077392 12.796875 20.515625 C 12.584983 20.953856 12.488281 21.333596 12.488281 21.65625 C 12.488281 22.099298 12.599833 22.514088 12.826172 22.894531 C 13.052512 23.274974 13.354976 23.582254 13.740234 23.808594 C 14.125494 24.034933 14.540419 24.150391 14.988281 24.150391 C 15.436145 24.150391 15.854067 24.034933 16.244141 23.808594 C 16.634215 23.582254 16.943584 23.274974 17.169922 22.894531 C 17.396263 22.509271 17.511719 22.099298 17.511719 21.65625 C 17.511719 21.367306 17.430269 21.024706 17.261719 20.625 C 17.093169 20.225295 16.890268 19.854679 16.654297 19.517578 C 16.442405 19.243081 16.191288 18.94075 15.902344 18.613281 C 15.6134 18.28581 15.107765 17.779641 14.992188 17.664062 z "   class="rainSensorSkip" /><path   d="m 6.5126951,5.6977078 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457547 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977078 Z"   id="path869" /></g>'
    
genericSkip = '<g transform="translate(0,0)"><path   id="path2"   d="M 14.984375 8.265625 L 13.705078 9.5546875 C 13.433672 9.8173385 13.167199 10.104361 12.904297 10.402344 L 20.095703 17.59375 C 20.167572 17.25627 20.214844 16.912128 20.214844 16.554688 C 20.214844 15.954688 20.045312 15.244063 19.695312 14.414062 C 19.345312 13.584062 18.925547 12.815234 18.435547 12.115234 C 17.995547 11.545234 17.475 10.914375 16.875 10.234375 C 16.275 9.554375 15.224375 8.505625 14.984375 8.265625 z M 11.845703 11.740234 C 11.305856 12.501335 10.827803 13.3145 10.425781 14.185547 C 9.9857813 15.095547 9.7851563 15.884687 9.7851562 16.554688 C 9.7851562 17.474688 10.014375 18.335 10.484375 19.125 C 10.954375 19.915 11.584766 20.555391 12.384766 21.025391 C 13.184766 21.495391 14.044609 21.734375 14.974609 21.734375 C 15.904609 21.734375 16.775937 21.495391 17.585938 21.025391 C 18.337642 20.589216 18.935648 20.000121 19.394531 19.287109 L 11.845703 11.740234 z "   class="rainDropSkip" /><path   d="m 6.5126951,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457545 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'
    

// Outline icons
chanceflurries2 = '<g transform="scale(2) translate(0,0)" id="chanceflurries"><path    id="path893"    d="m 11.919922,19.021485 c -0.23,0 -0.420078,0.07828 -0.580078,0.238281 -0.16,0.16 -0.240235,0.371562 -0.240235,0.601562 0,0.23 0.08024,0.420078 0.240235,0.580078 0.16,0.16 0.360078,0.238282 0.580078,0.238282 0.24,0 0.439609,-0.07828 0.599609,-0.238282 0.17,-0.16 0.25,-0.351796 0.25,-0.591797 0,-0.23 -0.08,-0.429843 -0.25,-0.589843 -0.17,-0.16 -0.369609,-0.238282 -0.599609,-0.238281 z M 8.75,20.720703 c -0.2300001,0 -0.4298436,0.08023 -0.5898439,0.240235 -0.16,0.16 -0.2402343,0.360078 -0.2402343,0.580078 0,0.24 0.080234,0.439375 0.2402343,0.609375 0.1600003,0.17 0.3498438,0.25 0.5898439,0.25 0.23,0 0.4298435,-0.08 0.5898438,-0.25 0.16,-0.17 0.2402342,-0.369375 0.2402342,-0.609375 0,-0.23 -0.080234,-0.420078 -0.2402342,-0.580078 C 9.1798435,20.800938 8.99,20.720703 8.75,20.720703 Z m 6.400391,0 c -0.24,0 -0.429844,0.08023 -0.589844,0.240235 -0.16,0.16 -0.240234,0.360078 -0.240235,0.580078 0,0.24 0.08024,0.439375 0.240235,0.609375 0.16,0.17 0.359844,0.25 0.589844,0.25 0.23,0 0.429843,-0.08 0.589843,-0.25 0.16,-0.17 0.240235,-0.369375 0.240235,-0.609375 0,-0.23 -0.08024,-0.420078 -0.240235,-0.580078 -0.16,-0.16 -0.349843,-0.240235 -0.589843,-0.240235 z m -3.230469,1.890625 c -0.23,0 -0.420078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.36961 -0.240235,0.59961 0,0.22 0.08024,0.419609 0.240235,0.599609 0.16,0.16 0.360078,0.240234 0.580078,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.16 0.25,-0.359609 0.25,-0.599609 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.369609,-0.25 -0.599609,-0.25 z m -3.1894532,1.738281 c -0.2300001,0 -0.4298438,0.08047 -0.5898438,0.230469 -0.1400001,0.15 -0.2207032,0.349844 -0.2207032,0.589844 0,0.21 0.080234,0.400313 0.2402343,0.570313 0.18,0.16 0.3700782,0.240234 0.5800783,0.240234 0.24,0 0.4298436,-0.08047 0.5898436,-0.230469 0.16,-0.16 0.2304689,-0.350078 0.2304689,-0.580078 0,-0.24 -0.080234,-0.429844 -0.2402344,-0.589844 -0.1600001,-0.16 -0.349844,-0.230469 -0.5898437,-0.230469 z m 6.4101562,0 c -0.24,0 -0.441561,0.08023 -0.601563,0.240235 -0.139998,0.15 -0.218747,0.350078 -0.21875,0.580078 0,0.21 0.08047,0.400313 0.230469,0.570313 0.18,0.16 0.37961,0.240234 0.59961,0.240234 0.24,0 0.429843,-0.08047 0.589843,-0.230469 0.16,-0.16 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.08023,-0.429844 -0.240234,-0.589844 -0.16,-0.16 -0.349844,-0.230469 -0.589844,-0.230469 z m -3.220703,1.921876 c -0.22,0 -0.410078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.369609 -0.240235,0.599609 0,0.22 0.08024,0.410312 0.240235,0.570312 0.17,0.17 0.360078,0.25 0.580078,0.25 0.24,0 0.439609,-0.08047 0.599609,-0.230468 0.17,-0.16 0.25,-0.349844 0.25,-0.589844 0,-0.24 -0.08,-0.439611 -0.25,-0.599609 -0.17,-0.170001 -0.369609,-0.25 -0.599609,-0.25 z"    class="frozenPrecip" /><path    id="path879"    d="m 17.769531,1.5 c -0.23,0 -0.429609,0.089766 -0.599609,0.2597656 -0.17,0.1699999 -0.259766,0.3715626 -0.259766,0.6015624 v 2.0390626 h -0.0098 c 0,0.23 0.08,0.4300781 0.25,0.5800781 0.17,0.15 0.369375,0.2304687 0.609375,0.2304687 0.24,0 0.429843,-0.080469 0.589843,-0.2304687 0.16,-0.16 0.230469,-0.3500781 0.230469,-0.5800781 V 2.361328 c 0,-0.2399998 -0.08023,-0.4413281 -0.240234,-0.6113281 C 18.179809,1.5799999 17.999496,1.5 17.769496,1.5 Z m 6.910157,2.861328 c -0.22,0 -0.410079,0.08 -0.580079,0.25 l -1.429687,1.4589844 c -0.17,0.16 -0.25,0.3596094 -0.25,0.5996094 0,0.23 0.08,0.4298437 0.25,0.5898438 0.15,0.16 0.340547,0.2417187 0.560547,0.2617187 0.22,0.02 0.42914,-0.071719 0.61914,-0.2617187 L 25.279297,5.830078 c 0.18,-0.1799999 0.259766,-0.3793749 0.259765,-0.609375 0,-0.24 -0.08976,-0.4393748 -0.259765,-0.609375 -0.17,-0.1699999 -0.36961,-0.2499999 -0.599609,-0.25 z M 10.849609,4.390625 c -0.25,0 -0.458906,0.08 -0.628906,0.25 -0.17,0.16 -0.25,0.3596094 -0.25,0.5996094 0,0.24 0.080234,0.4398438 0.240235,0.5898437 l 0.658203,0.6601563 c 0.16,0.16 0.34125,0.25 0.53125,0.25 0.21,0.03 0.409375,-0.03875 0.609375,-0.21875 0.2,-0.18 0.300781,-0.3908594 0.300781,-0.6308594 0,-0.24 -0.08023,-0.460625 -0.240235,-0.640625 L 11.429688,4.640625 c -0.150003,-0.17 -0.340079,-0.25 -0.580079,-0.25 z m 6.919922,2.5507813 c -1.181227,0 -2.214739,0.3419811 -3.101562,1.0195312 0.541589,0.3102246 1.019623,0.6580132 1.457031,1.078125 0.495944,-0.2622152 1.039509,-0.4082031 1.644531,-0.4082031 0.97,0 1.800469,0.3490625 2.480469,1.0390625 0.69,0.6900001 1.029297,1.5302341 1.029297,2.4902341 0,0.283118 -0.03848,0.566443 -0.109375,0.847657 0.517454,0.486729 0.925369,0.972629 1.267578,1.501953 C 22.798278,13.799552 23,13.018195 23,12.160156 c 0,-0.94 -0.229219,-1.809375 -0.699219,-2.6093748 -0.47,-0.8 -1.110156,-1.4401563 -1.910156,-1.9101563 -0.8,-0.47 -1.681094,-0.6992187 -2.621094,-0.6992186 z m 7.78125,4.3691407 c -0.24,0 -0.441095,0.08 -0.621093,0.25 -0.18,0.17 -0.259766,0.369609 -0.259766,0.599609 0,0.24 0.08977,0.429844 0.259766,0.589844 0.17,0.18 0.381093,0.271484 0.621093,0.271485 h 2.019531 c 0.230002,0 0.42961,-0.08 0.59961,-0.25 0.17,-0.17 0.25,-0.371329 0.25,-0.611329 0,-0.24 -0.08,-0.439609 -0.25,-0.599609 -0.17,-0.16 -0.369608,-0.25 -0.59961,-0.25 z m -1.490234,6.310547 c -0.23,0 -0.429844,0.08 -0.589844,0.25 -0.17,0.16 -0.25,0.359609 -0.25,0.599609 0,0.25 0.08023,0.459141 0.240235,0.619141 l 0.638671,0.630859 c 0.24,0.16 0.460625,0.240235 0.640625,0.240235 0.21,0 0.390547,-0.08977 0.560547,-0.259766 0.17,-0.17 0.25,-0.381328 0.25,-0.611328 0,-0.23 -0.09172,-0.420078 -0.261719,-0.580078 l -0.61914,-0.648438 c -0.18,-0.16 -0.379375,-0.240234 -0.609375,-0.240234 z"    class="light" /><path    d="m 11.210938,8.0097656 c -1.410001,0 -2.6502349,0.4405468 -3.740235,1.3105468 -1.09,0.8700006 -1.7798437,1.9898436 -2.0898437,3.3398436 -1.12,0.28 -2.0302344,0.86 -2.7402343,1.75 -0.7100001,0.9 -1.060547,1.920078 -1.060547,3.080079 0,0.859999 0.210625,1.670156 0.6406251,2.410156 0.42,0.74 1.0002344,1.341015 1.7402344,1.791015 0.7299999,0.45 1.5384374,0.688985 2.3984375,0.708985 0.11,0 0.1699219,-0.05992 0.1699219,-0.169922 v -1.330078 c 0,-0.12 -0.059922,-0.189453 -0.1699219,-0.189453 -0.85,-0.04 -1.5796875,-0.379532 -2.1796875,-1.019532 -0.6,-0.64 -0.9003906,-1.370937 -0.9003906,-2.210937 0,-0.82 0.2815625,-1.540156 0.8515624,-2.160156 0.57,-0.61 1.2596092,-0.970313 2.0996094,-1.070313 l 0.5292968,-0.05859 c 0.12,0 0.1796875,-0.06141 0.1796875,-0.191406 l 0.080078,-0.509765 c 0.11,-1.09 0.5613282,-2.000469 1.3613282,-2.730469 0.8,-0.730001 1.7496098,-1.0898442 2.8496098,-1.0898442 1.09,0 2.039609,0.3598442 2.849609,1.0898442 0.82,0.73 1.280859,1.631172 1.38086,2.701172 l 0.06836,0.580078 c 0,0.11 0.05992,0.169922 0.169922,0.169922 h 1.611328 c 0.9,0 1.668594,0.318984 2.308594,0.958984 0.64,0.64 0.960937,1.401016 0.960937,2.291016 0,0.84 -0.300391,1.568984 -0.90039,2.208984 -0.600001,0.63 -1.329922,0.971484 -2.169922,1.021484 -0.12,0 -0.189453,0.05945 -0.189454,0.189453 v 1.330079 c 0,0.11 0.05945,0.169921 0.189454,0.169921 1.33,-0.04 2.450859,-0.539999 3.380859,-1.5 0.93,-0.96 1.388672,-2.090156 1.388672,-3.410156 0,-0.711087 -0.12755,-1.340263 -0.380859,-1.910156 -0.313906,-0.612656 -0.696764,-1.119813 -1.242189,-1.656254 -0.929341,-0.88876 -2.046903,-1.34375 -3.355469,-1.34375 h -0.320312 c -0.29645,-1.156153 -0.848138,-2.125075 -1.652344,-2.9101564 -10e-4,-9.586e-4 -0.0029,-9.956e-4 -0.0039,-0.00195 C 14.861063,9.2255534 14.331722,8.8958443 13.666016,8.5605468 12.916923,8.1992742 12.098916,8.0097655 11.210938,8.0097656 Z" id="path875" class="cloud" /> </g>'

chancerain2 = '<g transform="scale(2) translate(0,0)"> <path    id="path879"    d="m 17.769804,1.5 c -0.23,0 -0.429609,0.08977 -0.599609,0.2597656 -0.17,0.1699999 -0.259766,0.3715624 -0.259766,0.6015624 v 2.0390626 h -0.0098 c 0,0.23 0.08,0.4300781 0.25,0.5800781 0.17,0.15 0.369375,0.2304687 0.609375,0.2304687 0.24,0 0.429844,-0.08047 0.589844,-0.2304687 0.16,-0.16 0.230469,-0.3500781 0.230469,-0.5800781 V 2.361328 c 0,-0.2399999 -0.08023,-0.4413281 -0.240235,-0.6113281 C 18.180082,1.5799999 17.99977,1.5 17.76977,1.5 Z m 6.910156,2.861328 c -0.22,0 -0.410078,0.08 -0.580078,0.25 l -1.429687,1.4589844 c -0.17,0.16 -0.25,0.3596094 -0.25,0.5996094 0,0.23 0.08,0.4298437 0.25,0.5898438 0.15,0.16 0.340547,0.2417187 0.560547,0.2617187 0.219999,0.02 0.42914,-0.071721 0.61914,-0.2617187 L 25.27957,5.830078 c 0.18,-0.1799999 0.259766,-0.3793749 0.259765,-0.609375 0,-0.24 -0.08976,-0.439375 -0.259765,-0.609375 -0.17,-0.1699999 -0.36961,-0.25 -0.59961,-0.25 z M 10.849883,4.390625 c -0.25,0 -0.458907,0.08 -0.628907,0.25 -0.17,0.16 -0.2499996,0.3596094 -0.2499996,0.5996094 0,0.24 0.08023,0.4398438 0.2402346,0.5898437 l 0.658202,0.6601563 c 0.16,0.16 0.34125,0.25 0.53125,0.25 0.21,0.03 0.409375,-0.03875 0.609375,-0.21875 0.200001,-0.18 0.300783,-0.3908594 0.300783,-0.6308594 0,-0.24 -0.08023,-0.460625 -0.240235,-0.640625 L 11.429961,4.640625 c -0.150003,-0.17 -0.340078,-0.25 -0.580078,-0.25 z m 6.919921,2.5507813 c -1.181227,0 -2.21474,0.3419799 -3.101561,1.0195312 0.541589,0.310224 1.019622,0.658013 1.45703,1.078125 0.495944,-0.262216 1.039509,-0.4082031 1.644531,-0.4082031 0.97,0 1.800469,0.3490625 2.480469,1.0390625 0.69,0.6900001 1.029297,1.5302341 1.029297,2.4902341 0,0.283118 -0.03848,0.566443 -0.109375,0.847657 0.517454,0.486729 0.925369,0.972629 1.267578,1.501953 0.360778,-0.710214 0.5625,-1.491571 0.5625,-2.34961 0,-0.94 -0.229219,-1.809375 -0.699219,-2.6093747 -0.47,-0.8 -1.110156,-1.440156 -1.910156,-1.9101563 -0.8,-0.47 -1.681094,-0.6992187 -2.621094,-0.6992187 z m 7.78125,4.3691407 c -0.24,0 -0.441095,0.08 -0.621094,0.25 -0.18,0.17 -0.259765,0.369609 -0.259765,0.599609 0,0.24 0.08977,0.429844 0.259765,0.589844 0.17,0.18 0.381094,0.271484 0.621094,0.271485 h 2.019531 c 0.230001,0 0.42961,-0.08 0.59961,-0.25 0.17,-0.17 0.25,-0.371329 0.25,-0.611329 0,-0.24 -0.08,-0.439609 -0.25,-0.599609 -0.17,-0.16 -0.369608,-0.25 -0.59961,-0.25 z m -1.490234,6.310547 c -0.23,0 -0.429844,0.08 -0.589844,0.25 -0.17,0.16 -0.25,0.359609 -0.25,0.599609 0,0.25 0.08023,0.459141 0.240234,0.619141 l 0.638672,0.630859 c 0.24,0.16 0.460625,0.240235 0.640625,0.240235 0.21,0 0.390547,-0.08977 0.560547,-0.259766 0.17,-0.17 0.25,-0.381328 0.25,-0.611328 0,-0.23 -0.09172,-0.420078 -0.261719,-0.580078 l -0.61914,-0.648438 c -0.18,-0.16 -0.379375,-0.240234 -0.609375,-0.240234 z"     class="light" /><path    d="m 11.210665,8.0099218 c -1.4100015,0 -2.6502355,0.440547 -3.7402355,1.310547 -1.09,0.8700002 -1.779844,1.9898432 -2.089844,3.3398432 -1.12,0.28 -2.030234,0.86 -2.740234,1.75 -0.71,0.9 -1.060547,1.920078 -1.060547,3.080079 0,0.859999 0.210625,1.670156 0.640625,2.410156 0.42,0.74 1.000235,1.341015 1.740235,1.791015 0.73,0.45 1.538437,0.688985 2.398437,0.708985 0.11,0 0.169922,-0.05992 0.169922,-0.169922 v -1.330078 c 0,-0.12 -0.05992,-0.189453 -0.169922,-0.189453 -0.85,-0.04 -1.579687,-0.379532 -2.179687,-1.019532 -0.6,-0.64 -0.900391,-1.370937 -0.900391,-2.210937 0,-0.82 0.281562,-1.540156 0.851562,-2.160156 0.57,-0.61 1.25961,-0.970313 2.09961,-1.070313 l 0.529297,-0.05859 c 0.12,0 0.179687,-0.06141 0.179687,-0.191406 l 0.08008,-0.509765 c 0.11,-1.09 0.561328,-2.000469 1.361328,-2.730469 0.8,-0.730001 1.7496105,-1.0898442 2.8496105,-1.0898442 1.09,0 2.039609,0.3598442 2.849609,1.0898442 0.82,0.73 1.280859,1.631172 1.38086,2.701172 l 0.06836,0.580078 c 0,0.11 0.05992,0.169922 0.169922,0.169922 h 1.611328 c 0.9,0 1.668594,0.318984 2.308594,0.958984 0.64,0.64 0.960937,1.401016 0.960937,2.291016 0,0.84 -0.300391,1.568984 -0.90039,2.208984 -0.600001,0.63 -1.329922,0.971484 -2.169922,1.021484 -0.12,0 -0.189453,0.05945 -0.189454,0.189453 v 1.330079 c 0,0.11 0.05945,0.169921 0.189454,0.169921 1.33,-0.04 2.450859,-0.539999 3.380859,-1.5 0.93,-0.96 1.388672,-2.090156 1.388672,-3.410156 0,-0.711087 -0.12755,-1.340263 -0.380859,-1.910156 -0.313906,-0.612656 -0.696764,-1.119813 -1.242189,-1.656254 -0.929341,-0.88876 -2.046903,-1.34375 -3.355469,-1.34375 h -0.320313 c -0.29645,-1.156153 -0.848138,-2.125075 -1.652343,-2.9101562 -10e-4,-9.59e-4 -0.0029,-9.96e-4 -0.0039,-0.002 -0.463162,-0.422887 -0.992504,-0.752597 -1.65821,-1.087894 -0.749093,-0.361273 -1.5671,-0.550781 -2.455078,-0.550781 z"    id="path875"    class="cloud" /><path    id="path884"    d="m 9.2991014,17.533203 c -0.1125,0.0125 -0.2183594,0.04742 -0.3183594,0.107422 -0.2,0.12 -0.3210937,0.289531 -0.3710937,0.519531 L 8.308867,19.179688 c 0,0.08 -0.00977,0.160234 -0.00977,0.240234 0,0.38 0.210625,0.641016 0.640625,0.791016 0.22,0.08 0.430625,0.05922 0.640625,-0.05078 0.21,-0.11 0.3401562,-0.289296 0.4101562,-0.529297 l 0.2402358,-1.03125 c 0.07,-0.209999 0.04969,-0.40914 -0.07031,-0.61914 -0.109999,-0.210002 -0.2797651,-0.349924 -0.5097651,-0.419924 -0.12,-0.03 -0.2390625,-0.03984 -0.3515625,-0.02734 z m 6.7558586,0.06055 c -0.107499,0.01 -0.209687,0.04266 -0.304687,0.09766 -0.2,0.11 -0.330625,0.28 -0.390625,0.5 l -0.300782,1.058594 c 0,0.08 -0.0098,0.160469 -0.0098,0.230469 0,0.16 0.05039,0.320469 0.150392,0.480469 0.1,0.16 0.25117,0.270312 0.45117,0.320312 l 0.25,0.0293 c 0.19,0 0.369532,-0.05969 0.519532,-0.179688 0.15,-0.12 0.239297,-0.280703 0.279297,-0.470703 l 0.269531,-0.990234 c 0.07,-0.24 0.05164,-0.448438 -0.06836,-0.648437 -0.11,-0.2 -0.281718,-0.330626 -0.511718,-0.390626 -0.115,-0.035 -0.226485,-0.04711 -0.333985,-0.03711 z m -4.193359,3.076172 c -0.11375,0.01375 -0.222265,0.05133 -0.322265,0.111328 -0.200001,0.12 -0.329141,0.299297 -0.36914,0.529297 l -0.28125,1.029297 c -0.02,0.03 -0.01953,0.09164 -0.01953,0.181641 0,0.17 0.05016,0.339765 0.160158,0.509765 0.11,0.17 0.260703,0.27961 0.470702,0.349609 0.23,0.07 0.438672,0.04922 0.638673,-0.05078 0.19,-0.1 0.33039,-0.288594 0.40039,-0.558593 l 0.240235,-1.011719 c 0.07,-0.23 0.04945,-0.448438 -0.06055,-0.648438 -0.11,-0.2 -0.28,-0.340156 -0.5,-0.410156 -0.125,-0.035 -0.243672,-0.045 -0.357422,-0.03125 z m -3.896484,1.636719 c -0.11125,0.01375 -0.2144531,0.04852 -0.3144531,0.103515 -0.2,0.11 -0.3210938,0.30125 -0.3710938,0.53125 l -0.2792968,0.988282 c 0,0.05 -0.00977,0.120937 -0.00977,0.210937 0,0.18 0.050156,0.359297 0.1601563,0.529297 0.11,0.18 0.2592187,0.291328 0.4492187,0.361328 0.19,0.07 0.399375,0.04945 0.609375,-0.06055 0.22,-0.11 0.3614063,-0.290781 0.4414063,-0.550781 l 0.25,-1.048828 c 0.07,-0.21 0.049688,-0.411094 -0.070312,-0.621094 -0.12,-0.21 -0.2897657,-0.349922 -0.5097657,-0.419922 -0.125,-0.03 -0.2442187,-0.03719 -0.3554687,-0.02344 z m 6.714844,0.06836 c -0.102501,0.01125 -0.205548,0.04547 -0.310548,0.105469 -0.21,0.12 -0.340155,0.289766 -0.410155,0.509766 l -0.269532,1.019531 c -0.01,0.02 -0.0095,0.05008 -0.01953,0.08008 -0.01,0.03 -0.0095,0.06008 -0.01953,0.08008 -0.01,0.02 0,0.05031 0,0.07031 0.02,0.379999 0.228908,0.650078 0.628908,0.830078 l 0.25,0.04102 c 0.159999,0 0.320703,-0.05016 0.470702,-0.160156 0.15,-0.11 0.260312,-0.27 0.320313,-0.5 l 0.289062,-1.009766 c 0.06,-0.24 0.03016,-0.460156 -0.08984,-0.660156 -0.119999,-0.2 -0.299296,-0.331094 -0.529296,-0.371094 -0.105001,-0.035 -0.208048,-0.04641 -0.310547,-0.03516 z m -4.117188,3.089844 c -0.108749,0.01125 -0.212499,0.04547 -0.3125,0.105469 -0.2,0.12 -0.3403904,0.289765 -0.4003904,0.509765 l -0.2792969,1.019531 c -0.04,0.09 -0.050781,0.160938 -0.050781,0.210938 0,0.16 0.059922,0.33 0.1699219,0.5 0.11,0.17 0.2802343,0.289375 0.4902344,0.359375 0.01,0 0.03961,-2.34e-4 0.09961,0.0098 0.06,0.01 0.110389,0.01172 0.15039,0.01172 0.139999,0 0.259141,-0.02031 0.36914,-0.07031 0.19,-0.08 0.330157,-0.270078 0.410157,-0.580078 l 0.271485,-0.990235 c 0.07,-0.23 0.04969,-0.45039 -0.07031,-0.65039 -0.119999,-0.2 -0.289766,-0.340391 -0.509766,-0.400391 -0.114999,-0.035 -0.22914,-0.04641 -0.33789,-0.03516 z"    class="precip" /> </g>'

chancesleet2 = '<g transform="scale(2) translate(0,0)" id="chancesleet"> <path    id="path872"    d="m 17.759883,1.5 c -0.23,0 -0.42961,0.089766 -0.59961,0.2597656 -0.17,0.17 -0.25,0.3713282 -0.25,0.6113282 v 2.0488281 c 0,0.24 0.08,0.4413281 0.25,0.6113281 0.17,0.17 0.36961,0.2597656 0.59961,0.2597656 0.24,0 0.439609,-0.08 0.599609,-0.25 0.16,-0.17 0.240234,-0.3810937 0.240234,-0.6210937 V 2.3710938 c 0,-0.24 -0.08023,-0.4510938 -0.240234,-0.6210938 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m 6.980468,2.9101562 c -0.24,0 -0.430078,0.08 -0.580078,0.25 L 22.72082,6.1113281 c -0.15,0.16 -0.230469,0.3596094 -0.230469,0.5996094 0,0.25 0.07047,0.449375 0.230469,0.609375 0.14,0.16 0.318828,0.2397656 0.548828,0.2597656 0.23,0.01 0.44086,-0.069766 0.63086,-0.2597656 l 1.439453,-1.4589844 c 0.17,-0.16 0.259765,-0.3615625 0.259765,-0.6015625 0,-0.24 -0.07977,-0.4396093 -0.259765,-0.5996094 -0.16,-0.1699999 -0.35961,-0.25 -0.59961,-0.25 z m -13.960937,0.00977 c -0.25,0 -0.458906,0.080234 -0.628906,0.2402343 -0.1700004,0.16 -0.2500004,0.3596094 -0.2500004,0.5996094 0,0.23 0.09,0.4315625 0.2500004,0.6015625 l 0.65039,0.6601563 c 0.16,0.16 0.338828,0.2495312 0.548828,0.2695312 0.21,0.03 0.411329,-0.050469 0.611329,-0.2304687 0.199999,-0.18 0.298828,-0.400625 0.298828,-0.640625 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 L 11.380976,4.6601562 c -0.16,-0.16 -0.361562,-0.2402343 -0.601562,-0.2402343 z m 7.009765,2.5703125 c -1.181226,0 -2.214739,0.3419812 -3.101562,1.0195312 0.541589,0.310224 1.019623,0.658013 1.457031,1.078125 0.495944,-0.262215 1.039509,-0.4082031 1.644531,-0.4082031 0.97,0 1.800469,0.3490625 2.480469,1.0390625 0.69,0.6900007 1.029297,1.5302347 1.029297,2.4902347 0,0.283118 -0.03848,0.566443 -0.109375,0.847657 0.517454,0.486729 0.925369,0.972629 1.267578,1.501953 0.360778,-0.710214 0.5625,-1.491571 0.5625,-2.34961 0,-0.94 -0.229219,-1.809375 -0.699219,-2.6093753 -0.469999,-0.8 -1.110156,-1.4401563 -1.910156,-1.9101563 -0.8,-0.47 -1.681094,-0.6992187 -2.621094,-0.6992187 z m 7.800782,4.4199223 c -0.24,0 -0.439375,0.08024 -0.609375,0.240235 -0.17,0.16 -0.25,0.359609 -0.25,0.599608 0,0.240001 0.07977,0.439845 0.259765,0.589844 0.16,0.18 0.35961,0.271484 0.59961,0.271484 h 2.060547 c 0.24,0 0.439375,-0.08 0.609375,-0.25 0.17,-0.17 0.25,-0.371328 0.25,-0.611328 0,-0.24 -0.09,-0.439609 -0.25,-0.599609 -0.16,-0.16 -0.369375,-0.240235 -0.609375,-0.240235 z m -1.480469,6.349609 c -0.23,0 -0.429609,0.08 -0.599609,0.25 -0.17,0.17 -0.25,0.371328 -0.25,0.611328 0,0.23 0.09,0.429609 0.25,0.599609 l 0.65039,0.640625 c 0.18,0.16 0.379141,0.240235 0.619141,0.240235 l 0.02148,0.01953 c 0.22,0 0.399063,-0.08977 0.539063,-0.259766 0.17,-0.16 0.259765,-0.361562 0.259765,-0.601562 0,-0.23 -0.07977,-0.439375 -0.259765,-0.609375 L 24.72082,18.021483 c -0.18,-0.17 -0.381328,-0.261717 -0.611328,-0.261717 z"    class="light" /><path    id="path862"    d="m 8.5508982,20.970702 c -0.2399999,0 -0.4298437,0.07047 -0.5898437,0.230469 -0.15,0.16 -0.2304687,0.349845 -0.2304687,0.589844 -1e-7,0.22 0.08,0.410312 0.25,0.570312 0.15,0.160001 0.3403124,0.240235 0.5703124,0.240235 0.24,0 0.4398438,-0.07047 0.5898438,-0.230469 0.15,-0.16 0.2285156,-0.350078 0.2285156,-0.580078 0,-0.239999 -0.068516,-0.429844 -0.2285156,-0.589844 -0.16,-0.15 -0.3498437,-0.230469 -0.5898438,-0.230469 z m 6.5488278,0.0098 c -0.24,0 -0.429843,0.07047 -0.589843,0.230468 -0.15,0.160001 -0.230469,0.349844 -0.230469,0.589844 0,0.22 0.08023,0.410547 0.240234,0.560547 0.15,0.17 0.350078,0.25 0.580078,0.25 0.24,0 0.429844,-0.07047 0.589844,-0.230469 0.15,-0.15 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.07047,-0.429843 -0.230469,-0.589844 -0.16,-0.149999 -0.349844,-0.230468 -0.589844,-0.230468 z m -4.11914,3.080078 c -0.24,0 -0.429844,0.07047 -0.589844,0.230469 -0.15,0.15 -0.230469,0.350078 -0.230469,0.580078 0,0.22 0.08024,0.410312 0.240235,0.570312 0.17,0.17 0.360078,0.25 0.580078,0.25 0.24,0 0.429843,-0.07047 0.589843,-0.230469 0.150001,-0.159999 0.230469,-0.349843 0.230469,-0.589842 0,-0.230001 -0.07047,-0.420079 -0.230469,-0.580078 -0.16,-0.15 -0.349843,-0.230469 -0.589843,-0.23047 z"    class="frozenPrecip" /><path    id="path860"    d="m 11.765742,20.798827 c -0.10625,0.01375 -0.211406,0.05133 -0.316406,0.111328 -0.2,0.120001 -0.340156,0.30125 -0.410157,0.53125 l -0.228515,0.898438 c -0.02,0.08 -0.03125,0.171719 -0.03125,0.261719 -0.02,0.15 0.03039,0.298515 0.150391,0.478515 0.1,0.160001 0.251171,0.260781 0.451171,0.300781 0.23,0.06 0.448672,0.04945 0.638672,-0.06055 0.19,-0.11 0.330156,-0.300312 0.410157,-0.570313 l 0.259765,-0.898437 c 0.07,-0.22 0.04969,-0.421093 -0.07031,-0.621094 -0.12,-0.199998 -0.289297,-0.33039 -0.529297,-0.400391 -0.11,-0.035 -0.217969,-0.045 -0.324219,-0.03125 z m -3.9140625,2.455078 c -0.11375,0.0125 -0.2222656,0.04742 -0.3222656,0.107422 -0.21,0.120001 -0.3401563,0.289298 -0.4101563,0.529297 l -0.089844,0.589844 c 0,0.03 -0.00953,0.07109 -0.019531,0.121094 -0.01,0.06 -0.019531,0.09891 -0.019531,0.128906 0,0.17 0.050156,0.340234 0.1601562,0.490234 0.1,0.160001 0.2489844,0.270079 0.4589844,0.330078 0.02,0 0.060859,-2.34e-4 0.1308594,0.0098 0.07,0.01 0.1203906,0.0098 0.1503906,0.0098 0.41,-1e-6 0.6597656,-0.220157 0.7597656,-0.660157 l 0.1386719,-0.599609 c 0.06,-0.21 0.041641,-0.419141 -0.068359,-0.619141 -0.12,-0.21 -0.2797656,-0.340156 -0.5097656,-0.410156 -0.125,-0.03 -0.245625,-0.03984 -0.359375,-0.02734 z m 6.5292965,0.01953 c -0.11375,0.0125 -0.220312,0.04742 -0.320312,0.107422 -0.21,0.12 -0.340156,0.289297 -0.410156,0.529297 l -0.08984,0.589844 c 0,0.02 2.34e-4,0.05133 -0.0098,0.111328 -0.01,0.06 -0.01172,0.09891 -0.01172,0.128906 0,0.170001 0.05039,0.33 0.150391,0.5 0.1,0.16 0.251172,0.270079 0.451172,0.330079 0.02,0 0.05891,-2.34e-4 0.128906,0.0098 0.07,0.01 0.120391,0.0098 0.150391,0.0098 0.41,0 0.659766,-0.218438 0.759766,-0.648438 l 0.140624,-0.601562 c 0.07,-0.21 0.04969,-0.418906 -0.07031,-0.628907 -0.11,-0.199999 -0.279766,-0.340156 -0.509766,-0.410156 -0.125,-0.03 -0.245625,-0.03984 -0.359375,-0.02734 z m -4.115234,3.070313 c -0.105,0.01125 -0.211406,0.04742 -0.3164062,0.107422 -0.2,0.11 -0.3401563,0.279765 -0.4101563,0.509765 l -0.1289063,0.580079 c -0.03,0.120001 -0.041016,0.190469 -0.041016,0.230468 0,0.170001 0.050156,0.328283 0.1601563,0.488282 0.11,0.160001 0.2702344,0.270079 0.4902345,0.330078 0.11,0.03 0.190235,0.04102 0.240235,0.04102 0.43,0 0.700781,-0.199376 0.800781,-0.609375 l 0.128906,-0.591796 c 0.07,-0.25 0.03992,-0.479686 -0.08008,-0.679687 -0.12,-0.200001 -0.299297,-0.329141 -0.529297,-0.369141 -0.105,-0.035 -0.209453,-0.04836 -0.314453,-0.03711 z"    class="precip" /> <path    d="m 11.120977,8.16 c -1.4100014,0 -2.6502354,0.440547 -3.7402354,1.310547 -1.09,0.87 -1.779843,1.989844 -2.089843,3.339842 -1.12,0.28 -2.030235,0.86 -2.740235,1.75 -0.7099997,0.900001 -1.0605466,1.920078 -1.0605466,3.080079 0,0.859999 0.210625,1.670156 0.640625,2.410156 0.4199996,0.74 1.0002346,1.341015 1.7402346,1.791016 0.73,0.449999 1.538437,0.688984 2.398437,0.708984 0.11,0 0.169922,-0.05992 0.169922,-0.169921 v -1.330079 c 0,-0.12 -0.05992,-0.189453 -0.169922,-0.189453 -0.85,-0.04 -1.579687,-0.379532 -2.179687,-1.019532 -0.6,-0.64 -0.900391,-1.370937 -0.900391,-2.210937 0,-0.82 0.281563,-1.540156 0.851563,-2.160156 0.57,-0.61 1.259609,-0.970313 2.099609,-1.070313 l 0.529297,-0.05859 c 0.12,0 0.179687,-0.06141 0.179687,-0.191406 l 0.08008,-0.509765 c 0.110001,-1.09 0.561329,-2.000469 1.361329,-2.730469 0.8,-0.73 1.7496094,-1.089843 2.8496094,-1.089843 1.09,0 2.039609,0.359843 2.849609,1.089843 0.82,0.73 1.280859,1.631172 1.38086,2.701172 l 0.06836,0.580078 c 0,0.11 0.05992,0.169922 0.169922,0.169922 h 1.611328 c 0.9,0 1.668594,0.318984 2.308594,0.958984 0.64,0.64 0.960937,1.401016 0.960937,2.291016 0,0.84 -0.300391,1.568984 -0.90039,2.208984 -0.600001,0.63 -1.329922,0.971484 -2.169922,1.021484 -0.12,0 -0.189453,0.05945 -0.189454,0.189453 v 1.330079 c 0,0.11 0.05945,0.169921 0.189454,0.169921 1.33,-0.04 2.450859,-0.539999 3.380859,-1.5 0.93,-0.96 1.388672,-2.090156 1.388672,-3.410156 0,-0.711087 -0.12755,-1.340263 -0.380859,-1.910156 C 21.494574,15.098128 21.111716,14.590971 20.566291,14.05453 19.63695,13.16577 18.519388,12.71078 17.210822,12.71078 H 16.89051 c -0.29645,-1.156153 -0.848138,-2.125074 -1.652344,-2.910155 -10e-4,-9.59e-4 -0.0029,-9.96e-4 -0.0039,-0.0019 C 14.771104,9.375838 14.241763,9.046129 13.576057,8.710831 12.826964,8.349559 12.008957,8.16005 11.120979,8.16005 Z"    id="path875"    class="cloud" /> </g>'

chancesnow2 = '<g transform="scale(2) translate(0,0)" id="chancesnow"> <path    id="path893"    d="m 11.919922,19.021485 c -0.23,0 -0.420078,0.07828 -0.580078,0.238281 -0.16,0.16 -0.240235,0.371562 -0.240235,0.601562 0,0.23 0.08024,0.420078 0.240235,0.580078 0.16,0.16 0.360078,0.238282 0.580078,0.238282 0.24,0 0.439609,-0.07828 0.599609,-0.238282 0.17,-0.16 0.25,-0.351796 0.25,-0.591797 0,-0.23 -0.08,-0.429843 -0.25,-0.589843 -0.17,-0.16 -0.369609,-0.238282 -0.599609,-0.238281 z M 8.75,20.720703 c -0.2300001,0 -0.4298436,0.08023 -0.5898439,0.240235 -0.16,0.16 -0.2402343,0.360078 -0.2402343,0.580078 0,0.24 0.080234,0.439375 0.2402343,0.609375 0.1600003,0.17 0.3498438,0.25 0.5898439,0.25 0.23,0 0.4298435,-0.08 0.5898438,-0.25 0.16,-0.17 0.2402342,-0.369375 0.2402342,-0.609375 0,-0.23 -0.080234,-0.420078 -0.2402342,-0.580078 C 9.1798435,20.800938 8.99,20.720703 8.75,20.720703 Z m 6.400391,0 c -0.24,0 -0.429844,0.08023 -0.589844,0.240235 -0.16,0.16 -0.240234,0.360078 -0.240235,0.580078 0,0.24 0.08024,0.439375 0.240235,0.609375 0.16,0.17 0.359844,0.25 0.589844,0.25 0.23,0 0.429843,-0.08 0.589843,-0.25 0.16,-0.17 0.240235,-0.369375 0.240235,-0.609375 0,-0.23 -0.08024,-0.420078 -0.240235,-0.580078 -0.16,-0.16 -0.349843,-0.240235 -0.589843,-0.240235 z m -3.230469,1.890625 c -0.23,0 -0.420078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.36961 -0.240235,0.59961 0,0.22 0.08024,0.419609 0.240235,0.599609 0.16,0.16 0.360078,0.240234 0.580078,0.240234 0.24,0 0.439609,-0.08023 0.599609,-0.240234 0.16,-0.16 0.25,-0.359609 0.25,-0.599609 0,-0.23 -0.08,-0.42961 -0.25,-0.59961 -0.17,-0.17 -0.369609,-0.25 -0.599609,-0.25 z m -3.1894532,1.738281 c -0.2300001,0 -0.4298438,0.08047 -0.5898438,0.230469 -0.1400001,0.15 -0.2207032,0.349844 -0.2207032,0.589844 0,0.21 0.080234,0.400313 0.2402343,0.570313 0.18,0.16 0.3700782,0.240234 0.5800783,0.240234 0.24,0 0.4298436,-0.08047 0.5898436,-0.230469 0.16,-0.16 0.2304689,-0.350078 0.2304689,-0.580078 0,-0.24 -0.080234,-0.429844 -0.2402344,-0.589844 -0.1600001,-0.16 -0.349844,-0.230469 -0.5898437,-0.230469 z m 6.4101562,0 c -0.24,0 -0.441561,0.08023 -0.601563,0.240235 -0.139998,0.15 -0.218747,0.350078 -0.21875,0.580078 0,0.21 0.08047,0.400313 0.230469,0.570313 0.18,0.16 0.37961,0.240234 0.59961,0.240234 0.24,0 0.429843,-0.08047 0.589843,-0.230469 0.16,-0.16 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.08023,-0.429844 -0.240234,-0.589844 -0.16,-0.16 -0.349844,-0.230469 -0.589844,-0.230469 z m -3.220703,1.921876 c -0.22,0 -0.410078,0.08 -0.580078,0.25 -0.16,0.17 -0.240235,0.369609 -0.240235,0.599609 0,0.22 0.08024,0.410312 0.240235,0.570312 0.17,0.17 0.360078,0.25 0.580078,0.25 0.24,0 0.439609,-0.08047 0.599609,-0.230468 0.17,-0.16 0.25,-0.349844 0.25,-0.589844 0,-0.24 -0.08,-0.439611 -0.25,-0.599609 -0.17,-0.170001 -0.369609,-0.25 -0.599609,-0.25 z"    class="frozenPrecip" /><path    id="path879"    d="m 17.769531,1.5 c -0.23,0 -0.429609,0.089766 -0.599609,0.2597656 -0.17,0.1699999 -0.259766,0.3715626 -0.259766,0.6015624 v 2.0390626 h -0.0098 c 0,0.23 0.08,0.4300781 0.25,0.5800781 0.17,0.15 0.369375,0.2304687 0.609375,0.2304687 0.24,0 0.429843,-0.080469 0.589843,-0.2304687 0.16,-0.16 0.230469,-0.3500781 0.230469,-0.5800781 V 2.361328 c 0,-0.2399998 -0.08023,-0.4413281 -0.240234,-0.6113281 C 18.179809,1.5799999 17.999496,1.5 17.769496,1.5 Z m 6.910157,2.861328 c -0.22,0 -0.410079,0.08 -0.580079,0.25 l -1.429687,1.4589844 c -0.17,0.16 -0.25,0.3596094 -0.25,0.5996094 0,0.23 0.08,0.4298437 0.25,0.5898438 0.15,0.16 0.340547,0.2417187 0.560547,0.2617187 0.22,0.02 0.42914,-0.071719 0.61914,-0.2617187 L 25.279297,5.830078 c 0.18,-0.1799999 0.259766,-0.3793749 0.259765,-0.609375 0,-0.24 -0.08976,-0.4393748 -0.259765,-0.609375 -0.17,-0.1699999 -0.36961,-0.2499999 -0.599609,-0.25 z M 10.849609,4.390625 c -0.25,0 -0.458906,0.08 -0.628906,0.25 -0.17,0.16 -0.25,0.3596094 -0.25,0.5996094 0,0.24 0.080234,0.4398438 0.240235,0.5898437 l 0.658203,0.6601563 c 0.16,0.16 0.34125,0.25 0.53125,0.25 0.21,0.03 0.409375,-0.03875 0.609375,-0.21875 0.2,-0.18 0.300781,-0.3908594 0.300781,-0.6308594 0,-0.24 -0.08023,-0.460625 -0.240235,-0.640625 L 11.429688,4.640625 c -0.150003,-0.17 -0.340079,-0.25 -0.580079,-0.25 z m 6.919922,2.5507813 c -1.181227,0 -2.214739,0.3419811 -3.101562,1.0195312 0.541589,0.3102246 1.019623,0.6580132 1.457031,1.078125 0.495944,-0.2622152 1.039509,-0.4082031 1.644531,-0.4082031 0.97,0 1.800469,0.3490625 2.480469,1.0390625 0.69,0.6900001 1.029297,1.5302341 1.029297,2.4902341 0,0.283118 -0.03848,0.566443 -0.109375,0.847657 0.517454,0.486729 0.925369,0.972629 1.267578,1.501953 C 22.798278,13.799552 23,13.018195 23,12.160156 c 0,-0.94 -0.229219,-1.809375 -0.699219,-2.6093748 -0.47,-0.8 -1.110156,-1.4401563 -1.910156,-1.9101563 -0.8,-0.47 -1.681094,-0.6992187 -2.621094,-0.6992186 z m 7.78125,4.3691407 c -0.24,0 -0.441095,0.08 -0.621093,0.25 -0.18,0.17 -0.259766,0.369609 -0.259766,0.599609 0,0.24 0.08977,0.429844 0.259766,0.589844 0.17,0.18 0.381093,0.271484 0.621093,0.271485 h 2.019531 c 0.230002,0 0.42961,-0.08 0.59961,-0.25 0.17,-0.17 0.25,-0.371329 0.25,-0.611329 0,-0.24 -0.08,-0.439609 -0.25,-0.599609 -0.17,-0.16 -0.369608,-0.25 -0.59961,-0.25 z m -1.490234,6.310547 c -0.23,0 -0.429844,0.08 -0.589844,0.25 -0.17,0.16 -0.25,0.359609 -0.25,0.599609 0,0.25 0.08023,0.459141 0.240235,0.619141 l 0.638671,0.630859 c 0.24,0.16 0.460625,0.240235 0.640625,0.240235 0.21,0 0.390547,-0.08977 0.560547,-0.259766 0.17,-0.17 0.25,-0.381328 0.25,-0.611328 0,-0.23 -0.09172,-0.420078 -0.261719,-0.580078 l -0.61914,-0.648438 c -0.18,-0.16 -0.379375,-0.240234 -0.609375,-0.240234 z"    class="light" /><path    d="m 11.210938,8.0097656 c -1.410001,0 -2.6502349,0.4405468 -3.740235,1.3105468 -1.09,0.8700006 -1.7798437,1.9898436 -2.0898437,3.3398436 -1.12,0.28 -2.0302344,0.86 -2.7402343,1.75 -0.7100001,0.9 -1.060547,1.920078 -1.060547,3.080079 0,0.859999 0.210625,1.670156 0.6406251,2.410156 0.42,0.74 1.0002344,1.341015 1.7402344,1.791015 0.7299999,0.45 1.5384374,0.688985 2.3984375,0.708985 0.11,0 0.1699219,-0.05992 0.1699219,-0.169922 v -1.330078 c 0,-0.12 -0.059922,-0.189453 -0.1699219,-0.189453 -0.85,-0.04 -1.5796875,-0.379532 -2.1796875,-1.019532 -0.6,-0.64 -0.9003906,-1.370937 -0.9003906,-2.210937 0,-0.82 0.2815625,-1.540156 0.8515624,-2.160156 0.57,-0.61 1.2596092,-0.970313 2.0996094,-1.070313 l 0.5292968,-0.05859 c 0.12,0 0.1796875,-0.06141 0.1796875,-0.191406 l 0.080078,-0.509765 c 0.11,-1.09 0.5613282,-2.000469 1.3613282,-2.730469 0.8,-0.730001 1.7496098,-1.0898442 2.8496098,-1.0898442 1.09,0 2.039609,0.3598442 2.849609,1.0898442 0.82,0.73 1.280859,1.631172 1.38086,2.701172 l 0.06836,0.580078 c 0,0.11 0.05992,0.169922 0.169922,0.169922 h 1.611328 c 0.9,0 1.668594,0.318984 2.308594,0.958984 0.64,0.64 0.960937,1.401016 0.960937,2.291016 0,0.84 -0.300391,1.568984 -0.90039,2.208984 -0.600001,0.63 -1.329922,0.971484 -2.169922,1.021484 -0.12,0 -0.189453,0.05945 -0.189454,0.189453 v 1.330079 c 0,0.11 0.05945,0.169921 0.189454,0.169921 1.33,-0.04 2.450859,-0.539999 3.380859,-1.5 0.93,-0.96 1.388672,-2.090156 1.388672,-3.410156 0,-0.711087 -0.12755,-1.340263 -0.380859,-1.910156 -0.313906,-0.612656 -0.696764,-1.119813 -1.242189,-1.656254 -0.929341,-0.88876 -2.046903,-1.34375 -3.355469,-1.34375 h -0.320312 c -0.29645,-1.156153 -0.848138,-2.125075 -1.652344,-2.9101564 -10e-4,-9.586e-4 -0.0029,-9.956e-4 -0.0039,-0.00195 C 14.861063,9.2255534 14.331722,8.8958443 13.666016,8.5605468 12.916923,8.1992742 12.098916,8.0097655 11.210938,8.0097656 Z"   id="path875"   class="cloud" /></g>'

chancetstorms2 = '<g transform="scale(2) translate(0,0)" id="chancetstorms"><path   id="path851"   d="m 19.429686,17.550781 c -0.17,0 -0.330235,0.05039 -0.490234,0.150391 -0.160002,0.1 -0.270079,0.260468 -0.330079,0.480468 l -0.269531,1.009766 c -0.01,0.08 -0.01953,0.14875 -0.01953,0.21875 -0.01,0.16 0.04039,0.310703 0.150391,0.470703 0.109998,0.16 0.268281,0.28086 0.488281,0.38086 0.08,0.04 0.161718,0.05859 0.261719,0.05859 0.109998,0 0.219843,-0.03008 0.339843,-0.08008 0.21,-0.1 0.349453,-0.290312 0.439453,-0.570312 l 0.289063,-1.029297 c 0.02,-0.13 0.03125,-0.200703 0.03125,-0.220703 0,-0.17 -0.05016,-0.328282 -0.160156,-0.488282 -0.11,-0.16 -0.270235,-0.270078 -0.490235,-0.330078 -0.02,0 -0.05937,-0.01148 -0.109375,-0.02148 -0.06,-0.03 -0.100859,-0.0293 -0.130859,-0.0293 z m -4.292969,3.091797 c -0.1075,0.0125 -0.211406,0.04742 -0.316406,0.107422 -0.21,0.12 -0.340156,0.291484 -0.410156,0.521484 L 14.16992,22.28125 c -0.02,0.17 -0.0293,0.259531 -0.0293,0.269531 0,0.14 0.04844,0.289453 0.148438,0.439453 0.1,0.15 0.251172,0.260078 0.451172,0.330078 0.22,0.07 0.438672,0.06117 0.638672,-0.04883 0.2,-0.11 0.33039,-0.281484 0.40039,-0.521484 l 0.300781,-1.039063 c 0.06,-0.22 0.02992,-0.430859 -0.08008,-0.630859 -0.12,-0.2 -0.299297,-0.340156 -0.529296,-0.410156 -0.115001,-0.03 -0.226485,-0.03984 -0.333985,-0.02734 z m 2.814453,1.695312 c -0.11375,0.01375 -0.222265,0.04852 -0.322265,0.103516 -0.2,0.12 -0.329141,0.299297 -0.369141,0.529297 L 16.990233,24 c -0.02,0.06 -0.03125,0.131172 -0.03125,0.201172 0,0.17 0.05016,0.339765 0.160156,0.509765 0.11,0.17 0.270703,0.27961 0.470703,0.34961 0.02,0 0.05914,0.0095 0.119141,0.01953 0.05,0.01 0.09109,0.02148 0.121093,0.02148 0.13,0 0.258907,-0.02008 0.378907,-0.08008 0.19,-0.07 0.330156,-0.260312 0.410156,-0.570312 l 0.25,-1.009766 c 0.07,-0.23 0.05141,-0.450156 -0.05859,-0.660156 -0.11,-0.21 -0.28,-0.349922 -0.5,-0.419922 -0.125,-0.03 -0.245625,-0.03719 -0.359375,-0.02344 z m -4.144531,3.085938 c -0.105,0.0125 -0.206641,0.04742 -0.306641,0.107422 -0.2,0.12 -0.340156,0.289297 -0.410156,0.529297 l -0.269531,1 c -0.01,0.17 -0.02148,0.259765 -0.02149,0.259765 0,0.16 0.05039,0.310938 0.150391,0.460938 0.1,0.15 0.260938,0.260312 0.460938,0.320312 0.14,0.03 0.22,0.04883 0.25,0.04883 0.09,0 0.208906,-0.02961 0.378906,-0.09961 0.21,-0.09 0.349922,-0.269531 0.419922,-0.519531 l 0.28125,-1.050781 c 0.06,-0.22 0.03992,-0.428907 -0.08008,-0.628907 -0.12,-0.2 -0.29125,-0.33039 -0.53125,-0.40039 -0.11,-0.03 -0.217266,-0.03984 -0.322266,-0.02734 z"   class="precip" /><path   d="m 10.119139,17.621093 c -0.09,0 -0.1687499,0.05063 -0.2187499,0.140626 l -0.4648438,1.220703 0.00977,0.0039 -0.5253907,1.357422 -0.109375,0.287109 c -6.073e-4,-1.54e-4 -0.00135,1.54e-4 -0.00195,0 l -1.21875,3.146484 -0.00195,-0.002 -0.048828,0.125 c -0.03,0.14 0.020625,0.220703 0.140625,0.220703 h 2.1308593 l -1.0410156,3.779297 h 0.2792969 l 3.9707038,-5.21875 c 0.04,-0.04 0.03953,-0.09062 0.01953,-0.140625 -0.02,-0.05 -0.06867,-0.07031 -0.138672,-0.07031 h -2.179687 l 2.478515,-4.640625 c 0.06,-0.14 0.02133,-0.208985 -0.138672,-0.208985 z"   id="path845"   class="light" /><path   d="m 14.289061,8 c -1.41,0 -2.669766,0.4405468 -3.759766,1.3105468 -1.0899996,0.8700002 -1.789609,1.9893752 -2.099609,3.3593752 -1.1,0.26 -2.0104688,0.830468 -2.7304688,1.730468 -0.72,0.9 -1.0585937,1.910547 -1.0585937,3.060547 0,1.11 0.3282812,2.100703 0.9882812,2.970703 0.4540835,0.598565 1.0053645,1.05874 1.6425782,1.398438 L 7.8886703,20.234375 C 7.5726366,20.035629 7.287848,19.78301 7.039061,19.470703 c -0.47,-0.59 -0.6992188,-1.259766 -0.6992188,-2.009766 0,-0.83 0.2798438,-1.550156 0.8398438,-2.160156 0.56,-0.61 1.2596094,-0.960547 2.0996093,-1.060547 l 0.5195313,-0.07031 c 0.13,0 0.2011719,-0.05992 0.2011719,-0.169922 l 0.070312,-0.519531 c 0.1,-1.080001 0.549375,-1.988751 1.359375,-2.71875 0.81,-0.73 1.759609,-1.1015628 2.84961,-1.1015628 1.09,0 2.039609,0.3715628 2.84961,1.1015628 0.82,0.73 1.28039,1.638749 1.40039,2.71875 l 0.06055,0.580078 c 0,0.12 0.05945,0.179687 0.189453,0.179687 h 1.611328 c 0.91,0 1.67836,0.321172 2.31836,0.951172 0.64,0.63 0.960937,1.389297 0.960937,2.279297 0,0.85 -0.300625,1.590937 -0.890625,2.210937 -0.59,0.62 -1.319453,0.959297 -2.189453,1.029297 -0.13,0 -0.199219,0.05945 -0.199219,0.189453 v 1.371094 c 0,0.11 0.06922,0.169922 0.199219,0.169922 0.65,-0.02 1.269375,-0.171406 1.859375,-0.441406 0.59,-0.27 1.101484,-0.62836 1.521484,-1.06836 0.420001,-0.44 0.759766,-0.960312 1.009766,-1.570312 0.25,-0.6 0.378906,-1.23086 0.378906,-1.880859 0,-0.9 -0.219921,-1.730235 -0.669921,-2.490235 -0.45,-0.76 -1.050547,-1.358828 -1.810547,-1.798828 -0.76,-0.44 -1.588516,-0.660156 -2.478516,-0.660156 H 20.08008 c -0.329999,-1.33 -1.029375,-2.419766 -2.109374,-3.2597657 -1.080001,-0.84 -2.301641,-1.2714843 -3.681641,-1.2714843 z"   id="path2"   class="cloud" /></g>'

clear2 = '<g transform="scale(2) translate(0,0)" id="clear"><path   id="path2"   d="m 15.010708,4.3700995 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410156 c 0,0.23 0.09977,0.4300781 0.259766,0.5800782 0.16,0.1499999 0.369609,0.2304687 0.599609,0.2304687 0.23,0 0.429609,-0.070469 0.599609,-0.2304687 0.17,-0.16 0.25,-0.3500782 0.25,-0.5800782 V 5.2197089 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z M 8.1103177,7.2197089 c -0.23,0 -0.4386719,0.08 -0.6386719,0.25 -0.15,0.18 -0.2304687,0.3813281 -0.2304687,0.6113281 0,0.24 0.080234,0.449375 0.2402343,0.609375 L 8.9403958,10.1201 c 0.15,0.16 0.3498437,0.240234 0.5898437,0.240234 0.24,0 0.4396094,-0.08023 0.5996095,-0.240234 0.16,-0.1600005 0.240234,-0.3596099 0.240234,-0.5996099 0,-0.24 -0.08023,-0.4398437 -0.240234,-0.5898437 L 8.7001614,7.4599433 C 8.5301614,7.2999432 8.3303177,7.2197089 8.1103177,7.2197089 Z m 13.8007813,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402344 l -1.419922,1.4707031 c -0.15,0.14 -0.230469,0.3398437 -0.230469,0.5898437 0,0.24 0.08047,0.4396094 0.230469,0.5996099 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.16 0.240234,-0.3691406 0.240234,-0.6191406 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015625 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.5507812 c -0.93,0 -1.789609,0.2292189 -2.599609,0.6992189 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.800001 -0.7011718,1.669611 -0.7011718,2.599611 0,0.94 0.2414058,1.811093 0.6914058,2.621092 0.47,0.8 1.098438,1.430391 1.898438,1.900391 0.8,0.47 1.671328,0.699219 2.611328,0.699219 0.94,0 1.809375,-0.229219 2.609375,-0.699219 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.7 -0.140156,-1.381484 -0.410156,-2.021484 -0.27,-0.64 -0.639375,-1.190156 -1.109375,-1.660156 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.4199219 -2.019532,-0.4199219 z m 0.0098,1.7207029 c 0.98,0 1.81,0.339532 2.5,1.019532 0.69,0.69 1.039062,1.50875 1.039062,2.46875 0,0.98 -0.349062,1.809999 -1.039062,2.5 -0.69,0.69 -1.52,1.041014 -2.5,1.041014 -0.98,0 -1.810234,-0.351014 -2.490234,-1.041014 -0.69,-0.690001 -1.029297,-1.52 -1.029297,-2.5 0,-0.96 0.339062,-1.77875 1.039062,-2.46875 0.68,-0.68 1.510469,-1.019532 2.480469,-1.019532 z m -9.7792966,2.628908 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240233 -0.17,0.17 -0.25,0.379142 -0.25,0.619142 0,0.24 0.091719,0.441328 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390624 c 0.23,0 0.4300782,-0.08 0.5800782,-0.25 0.15,-0.17 0.2207031,-0.371328 0.2207031,-0.611328 0,-0.24 -0.080469,-0.439375 -0.2304687,-0.609375 -0.16,-0.17 -0.3500782,-0.25 -0.5800782,-0.25 z m 17.5097656,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240233 -0.16,0.18 -0.240234,0.379142 -0.240234,0.619142 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371563 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z M 9.5302395,19.649397 c -0.24,0 -0.4398437,0.07047 -0.5898437,0.230467 l -1.46875,1.429688 c -0.15,0.18 -0.2304687,0.381328 -0.2304687,0.611328 -10e-8,0.23 0.080234,0.429844 0.2402343,0.589844 0.41,0.32 0.8185156,0.32 1.2285157,0 l 1.4199219,-1.419922 c 0.16,-0.18 0.240234,-0.400626 0.240234,-0.640625 0,-0.23 -0.08023,-0.420312 -0.240234,-0.570313 C 9.9698489,19.729866 9.7702396,19.649397 9.5302395,19.649397 Z m 10.9296875,0.0098 c -0.22,2e-6 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.14 -0.230469,0.330547 -0.230469,0.560547 0,0.26 0.08047,0.470391 0.230469,0.650391 l 1.419922,1.419922 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z m -5.458985,2.271485 c -0.23,0 -0.429609,0.08023 -0.599609,0.240234 -0.17,0.16 -0.25,0.35961 -0.25,0.59961 v 1.990234 c 0,0.24 0.08,0.449141 0.25,0.619141 0.16,0.17 0.369609,0.25 0.599609,0.25 0.23,0 0.42961,-0.08 0.59961,-0.25 0.17,-0.17 0.25,-0.379141 0.25,-0.619141 v -1.990234 c 0,-0.24 -0.08024,-0.43961 -0.240235,-0.59961 -0.16,-0.16 -0.369375,-0.240234 -0.609375,-0.240234 z"   class="light" /></g>'

cloudy2 = '<g transform="scale(2) translate(0,0)"><path   d="m 3.895,16.140912 c 0,-0.99 0.31,-1.88 0.93,-2.65 0.62,-0.77 1.41,-1.27 2.38,-1.49 0.26,-1.17 0.85,-2.1400078 1.78,-2.8800078 0.93,-0.7500004 2,-1.1200001 3.22,-1.1200001 1.18,0 2.24,0.3599997 3.16,1.0900001 0.93,0.73 1.53,1.6600068 1.8,2.8000078 h 0.27 c 1.18,0 2.18,0.41 3.01,1.24 0.83,0.83 1.25,1.83 1.25,3 0,1.18 -0.42,2.18 -1.25,3.01 -0.83,0.83 -1.83,1.25 -3.01,1.25 h -9.27 c -0.58,0 -1.13,-0.11 -1.65,-0.34 -0.52,-0.23 -0.99,-0.51 -1.37,-0.89 -0.38,-0.38 -0.68,-0.84 -0.91,-1.36 -0.23,-0.52 -0.34,-1.09 -0.34,-1.66 z m 1.45,0 c 0,0.76 0.28,1.42 0.82,1.96 0.54,0.54 1.21,0.82 1.99,0.82 h 9.28 c 0.77,0 1.44,-0.27 1.99,-0.82 0.55,-0.55 0.83,-1.2 0.83,-1.96 0,-0.76 -0.27,-1.42 -0.83,-1.96 -0.55,-0.54 -1.21,-0.82 -1.99,-0.82 h -1.39 c -0.1,0 -0.15,-0.05 -0.15,-0.15 l -0.07,-0.49 c -0.1,-0.94 -0.5,-1.73 -1.19,-2.350005 -0.69,-0.6200028 -1.51,-0.9300028 -2.45,-0.9300028 -0.94,0 -1.76,0.31 -2.46,0.9400028 -0.7,0.620005 -1.09,1.410005 -1.18,2.340005 l -0.07,0.42 c 0,0.1 -0.05,0.15 -0.16,0.15 l -0.45,0.07 c -0.72,0.06 -1.32,0.36 -1.81,0.89 -0.46,0.53 -0.71,1.16 -0.71,1.89 z m 8.85,-8.7200079 c -0.1,0.09 -0.08,0.16 0.07,0.21 0.43,0.19 0.79,0.37 1.08,0.5499997 0.11,0.03 0.19,0.02 0.22,-0.03 0.61,-0.5699997 1.31,-0.8599997 2.12,-0.8599997 0.81,0 1.5,0.27 2.1,0.81 0.59,0.5399997 0.92,1.2100001 0.99,1.9999999 l 0.09,0.640007 h 1.42 c 0.65,0 1.21,0.230001 1.68,0.700001 0.47,0.47 0.7,1.02 0.7,1.66 0,0.6 -0.21,1.12 -0.62,1.57 -0.41,0.45 -0.92,0.7 -1.53,0.77 -0.1,0 -0.15,0.05 -0.15,0.16 v 1.13 c 0,0.11 0.05,0.16 0.15,0.16 1.01,-0.06 1.86,-0.46 2.55,-1.19 0.69,-0.73 1.04,-1.6 1.04,-2.6 0,-1.06 -0.37,-1.96 -1.12,-2.700005 -0.75,-0.7500028 -1.65,-1.1200028 -2.7,-1.1200028 h -0.15 c -0.26,-1.0000004 -0.81,-1.8200001 -1.65,-2.4700001 -0.83,-0.65 -1.77,-0.97 -2.8,-0.97 -1.4,-0.01 -2.57,0.52 -3.49,1.58 z"   id="path2"   class="cloud" /></g>'

flurries2 = '<g transform="scale(2) translate(0,0)" id="flurries"><path   id="path844"   d="m 15.014766,19.050235 c -0.2,0 -0.390313,0.08023 -0.570313,0.240234 -0.17,0.170001 -0.25,0.369609 -0.25,0.59961 0,0.23 0.08023,0.429608 0.240235,0.599609 0.16,0.16 0.350078,0.240234 0.580078,0.240234 0.24,0 0.439375,-0.08023 0.609375,-0.240234 0.17,-0.160002 0.25,-0.359844 0.25,-0.589844 0,-0.239999 -0.08,-0.42961 -0.25,-0.599609 -0.17,-0.170001 -0.369375,-0.25 -0.609375,-0.25 z m 3.25,1.699219 c -0.23,0 -0.42961,0.08 -0.59961,0.25 -0.17,0.17 -0.25,0.360078 -0.25,0.580078 0,0.23 0.09,0.429842 0.25,0.589843 0.16,0.170001 0.35961,0.25 0.59961,0.25 0.24,0 0.429843,-0.08 0.589843,-0.25 0.16,-0.160001 0.240235,-0.359608 0.240235,-0.599609 0,-0.22 -0.08023,-0.420078 -0.240235,-0.580078 -0.16,-0.160002 -0.359843,-0.240234 -0.589843,-0.240234 z m -6.429688,0.0098 c -0.24,0 -0.429844,0.08023 -0.589844,0.240234 -0.16,0.16 -0.240234,0.360079 -0.240234,0.58008 0,0.239999 0.08023,0.439609 0.240234,0.599609 0.16,0.170001 0.359844,0.25 0.589844,0.25 0.24,0 0.429844,-0.08 0.589844,-0.25 0.16,-0.16 0.240234,-0.35961 0.240234,-0.599609 0,-0.22 -0.08023,-0.42008 -0.240234,-0.58008 -0.16,-0.16 -0.359844,-0.240234 -0.589844,-0.240234 z m 3.179688,1.890625 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.17,0.18 -0.25,0.389141 -0.25,0.619141 0,0.23 0.08023,0.431562 0.240235,0.601563 0.16,0.17 0.350078,0.25 0.580078,0.25 0.24,0 0.439375,-0.08 0.609375,-0.25 0.17,-0.170001 0.25,-0.371563 0.25,-0.601563 0,-0.23 -0.08977,-0.42961 -0.259766,-0.599609 -0.17,-0.170001 -0.369609,-0.259766 -0.599609,-0.259766 z m -3.189454,1.730468 c -0.229999,0 -0.420078,0.08047 -0.580078,0.230469 -0.16,0.16 -0.240234,0.35961 -0.240234,0.59961 0,0.23 0.08047,0.430078 0.230469,0.580078 0.16,0.15 0.359843,0.230469 0.589843,0.230469 0.240001,0 0.429844,-0.07047 0.589844,-0.230469 0.16,-0.16 0.240235,-0.349844 0.240235,-0.589844 0,-0.24 -0.08024,-0.429844 -0.240235,-0.589844 -0.16,-0.15 -0.359843,-0.230469 -0.589844,-0.230469 z m 6.439454,0 c -0.24,0 -0.43961,0.08047 -0.59961,0.230469 -0.17,0.18 -0.25,0.37961 -0.25,0.59961 0,0.23 0.09,0.420312 0.25,0.570312 0.16,0.16 0.35961,0.240235 0.59961,0.240235 0.24,0 0.429843,-0.07047 0.589843,-0.230469 0.15,-0.16 0.230469,-0.349844 0.230469,-0.589844 0,-0.24 -0.07047,-0.439844 -0.230469,-0.589844 -0.16,-0.15 -0.349843,-0.230469 -0.589843,-0.230469 z m -3.25,1.939454 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.17,0.18 -0.25,0.379375 -0.25,0.609375 0,0.23 0.08023,0.419845 0.240235,0.589844 0.16,0.16 0.350078,0.240234 0.580078,0.240234 0.24,0 0.439375,-0.08023 0.609375,-0.240234 0.17,-0.16 0.25,-0.359844 0.25,-0.589844 0,-0.23 -0.08,-0.429608 -0.25,-0.599609 -0.17,-0.17 -0.369375,-0.25 -0.609375,-0.25 z"   class="frozenPrecip" /><path   d="m 4.645,17.51 c 0,-1.16 0.35,-2.179999 1.06,-3.079999 0.71,-0.9 1.62,-1.480001 2.74,-1.760001 0.31,-1.36 1.01,-2.48 2.1,-3.36 1.09,-0.88 2.34,-1.31 3.75,-1.31 1.38,0 2.6,0.43 3.68,1.28 1.08,0.85 1.78,1.95 2.1,3.29 h 0.32 c 0.89,0 1.72,0.22 2.48,0.66 0.76,0.439999 1.37,1.04 1.81,1.800001 0.44,0.76 0.67,1.589999 0.67,2.479999 0,1.32 -0.46,2.47 -1.39,3.419999 -0.92,0.960001 -2.05,1.460001 -3.38,1.5 -0.13,0 -0.2,-0.06 -0.2,-0.17 v -1.33 c 0,-0.12 0.07,-0.179999 0.2,-0.179999 0.85,-0.04 1.58,-0.38 2.18,-1.02 0.6,-0.640001 0.9,-1.38 0.9,-2.23 0,-0.890001 -0.32,-1.65 -0.97,-2.3 -0.65,-0.65 -1.42,-0.97 -2.32,-0.97 h -1.61 c -0.12,0 -0.18,-0.06 -0.18,-0.17 l -0.08,-0.58 c -0.11,-1.08 -0.58,-1.99 -1.39,-2.72 -0.82,-0.73 -1.76,-1.1 -2.85,-1.1 -1.1,0 -2.05,0.37 -2.86,1.11 -0.81,0.74 -1.27,1.65 -1.37,2.75 l -0.06,0.5 c 0,0.12 -0.07,0.19 -0.2,0.19 l -0.53,0.07 c -0.83,0.07 -1.53,0.41 -2.1,1.04 -0.57,0.63 -0.85,1.35 -0.85,2.189999 0,0.85 0.3,1.590001 0.9,2.23 0.6,0.64 1.33,0.97 2.18,1.02 0.11,0 0.17,0.06 0.17,0.18 v 1.33 c 0,0.11 -0.06,0.17 -0.17,0.17 -1.34,-0.04 -2.47,-0.54 -3.4,-1.5 -0.87,-0.96 -1.33,-2.11 -1.33,-3.429999 z"   id="path2"   class="cloud" /></g>'

fog2 = '<g transform="scale(2) translate(0,0)" id="fog"><path   d="m 2.625,21.63 c 0,-0.24 0.08,-0.45 0.25,-0.61 0.17,-0.16 0.38,-0.24 0.63,-0.24 h 18.67 c 0.25,0 0.45,0.08 0.61,0.24 0.16,0.16 0.24,0.36 0.24,0.61 0,0.23 -0.08,0.43 -0.25,0.58 -0.17,0.16 -0.37,0.23 -0.6,0.23 H 3.505 c -0.25,0 -0.46,-0.08 -0.63,-0.23 -0.17,-0.16 -0.25,-0.35 -0.25,-0.58 z m 2.62,-3.14 c 0,-0.24 0.09,-0.44 0.26,-0.6 0.15,-0.15 0.35,-0.23 0.59,-0.23 h 18.67 c 0.23,0 0.42,0.08 0.58,0.24 0.16,0.16 0.23,0.35 0.23,0.59 0,0.24 -0.08,0.44 -0.23,0.6 -0.16,0.17 -0.35,0.25 -0.58,0.25 H 6.095 c -0.24,0 -0.44,-0.08 -0.6,-0.25 -0.17,-0.17 -0.25,-0.37 -0.25,-0.6 z m 0.13,-2.39 c 0,0.09 0.05,0.13 0.15,0.13 h 1.43 c 0.06,0 0.13,-0.05 0.2,-0.16 0.24,-0.52 0.59,-0.94 1.06,-1.27 0.47,-0.33 0.99,-0.52 1.55,-0.56 l 0.55,-0.07 c 0.11,0 0.17,-0.06 0.17,-0.18 l 0.07,-0.5 c 0.11,-1.08 0.56,-1.98 1.37,-2.7 0.81,-0.72 1.76,-1.08 2.85,-1.08 1.08,0 2.02,0.36 2.83,1.07 0.8,0.71 1.26,1.61 1.37,2.68 l 0.08,0.57 c 0,0.11 0.07,0.17 0.2,0.17 h 1.59 c 0.64,0 1.23,0.17 1.76,0.52 0.53,0.35 0.92,0.8 1.18,1.37 0.07,0.11 0.14,0.16 0.21,0.16 h 1.43 c 0.12,0 0.17,-0.07 0.14,-0.23 -0.29,-1.02 -0.88,-1.86 -1.74,-2.51 -0.87,-0.65 -1.86,-0.97 -2.97,-0.97 h -0.32 c -0.33,-1.33 -1.03,-2.42 -2.1,-3.27 C 17.365,8.42 16.155,8 14.785,8 c -1.4,0 -2.64,0.44 -3.73,1.32 -1.09,0.88 -1.78,2 -2.09,3.36 -0.85,0.2 -1.6,0.6 -2.24,1.21 -0.64,0.61 -1.09,1.33 -1.34,2.18 v -0.04 c -0.01,0 -0.01,0.03 -0.01,0.07 z m 1.61,8.59 c 0,-0.24 0.09,-0.43 0.26,-0.59 0.15,-0.15 0.35,-0.23 0.6,-0.23 h 18.68 c 0.24,0 0.44,0.08 0.6,0.23 0.17,0.16 0.25,0.35 0.25,0.58 0,0.24 -0.08,0.44 -0.25,0.61 -0.17,0.17 -0.37,0.25 -0.6,0.25 H 7.845 c -0.23,0 -0.43,-0.09 -0.6,-0.26 -0.17,-0.15 -0.26,-0.36 -0.26,-0.59 z"   id="path2"   class="cloud" /></g>'

hazy2 = '<g transform="scale(2) translate(0,0)" id="hazy"><path   id="path856"   d="m 15.010742,4.37 c -0.24,0 -0.439375,0.08 -0.609375,0.25 -0.17,0.17 -0.25,0.369375 -0.25,0.609375 v 2.03125 c 0,0.23 0.09977,0.4398437 0.259766,0.5898435 0.16,0.15 0.369609,0.230469 0.599609,0.230469 0.23,0 0.429609,-0.09023 0.599609,-0.240234 0.17,-0.1500004 0.25,-0.3500785 0.25,-0.5800785 v -2.03125 c 0,-0.24 -0.08,-0.439375 -0.25,-0.609375 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z M 8.1103517,7.2196094 c -0.23,0 -0.4386719,0.08 -0.6386719,0.25 -0.15,0.18 -0.2304687,0.3813281 -0.2304687,0.6113281 0,0.24 0.080234,0.439375 0.2402343,0.609375 l 1.4589844,1.4296865 c 0.15,0.16 0.3498437,0.240235 0.5898437,0.240235 0.24,0 0.4396094,-0.08023 0.5996095,-0.240235 0.16,-0.1599995 0.240234,-0.3596085 0.240234,-0.5996085 0,-0.24 -0.08023,-0.439844 -0.240234,-0.589844 L 8.7001954,7.4696094 c -0.18,-0.17 -0.3798437,-0.25 -0.5898437,-0.25 z m 13.8007813,0 c -0.21,0 -0.409844,0.08 -0.589844,0.25 l -1.419922,1.4609371 c -0.15,0.14 -0.230469,0.339844 -0.230469,0.589844 0,0.24 0.08047,0.439843 0.230469,0.5898435 0.15,0.16 0.328594,0.240235 0.558594,0.240235 0.22,0 0.421562,-0.08024 0.601562,-0.240235 l 1.458985,-1.4199215 c 0.16,-0.16 0.240234,-0.369375 0.240234,-0.609375 0,-0.24 -0.08,-0.4413281 -0.25,-0.6113281 -0.17,-0.17 -0.369609,-0.25 -0.599609,-0.25 z m -6.890625,2.9609376 c -0.31,0 -0.569766,0.01859 -0.759766,0.05859 h -0.05078 c -1.23,0.2 -2.25961,0.761406 -3.09961,1.691406 -0.84,0.93 -1.2805462,2.019297 -1.3105462,3.279297 v 0.07031 c 0,0.16 0.080234,0.240235 0.2402342,0.240235 h 1.130859 c 0.12,0 0.209766,-0.02984 0.259766,-0.08984 0.05,-0.06 0.08008,-0.119688 0.08008,-0.179688 0.04,-0.93 0.400078,-1.721093 1.080078,-2.371093 0.68,-0.65 1.489453,-0.970704 2.439453,-0.970704 0.95,0 1.761407,0.320704 2.441407,0.970704 0.679999,0.65 1.038125,1.441093 1.078124,2.371093 0,0.06 0.02031,0.119688 0.07031,0.179688 0.05,0.06 0.13,0.08984 0.25,0.08984 h 1.130859 c 0.15,0 0.230469,-0.08023 0.230469,-0.240235 v -0.07031 c -0.03,-1.26 -0.470547,-2.349297 -1.310547,-3.279297 -0.84,-0.93 -1.879609,-1.501406 -3.099609,-1.691406 h -0.04102 c -0.19,-0.04 -0.449765,-0.05859 -0.759765,-0.05859 z m -9.7890626,3.949219 c -0.22,0 -0.4215625,0.08 -0.6015625,0.25 -0.17,0.17 -0.25,0.369375 -0.25,0.609375 0,0.23 0.091719,0.431562 0.2617188,0.601562 0.17,0.170001 0.3696093,0.25 0.5996094,0.25 h 2.0292968 c 0.23,0 0.4300781,-0.08 0.5800782,-0.25 0.15,-0.16 0.2304687,-0.361562 0.2304687,-0.601562 0,-0.24 -0.080469,-0.439375 -0.2304687,-0.609375 -0.16,-0.170001 -0.3500782,-0.25 -0.5800782,-0.25 z m 17.5097656,0 c -0.21,0 -0.400313,0.08 -0.570313,0.25 -0.16,0.18 -0.240234,0.379375 -0.240234,0.609375 0,0.239999 0.08047,0.431562 0.230469,0.601562 0.15,0.170001 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371562 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z"   class="light" /><path   id="path852"   d="m 8.2705079,16.62 c -0.27,0 -0.480625,0.0807 -0.640625,0.220703 -0.15,0.14 -0.2285156,0.328829 -0.2285156,0.548828 0,0.27 0.068516,0.500391 0.2285156,0.650391 0.16,0.149999 0.370625,0.230469 0.640625,0.230469 h 5.7109371 c 0.28,0 0.488438,-0.08023 0.648438,-0.240235 0.15,-0.16 0.230468,-0.370625 0.230468,-0.640625 0,-0.219999 -0.08023,-0.408828 -0.240234,-0.548828 C 14.460117,16.690704 14.251445,16.62 13.981445,16.62 Z m 8.1210931,0 c -0.23,0 -0.431328,0.08047 -0.611328,0.230469 -0.18,0.149999 -0.269531,0.329062 -0.269531,0.539062 0,0.26 0.08953,0.470624 0.269531,0.640625 0.17,0.16 0.381328,0.240235 0.611328,0.240235 0.23,0 0.429375,-0.08023 0.609375,-0.240235 0.18,-0.16 0.269532,-0.380625 0.269532,-0.640625 0,-0.21 -0.08953,-0.389062 -0.269532,-0.539062 -0.18,-0.15 -0.379375,-0.230469 -0.609375,-0.230469 z m 2.408203,0 c -0.219999,0 -0.419609,0.08047 -0.599609,0.230469 -0.18,0.149999 -0.269531,0.329062 -0.269531,0.539062 0,0.26 0.08976,0.470624 0.259766,0.640625 0.179999,0.16 0.379374,0.240235 0.609374,0.240235 h 3.070313 c 0.23,0 0.410781,-0.08023 0.550781,-0.240235 0.14,-0.16 0.208985,-0.370625 0.208985,-0.640625 0,-0.219999 -0.07875,-0.398829 -0.21875,-0.548828 C 22.271133,16.690704 22.090117,16.62 21.870117,16.62 Z m -9.5292961,2.849609 c -0.21,0 -0.4196094,0.08953 -0.5996094,0.269532 -0.19,0.18 -0.2792968,0.381562 -0.2792968,0.601562 0,0.260002 0.089531,0.478673 0.2695312,0.638672 0.17,0.160001 0.379375,0.240234 0.609375,0.240234 0.27,0 0.490625,-0.07047 0.640625,-0.230466 0.1500001,-0.160001 0.2304681,-0.36844 0.2304681,-0.648438 0,-0.230001 -0.08023,-0.431328 -0.2402337,-0.611328 -0.16,-0.17 -0.3708594,-0.259766 -0.6308594,-0.259768 z m 2.4101561,0 c -0.26,0 -0.470859,0.08977 -0.63086,0.259766 -0.159999,0.179998 -0.238281,0.381326 -0.238281,0.611328 0,0.28 0.06852,0.488437 0.228516,0.648437 0.16,0.15 0.370625,0.230468 0.640625,0.230468 h 3.830078 c 0.23,0 0.429375,-0.08023 0.609375,-0.240235 0.18,-0.16 0.271484,-0.378672 0.271484,-0.638671 0,-0.22 -0.10125,-0.421563 -0.28125,-0.601563 -0.18,-0.18 -0.379609,-0.269532 -0.599609,-0.269532 z m 6.25,0 c -0.26,0 -0.480625,0.08977 -0.640625,0.259766 -0.16,0.179998 -0.240235,0.381326 -0.240235,0.611328 0,0.28 0.08023,0.488437 0.240235,0.648437 0.16,0.15 0.370625,0.230468 0.640625,0.230468 h 1.859375 c 0.27,0 0.490625,-0.07047 0.640625,-0.230468 0.15,-0.16 0.230469,-0.368438 0.230469,-0.648437 0,-0.230002 -0.08023,-0.43133 -0.240235,-0.611328 -0.16,-0.170001 -0.370859,-0.259766 -0.630859,-0.259766 z"   class="cloud" /></g>'

mostlycloudy2 = '<g transform="scale(2) translate(0,0)" id="mostlycloudy"><path   id="path855"   d="m 17.759766,1.5 c -0.24,0 -0.429844,0.080469 -0.589844,0.2304688 -0.16,0.15 -0.230469,0.3498438 -0.230469,0.5898438 v 2.0488281 c 0,0.26 0.08047,0.4610937 0.230469,0.6210937 0.15,0.16 0.349844,0.2304688 0.589844,0.2304688 0.26,0 0.461093,-0.080469 0.621093,-0.2304688 0.16,-0.16 0.228516,-0.3610937 0.228516,-0.6210937 V 2.3203126 c 0,-0.24 -0.08023,-0.4298438 -0.240234,-0.5898438 C 18.209141,1.5704688 18.009766,1.5 17.759766,1.5 Z m -6.919922,2.8691407 c -0.24,0 -0.449141,0.08 -0.619141,0.25 -0.17,0.16 -0.2499998,0.3615625 -0.2499998,0.6015625 0,0.24 0.080235,0.4489062 0.2402348,0.6289062 l 0.658203,0.640625 c 0.25,0.19 0.460625,0.27 0.640625,0.25 0.21,0 0.390781,-0.089766 0.550781,-0.2597656 0.16,-0.17 0.240234,-0.3810937 0.240234,-0.6210938 0,-0.24 -0.09172,-0.4398437 -0.261719,-0.5898437 L 11.449219,4.609375 c -0.18,-0.16 -0.379375,-0.2402343 -0.609375,-0.2402343 z m 13.890625,0 c -0.24,0 -0.430078,0.080234 -0.580078,0.2402343 l -1.470703,1.4296876 c -0.150001,0.1899999 -0.21875,0.3910937 -0.21875,0.6210937 0,0.26 0.06875,0.4591401 0.21875,0.6191401 0.21,0.16 0.421093,0.240235 0.621093,0.240235 0.18,0 0.379844,-0.08023 0.589844,-0.240235 l 1.429687,-1.429687 c 0.160002,-0.18 0.240235,-0.390625 0.240235,-0.640625 0,-0.24 -0.08023,-0.4396093 -0.240235,-0.5996094 -0.16,-0.16 -0.359843,-0.2402343 -0.589843,-0.2402343 z m -6.970703,2.5800781 c -1.145923,0 -2.176855,0.3514586 -3.09961,1.0468746 0.504737,0.288706 0.998601,0.632679 1.455078,1.074219 0.499484,-0.271316 1.044735,-0.419922 1.644532,-0.419922 0.99,0 1.829531,0.339297 2.519531,1.029297 0.69,0.6899996 1.041015,1.5197646 1.041015,2.5097646 0,0.288395 -0.03972,0.5769 -0.113281,0.863282 0.600233,0.52394 0.970428,0.98951 1.253907,1.484375 C 22.810508,13.832334 23,13.050774 23,12.189452 c 0,-0.71 -0.140156,-1.389062 -0.410156,-2.039062 -0.27,-0.6499996 -0.649141,-1.1999216 -1.119141,-1.6699216 -0.47,-0.47 -1.019922,-0.851093 -1.669922,-1.121093 -0.65,-0.28 -1.331015,-0.4101566 -2.041015,-0.4101566 z m 7.830078,4.3906242 c -0.24,0 -0.439375,0.08 -0.609375,0.25 -0.18,0.17 -0.259766,0.369609 -0.259766,0.599609 0,0.23 0.08977,0.420078 0.259766,0.580079 0.16,0.16 0.369375,0.240234 0.609375,0.240234 h 2.041015 c 0.23,0 0.420077,-0.08047 0.580079,-0.230469 0.159998,-0.15 0.228515,-0.349844 0.228515,-0.589844 0,-0.24 -0.07851,-0.439609 -0.228515,-0.599609 -0.150001,-0.16 -0.350079,-0.25 -0.580079,-0.25 z m -1.480469,6.320312 c -0.24,0 -0.439609,0.08023 -0.599609,0.240235 -0.17,0.16 -0.259766,0.359609 -0.259766,0.599609 0,0.24 0.08,0.448907 0.25,0.628906 l 0.650391,0.63086 c 0.15,0.16 0.340078,0.240234 0.580078,0.240234 0.24,0 0.439609,-0.08 0.599609,-0.25 0.16,-0.17 0.240235,-0.371094 0.240234,-0.621094 0,-0.219999 -0.08023,-0.418126 -0.240234,-0.578124 l -0.65039,-0.650391 c -0.160002,-0.16 -0.350313,-0.240234 -0.570313,-0.240235 z"   class="light" /><path   id="path849"   d="m 11.179688,8.0292964 c -1.4100009,0 -2.6504692,0.440547 -3.7304692,1.310547 -1.08,0.8699996 -1.7800781,1.9896086 -2.0800782,3.3496086 -1.12,0.26 -2.0282811,0.830469 -2.7382811,1.730469 -0.71,0.9 -1.0703125,1.920313 -1.0703125,3.070313 0,0.9 0.2201562,1.730234 0.6601562,2.490234 0.44,0.76 1.0388282,1.358828 1.7988281,1.798828 0.76,0.44 1.5807032,0.660156 2.4707032,0.660156 H 17.320312 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 H 17 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 -0.114933,-0.145964 -0.250009,-0.283294 -0.380866,-0.4237906 -0.670052,-0.683211 -1.448719,-1.1192 -2.285156,-1.490234 -0.612657,-0.233797 -1.292159,-0.353516 -2.042968,-0.353516 z m 0.0098,1.679688 c 1.1,0 2.061094,0.3715626 2.871094,1.1015616 0.82,0.73 1.269141,1.628983 1.369141,2.708985 L 15.5,14.099609 c 0.02,0.11 0.09094,0.169921 0.210938,0.169922 h 1.609374 c 0.88,0 1.639297,0.320937 2.279297,0.960937 0.64,0.64 0.960938,1.389531 0.960938,2.269531 0,0.91 -0.321172,1.680313 -0.951172,2.320313 -0.63,0.64 -1.399297,0.958984 -2.279297,0.958984 H 6.4902345 c -0.88,0 -1.6295313,-0.31875 -2.2695314,-0.96875 -0.6299999,-0.65 -0.9511718,-1.420312 -0.9511718,-2.320312 0,-0.84 0.2798438,-1.559922 0.8398438,-2.169922 0.5599999,-0.61 1.2615625,-0.960547 2.1015625,-1.060547 l 0.5,-0.0293 c 0.12,0 0.189453,-0.05969 0.189453,-0.179687 l 0.070312,-0.541016 c 0.1400001,-1.08 0.6101563,-1.988985 1.4101564,-2.708984 0.8,-0.730001 1.738594,-1.0917966 2.808594,-1.0917966 z"   class="cloud" /></g>'

mostlysunny2 = '<g transform="scale(2) translate(0,0)" id="mostlysunny"><path   id="path857"   d="m 15.280407,4.37 c -0.232814,0 -0.430665,0.078884 -0.594497,0.234094 -0.163833,0.1552095 -0.250936,0.3450447 -0.250936,0.5692361 V 7.190918 c 0,0.2328141 0.0871,0.4390864 0.250936,0.6029186 0.163832,0.1638322 0.361683,0.2509354 0.594497,0.2509354 0.241437,0 0.439087,-0.087103 0.602919,-0.2509354 0.163832,-0.1638322 0.250935,-0.3614817 0.250935,-0.6029186 V 5.1733301 c 0,-0.2241914 -0.0871,-0.4140266 -0.250935,-0.5692361 C 15.719494,4.4488846 15.521844,4.37 15.280407,4.37 Z M 8.3990517,7.190918 c -0.2414369,0 -0.4394906,0.076999 -0.5860773,0.2408306 -0.1465867,0.1638322 -0.2155687,0.3614817 -0.2155687,0.6029187 0,0.2414369 0.077403,0.4396926 0.2239893,0.5776565 l 1.3877233,1.4584572 c 0.4052691,0.310419 0.8106727,0.310419 1.2159417,0 0.163832,-0.1638326 0.242515,-0.3631662 0.242515,-0.6046031 0,-0.2328142 -0.07868,-0.4304637 -0.242515,-0.6029187 L 9.0036543,7.4401692 C 8.8225768,7.2763371 8.6146203,7.190918 8.3990517,7.190918 Z m 13.7189243,0.00842 c -0.224191,0 -0.422245,0.08542 -0.586077,0.2492512 l -1.41467,1.4062487 c -0.155209,0.1552094 -0.232409,0.353061 -0.232409,0.594498 0,0.2414369 0.0772,0.4489891 0.232409,0.6214441 0.15521,0.155209 0.353264,0.23241 0.586078,0.23241 0.232814,0 0.432551,-0.0772 0.587761,-0.23241 L 22.74784,8.6123276 c 0.15521,-0.1465867 0.22399,-0.3362197 0.22399,-0.5776566 0,-0.241437 -0.08542,-0.4392886 -0.249251,-0.594498 C 22.558746,7.2849635 22.359413,7.1993422 22.117976,7.1993424 Z m -6.84599,2.5346159 c -0.939878,0 -1.810372,0.2332857 -2.603665,0.6989141 -0.793292,0.465628 -1.424167,1.094819 -1.881172,1.879489 -0.349158,0.606083 -0.55876,1.253027 -0.63997,1.943486 0.572945,-0.236708 1.161003,-0.348037 1.785178,-0.36714 0.172634,-0.577608 0.474188,-1.091387 0.933008,-1.532558 0.663951,-0.638084 1.475366,-0.966691 2.406621,-0.966691 0.957125,0 1.776152,0.344438 2.448726,1.025635 0.672574,0.681197 1.008794,1.518143 1.008794,2.492513 0,0.603592 -0.146384,1.163397 -0.439558,1.680762 -0.148005,0.261187 -0.323015,0.496097 -0.523764,0.70565 0.435092,0.380182 0.793803,0.809743 1.040792,1.340568 0.394585,-0.365512 0.733004,-0.788076 1.000373,-1.278254 0.413892,-0.758802 0.629865,-1.577829 0.629865,-2.448726 0,-0.698442 -0.138368,-1.371084 -0.414296,-2.009168 C 19.74699,12.260356 19.376818,11.708365 18.919813,11.25136 18.462807,10.794354 17.910817,10.424182 17.272734,10.148254 16.63465,9.8723264 15.97043,9.7339583 15.271986,9.7339583 Z M 5.5882384,14.062169 c -0.2500597,0 -0.4576119,0.07868 -0.6214441,0.242515 -0.1638322,0.146586 -0.2408306,0.352656 -0.2408305,0.61134 0,0.232813 0.076999,0.422446 0.2408305,0.577655 0.1638322,0.15521 0.3713844,0.22399 0.6214441,0.22399 H 7.045011 c 0.2328142,0 0.4323499,-0.0772 0.5961821,-0.23241 0.1638321,-0.155209 0.2492512,-0.345045 0.2492512,-0.569235 0,-0.25006 -0.076999,-0.456131 -0.2408305,-0.61134 -0.1638323,-0.15521 -0.363368,-0.242515 -0.5961822,-0.242515 z m 17.3920126,0 c -0.25006,0 -0.457613,0.07868 -0.621445,0.242515 -0.163831,0.146586 -0.249251,0.352656 -0.249251,0.61134 0,0.232813 0.077,0.422446 0.240831,0.577655 0.163832,0.15521 0.371384,0.22399 0.621444,0.22399 h 1.456773 c 0.232814,0 0.432349,-0.0772 0.596181,-0.23241 0.163833,-0.155209 0.249252,-0.345045 0.249252,-0.569235 0,-0.25006 -0.077,-0.456131 -0.240831,-0.61134 -0.163832,-0.15521 -0.363367,-0.242515 -0.596181,-0.242515 z m -2.276944,5.441425 c -0.241437,0 -0.430868,0.0772 -0.586078,0.232409 -0.155209,0.15521 -0.232409,0.353264 -0.232409,0.586078 0,0.232814 0.0772,0.432148 0.232409,0.604603 l 1.41467,1.396143 c 0.362155,0.362156 0.767559,0.362156 1.215941,0 0.15521,-0.146586 0.22399,-0.336017 0.22399,-0.586076 0,-0.232815 -0.07741,-0.422448 -0.22399,-0.577657 l -1.456772,-1.439932 c -0.15521,-0.146586 -0.354947,-0.215568 -0.587761,-0.215568 z"   class="light" /><path   id="path853"   d="m 12.008142,14.744242 c -0.79944,0.01243 -1.439552,0.170503 -2.1270558,0.613023 -0.7294244,0.483304 -1.2324277,1.140419 -1.4820345,1.990642 -0.6553288,0.206946 -1.1731651,0.568697 -1.5611887,1.094684 -0.3880236,0.525988 -0.5860773,1.129446 -0.5860773,1.80202 0,0.836406 0.3022677,1.561997 0.9144827,2.174212 0.612215,0.612215 1.3277008,0.912798 2.1641072,0.912798 H 15.24504 c 0.836407,0 1.552297,-0.300785 2.147267,-0.904377 0.594969,-0.603593 0.897641,-1.328981 0.897641,-2.182633 0,-0.315549 -0.04772,-0.583211 -0.117889,-0.828592 -0.218757,-0.7288 -0.589271,-1.203309 -1.202469,-1.667289 -0.478638,-0.355431 -1.018572,-0.538921 -1.620133,-0.538921 -0.25006,-0.758802 -0.699318,-1.353637 -1.328778,-1.80202 -0.595622,-0.424278 -1.269809,-0.640738 -2.012537,-0.663547 z M 11.875096,16.3829 c 0.500119,0 0.939678,0.163899 1.301833,0.500188 0.370778,0.336287 0.586347,0.749707 0.646706,1.241203 l 0.06905,0.560815 c 0.05174,0.129341 0.120919,0.197044 0.207148,0.197044 h 1.136788 c 0.370778,0 0.690763,0.13857 0.966691,0.405875 0.275928,0.267305 0.404191,0.585606 0.404191,0.965007 0,0.388024 -0.136886,0.716024 -0.404191,0.991952 -0.267305,0.275928 -0.595913,0.414296 -0.966691,0.414296 H 9.3303756 c -0.3880236,0 -0.7147448,-0.138368 -0.9734272,-0.414296 -0.2673051,-0.275928 -0.3974548,-0.612349 -0.3974547,-1.000373 0,-0.362155 0.1124325,-0.672641 0.3452467,-0.931324 0.2328141,-0.258682 0.5255833,-0.405067 0.8791159,-0.439558 l 0.5355534,-0.06905 c 0.1120957,0 0.1717813,-0.06771 0.1717813,-0.197043 l 0.07747,-0.483345 c 0.060359,-0.50012 0.267709,-0.913541 0.629865,-1.241204 0.362155,-0.336288 0.785073,-0.500188 1.27657,-0.500188 z"   class="cloud" /></g>'

rain2 = '<g transform="scale(2) translate(0,0)" id="rain"><path   id="path840"   d="m 19.164922,17.589298 c -0.16,0 -0.308985,0.05039 -0.458984,0.150391 -0.140001,0.1 -0.240782,0.249453 -0.300782,0.439453 l -1.630859,5.771483 c -0.03,0.120001 -0.03906,0.188516 -0.03906,0.228516 0,0.160001 0.05063,0.320704 0.140625,0.470703 0.11,0.160001 0.258985,0.260312 0.458985,0.320313 l 0.240234,0.05078 c 0.19,0 0.359766,-0.06188 0.509766,-0.171877 0.15,-0.109998 0.239297,-0.268983 0.279297,-0.458984 L 19.995,18.65961 c 0,-0.02 0.0095,-0.05914 0.01953,-0.11914 0.01,-0.06 0.01953,-0.110625 0.01953,-0.140625 0,-0.16 -0.04844,-0.320703 -0.148437,-0.470703 -0.1,-0.15 -0.250937,-0.248594 -0.460937,-0.308594 -0.09,-0.02 -0.179766,-0.03125 -0.259766,-0.03125 z m -6.730469,0.0098 c -0.15,10e-7 -0.308984,0.05039 -0.458984,0.150391 -0.15,0.1 -0.260313,0.251405 -0.320313,0.441406 l -1.630859,5.76953 c -0.03,0.09 -0.039063,0.159219 -0.039063,0.199219 0,0.17 0.050157,0.329999 0.160157,0.5 0.11,0.159999 0.270234,0.270077 0.490234,0.330078 0.01,0 0.03961,0.01125 0.09961,0.03125 0.04,0.01 0.06937,0.01953 0.109375,0.01953 0.42,0 0.700313,-0.210625 0.820313,-0.640625 l 1.630859,-5.730469 c 0.07,-0.25 0.03992,-0.469922 -0.08008,-0.669922 -0.12,-0.199999 -0.301015,-0.329141 -0.541015,-0.36914 -0.09,-0.02 -0.170235,-0.03125 -0.240235,-0.03125 z m 3.400391,0.01172 c -0.17,0 -0.330235,0.04844 -0.490235,0.148438 -0.16,0.1 -0.258828,0.251405 -0.298828,0.441406 l -2.441406,8.769529 c -0.07,0.260001 -0.04945,0.470391 0.06055,0.650391 0.15,0.21 0.319531,0.338672 0.519531,0.388672 0.07,0.03 0.16,0.05078 0.25,0.05078 0.19,0 0.349766,-0.05969 0.509766,-0.179687 0.16,-0.120001 0.251015,-0.259687 0.291015,-0.429688 l 2.429688,-8.781249 c 0.06,-0.230001 0.03969,-0.438673 -0.07031,-0.638672 -0.11,-0.2 -0.270234,-0.330626 -0.490234,-0.390625 -0.09,-0.02 -0.179531,-0.0293 -0.269531,-0.0293 z"   class="precip" /><path   d="m 4.635,17.470001 c 0,-1.15 0.36,-2.17 1.08,-3.07 0.72,-0.9 1.63,-1.470001 2.73,-1.730001 0.31,-1.36 1.02,-2.48 2.11,-3.36 1.09,-0.88 2.34,-1.31 3.75,-1.31 1.38,0 2.6,0.43 3.68,1.28 1.08,0.85 1.78,1.95 2.1,3.29 h 0.32 c 0.89,0 1.72,0.22 2.48,0.65 0.76,0.43 1.37,1.03 1.81,1.78 0.44,0.75 0.67,1.579999 0.67,2.469999 0,0.88 -0.21,1.69 -0.63,2.44 -0.42,0.75 -1,1.350001 -1.73,1.800001 -0.73,0.449999 -1.53,0.690001 -2.4,0.71 -0.13,0 -0.2,-0.06 -0.2,-0.17 v -1.33 c 0,-0.12 0.07,-0.18 0.2,-0.18 0.85,-0.04 1.58,-0.379999 2.18,-1.019999 0.6,-0.64 0.9,-1.39 0.9,-2.26 0,-0.87 -0.33,-1.62 -0.98,-2.26 -0.65,-0.64 -1.42,-0.96 -2.31,-0.96 h -1.61 c -0.12,0 -0.18,-0.06 -0.18,-0.17 l -0.08,-0.58 C 18.415,12.41 17.945,11.5 17.135,10.78 c -0.82,-0.73 -1.76,-1.09 -2.85,-1.09 -1.09,0 -2.05,0.36 -2.85,1.09 -0.81,0.73 -1.26,1.63 -1.36,2.710001 l -0.07,0.53 c 0,0.12 -0.07,0.19 -0.2,0.19 l -0.53,0.03 c -0.83,0.1 -1.53,0.46 -2.1,1.07 -0.57,0.61 -0.85,1.33 -0.85,2.159999 0,0.870001 0.3,1.62 0.9,2.259999 0.6,0.64 1.33,0.980001 2.18,1.020001 0.11,0 0.17,0.06 0.17,0.179999 v 1.33 c 0,0.11 -0.06,0.17 -0.17,0.17 -1.34,-0.06 -2.47,-0.57 -3.4,-1.53 -0.93,-0.96 -1.37,-2.099999 -1.37,-3.429998 z"   id="path2"   class="cloud" /></g>'

sleet2 = '<g transform="scale(2) translate(0,0)" id="sleet"><path   id="path848"   d="m 11.650391,20.929375 c -0.24,0 -0.439844,0.07047 -0.589844,0.230468 -0.15,0.16 -0.230469,0.349845 -0.230469,0.589844 0,0.22 0.09,0.410313 0.25,0.570313 0.15,0.16 0.340313,0.240234 0.570313,0.240234 0.24,0 0.439843,-0.07047 0.589843,-0.230467 0.15,-0.16 0.230469,-0.350078 0.230469,-0.58008 0,-0.239999 -0.07047,-0.439844 -0.230469,-0.589842 -0.16,-0.15 -0.349843,-0.230469 -0.589843,-0.23047 z m 6.548828,0.0098 c -0.24,0 -0.429844,0.07047 -0.589844,0.230468 -0.15,0.16 -0.228516,0.349844 -0.228516,0.589844 0,0.23 0.09,0.420313 0.25,0.570313 0.15,0.16 0.340079,0.240234 0.580079,0.240234 0.24,0 0.428125,-0.08047 0.578124,-0.230469 0.15,-0.15 0.230469,-0.350078 0.230469,-0.580078 0,-0.24 -0.07047,-0.429844 -0.230469,-0.589844 -0.16,-0.15 -0.349843,-0.230468 -0.589843,-0.230468 z m -4.119141,3.080078 c -0.24,0 -0.429844,0.07047 -0.589844,0.230469 -0.15,0.149999 -0.230468,0.350078 -0.230468,0.580078 0,0.23 0.08023,0.420078 0.240234,0.580078 0.16,0.16 0.350078,0.240235 0.580078,0.240235 0.24,0 0.429844,-0.07047 0.589844,-0.230469 0.15,-0.16 0.230469,-0.349843 0.230469,-0.589843 0,-0.23 -0.07047,-0.420078 -0.230469,-0.580078 -0.16,-0.150001 -0.349844,-0.230469 -0.589844,-0.23047 z"   class="frozenPrecip" /><path   id="path846"   d="m 14.867188,20.749687 c -0.10625,0.01375 -0.211407,0.04937 -0.316407,0.109374 -0.2,0.12 -0.340156,0.30125 -0.410156,0.53125 l -0.230469,0.900391 c -0.02,0.08 -0.0293,0.169531 -0.0293,0.269531 -0.01,0.15 0.02844,0.310703 0.148438,0.470704 0.1,0.16 0.251172,0.258829 0.451172,0.298828 0.23,0.06 0.448672,0.03945 0.638672,-0.06055 0.19,-0.100001 0.330156,-0.278594 0.410156,-0.558594 l 0.259765,-0.900391 c 0.07,-0.219999 0.05164,-0.430859 -0.06836,-0.630859 -0.12,-0.2 -0.29125,-0.328438 -0.53125,-0.398438 -0.11,-0.035 -0.216016,-0.045 -0.322265,-0.03125 z m -3.91211,2.462891 c -0.1125,0.0125 -0.219219,0.04742 -0.324219,0.107422 -0.21,0.12 -0.340156,0.289297 -0.410156,0.529296 l -0.08984,0.589844 c 0,0.03 -0.01148,0.07109 -0.02148,0.121093 -0.01,0.06 -0.01953,0.09891 -0.01953,0.128907 0,0.170001 0.05016,0.330468 0.160156,0.480468 0.1,0.16 0.250938,0.270078 0.460938,0.330079 0.04,-1e-6 0.07867,0.0095 0.138671,0.01953 0.06,0.01 0.110625,0.02148 0.140625,0.02148 0.41,0 0.659766,-0.220156 0.759766,-0.660156 l 0.140625,-0.599609 c 0.06,-0.21 0.03969,-0.42086 -0.07031,-0.63086 -0.119999,-0.2 -0.279765,-0.340156 -0.509765,-0.410156 -0.125,-0.03 -0.242969,-0.03984 -0.355469,-0.02734 z m 6.529297,0.01953 c -0.1125,0.0125 -0.219219,0.04742 -0.324219,0.107421 -0.21,0.120001 -0.340156,0.291251 -0.410156,0.53125 l -0.08984,0.589844 c 0,0.02 2.35e-4,0.05937 -0.0098,0.109375 -0.01,0.05 -0.0098,0.100859 -0.0098,0.13086 0,0.17 0.05844,0.328282 0.148437,0.488282 0.1,0.16 0.251172,0.270079 0.451172,0.330078 0.03,0 0.08062,0.01148 0.140625,0.02148 0.06,0.01 0.108672,0.01953 0.138672,0.01953 0.41,0 0.659766,-0.220155 0.759766,-0.660156 l 0.140625,-0.599609 c 0.07,-0.210001 0.04969,-0.420861 -0.07031,-0.63086 -0.11,-0.199999 -0.279765,-0.340156 -0.509765,-0.410156 -0.125,-0.03 -0.242969,-0.03984 -0.355469,-0.02734 z m -4.119141,3.072265 c -0.105,0.01125 -0.209453,0.04547 -0.314453,0.105469 -0.2,0.11 -0.340156,0.279765 -0.410156,0.509766 l -0.130859,0.589843 c -0.03,0.120001 -0.03906,0.190469 -0.03906,0.230469 0,0.170001 0.06016,0.330234 0.160156,0.490234 0.11,0.160001 0.268282,0.270079 0.488282,0.330079 0.08,0.02 0.170234,0.0293 0.240234,0.0293 0.43,0 0.700781,-0.199375 0.800781,-0.609375 l 0.128906,-0.589843 c 0.07,-0.25 0.04188,-0.479687 -0.07812,-0.679688 -0.12,-0.2 -0.30125,-0.331094 -0.53125,-0.371094 -0.105001,-0.035 -0.209454,-0.04641 -0.314454,-0.03516 z"   class="precip" /><path   d="m 4.59,17.52 c 0,-1.16 0.36,-2.19 1.08,-3.09 C 6.39,13.529999 7.31,12.94 8.41,12.69 8.72,11.32 9.42,10.2 10.51,9.32 11.6,8.44 12.86,8 14.28,8 c 0.81,0 1.55,0.13 2.2,0.4 0,0.01 0,0.01 0.01,0.02 0.84,0.32 1.58,0.84 2.21,1.55 h 0.03 c 0.68,0.73 1.13,1.6 1.37,2.62 h 0.31 c 1.08,0 2.02,0.29 2.83,0.86 v -0.01 c 0.53,0.36 0.98,0.800001 1.34,1.330001 0.36,0.529999 0.6,1.11 0.73,1.739999 0.04,0.210001 0.06,0.380001 0.08,0.520002 v 0.06 c 0,0.01 0,0.06 0.01,0.170001 0.01,0.11 0.01,0.189999 0.01,0.239998 v 0.03 c 0,0.879998 -0.21,1.699998 -0.64,2.449998 -0.42,0.75 -1,1.36 -1.74,1.81 -0.73,0.45 -1.54,0.69 -2.42,0.72 -0.13,0 -0.2,-0.06 -0.2,-0.17 v -1.34 c 0,-0.13 0.07,-0.19 0.2,-0.19 0.86,-0.04 1.58,-0.38 2.18,-1.02 0.6,-0.64 0.9,-1.39 0.9,-2.26 0,-0.89 -0.32,-1.65 -0.97,-2.29 -0.64,-0.64 -1.41,-0.96 -2.31,-0.96 H 18.8 c -0.12,0 -0.18,-0.06 -0.18,-0.17 l -0.08,-0.59 C 18.44,12.52 18.02,11.66 17.27,10.93 17.26,10.92 17.26,10.91 17.25,10.9 17.24,10.89 17.23,10.88 17.23,10.87 17.22,10.86 17.21,10.85 17.19,10.85 17.19,10.83 17.18,10.82 17.17,10.82 16.44,10.16 15.59,9.78 14.61,9.7 14.54,9.69 14.43,9.69 14.27,9.69 c -1.1,0 -2.05,0.37 -2.86,1.1 -0.81,0.73 -1.27,1.64 -1.37,2.719999 l -0.08,0.59 c -0.03,0.09 -0.11,0.14 -0.22,0.14 l -0.49,0.03 c -0.84,0.100001 -1.55,0.46 -2.11,1.07 -0.56,0.610001 -0.84,1.34 -0.84,2.18 v 0.04 h 0.03 c 0.01,0.48 0.11,0.93 0.3,1.35 0.2,0.43 0.46,0.79 0.8,1.09 0.21,0.18 0.45,0.34 0.74,0.48 v 0.01 c 0.4,0.190001 0.8,0.3 1.21,0.32 0.11,0 0.17,0.06 0.17,0.18 v 1.34 C 9.55,22.439999 9.49,22.5 9.38,22.5 8.86,22.47 8.37,22.369999 7.9,22.199999 v 0.01 c -0.83,-0.29 -1.54,-0.77 -2.11,-1.43 -0.57,-0.66 -0.95,-1.44 -1.11,-2.31 v -0.03 c -0.01,-0.01 -0.01,-0.02 -0.01,-0.04 -0.06,-0.26 -0.08,-0.56 -0.08,-0.879999 z"   id="path2"   class="cloud" /></g>'

snow2 = '<g transform="scale(2) translate(0,0)"><path   d="m 7.465,15.015 c 0,-0.19 0.07,-0.36 0.2,-0.5 0.13,-0.14 0.29,-0.21 0.48,-0.21 0.19,0 0.36,0.07 0.49,0.21 0.13,0.14 0.2,0.3 0.2,0.5 0,0.19 -0.07,0.35 -0.2,0.48 -0.13,0.13 -0.3,0.2 -0.48,0.2 -0.18,0 -0.35,-0.07 -0.48,-0.2 -0.15,-0.14 -0.21,-0.3 -0.21,-0.48 z m 1.98,0 c 0,-0.19 0.07,-0.36 0.2,-0.5 0.13,-0.14 0.29,-0.21 0.48,-0.21 h 3.23 l -2.28,-2.28 c -0.14,-0.12 -0.21,-0.28 -0.21,-0.47 0,-0.19 0.07,-0.35 0.21,-0.49 0.14,-0.14 0.3,-0.21 0.49,-0.21 0.19,0 0.35,0.07 0.49,0.21 l 2.27,2.27 v -3.21 c 0,-0.19 0.07,-0.36 0.21,-0.5 0.14,-0.14 0.3,-0.21 0.5,-0.21 0.19,0 0.35,0.07 0.48,0.21 0.13,0.14 0.2,0.3 0.2,0.5 v 3.23 l 2.29,-2.3 c 0.14,-0.14 0.3,-0.21 0.48,-0.21 0.18,0 0.35,0.07 0.49,0.21 0.12,0.14 0.18,0.3 0.18,0.49 0,0.19 -0.06,0.35 -0.18,0.47 l -2.28,2.28 h 3.23 c 0.18,0 0.34,0.07 0.47,0.21 0.13,0.14 0.2,0.3 0.2,0.5 0,0.18 -0.07,0.34 -0.2,0.47 -0.13,0.13 -0.29,0.2 -0.47,0.2 h -3.23 l 2.29,2.29 c 0.12,0.12 0.18,0.28 0.18,0.47 0,0.19 -0.06,0.35 -0.18,0.49 -0.14,0.14 -0.31,0.21 -0.49,0.21 -0.18,0 -0.35,-0.07 -0.48,-0.21 l -2.29,-2.3 v 3.24 c 0,0.19 -0.07,0.36 -0.2,0.49 -0.13,0.13 -0.29,0.2 -0.48,0.2 -0.19,0 -0.36,-0.07 -0.5,-0.2 -0.14,-0.13 -0.21,-0.3 -0.21,-0.49 v -3.22 l -2.27,2.27 c -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.49,-0.21 -0.14,-0.14 -0.21,-0.3 -0.21,-0.49 0,-0.19 0.07,-0.34 0.21,-0.47 l 2.3,-2.29 h -3.24 c -0.19,0 -0.35,-0.07 -0.48,-0.2 -0.16,-0.11 -0.22,-0.27 -0.22,-0.45 z m 0.01,4.84 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.48 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.13 -0.21,-0.29 -0.21,-0.48 z m 0,-9.71 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.49 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.14 -0.21,-0.31 -0.21,-0.49 z m 4.85,11.71 c 0,-0.18 0.07,-0.34 0.21,-0.47 0.14,-0.13 0.3,-0.2 0.5,-0.2 0.19,0 0.35,0.07 0.48,0.2 0.13,0.13 0.2,0.29 0.2,0.47 0,0.19 -0.07,0.36 -0.2,0.49 -0.13,0.13 -0.29,0.2 -0.48,0.2 -0.19,0 -0.36,-0.07 -0.5,-0.2 -0.14,-0.13 -0.21,-0.29 -0.21,-0.49 z m 0,-13.71 c 0,-0.19 0.07,-0.36 0.21,-0.49 0.14,-0.13 0.3,-0.2 0.5,-0.2 0.19,0 0.35,0.07 0.48,0.2 0.13,0.13 0.2,0.3 0.2,0.49 0,0.18 -0.07,0.34 -0.2,0.47 -0.13,0.13 -0.29,0.2 -0.48,0.2 -0.19,0 -0.36,-0.07 -0.5,-0.2 -0.14,-0.13 -0.21,-0.29 -0.21,-0.47 z m 4.87,11.71 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.48 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.13 -0.21,-0.29 -0.21,-0.48 z m 0,-9.71 c 0,-0.18 0.07,-0.35 0.21,-0.48 0.12,-0.14 0.28,-0.21 0.47,-0.21 0.19,0 0.35,0.07 0.49,0.21 0.14,0.14 0.21,0.3 0.21,0.48 0,0.18 -0.07,0.35 -0.21,0.49 -0.14,0.14 -0.3,0.21 -0.49,0.21 -0.19,0 -0.35,-0.07 -0.47,-0.21 -0.14,-0.14 -0.21,-0.31 -0.21,-0.49 z m 2,4.87 c 0,-0.19 0.07,-0.36 0.2,-0.5 0.13,-0.14 0.3,-0.21 0.49,-0.21 0.18,0 0.34,0.07 0.47,0.21 0.13,0.14 0.2,0.3 0.2,0.5 0,0.18 -0.07,0.34 -0.2,0.47 -0.13,0.13 -0.29,0.2 -0.47,0.2 -0.19,0 -0.36,-0.07 -0.49,-0.2 -0.13,-0.13 -0.2,-0.29 -0.2,-0.47 z"   id="path2"   class="frozenPrecip" /></g>'

sunny2 = '<g transform="scale(2) translate(0,0)" id="sunny"><path   id="path2"   d="m 15.010742,4.3700995 c -0.24,0 -0.439375,0.089766 -0.609375,0.2597656 -0.17,0.17 -0.25,0.3696094 -0.25,0.5996094 v 2.0410156 c 0,0.23 0.09977,0.4300781 0.259766,0.5800782 0.16,0.1499999 0.369609,0.2304687 0.599609,0.2304687 0.23,0 0.429609,-0.070469 0.599609,-0.2304687 0.17,-0.16 0.25,-0.3500782 0.25,-0.5800782 V 5.2197089 c 0,-0.23 -0.08,-0.4296094 -0.25,-0.5996094 -0.17,-0.17 -0.359609,-0.25 -0.599609,-0.25 z M 8.1103516,7.2197089 c -0.23,0 -0.4386719,0.08 -0.6386719,0.25 -0.15,0.18 -0.2304687,0.3813281 -0.2304687,0.6113281 0,0.24 0.080234,0.449375 0.2402343,0.609375 L 8.9404297,10.1201 c 0.15,0.16 0.3498437,0.240234 0.5898437,0.240234 0.24,0 0.4396094,-0.08023 0.5996096,-0.240234 0.16,-0.1600005 0.240234,-0.3596099 0.240234,-0.5996099 0,-0.24 -0.08023,-0.4398437 -0.240234,-0.5898437 L 8.7001953,7.4599433 C 8.5301953,7.2999432 8.3303516,7.2197089 8.1103516,7.2197089 Z m 13.8007814,0.00977 c -0.22,0 -0.419844,0.080234 -0.589844,0.2402344 l -1.419922,1.4707031 c -0.15,0.14 -0.230469,0.3398437 -0.230469,0.5898437 0,0.24 0.08047,0.4396094 0.230469,0.5996099 0.15,0.16 0.328594,0.240234 0.558594,0.240234 0.22,0 0.421562,-0.08023 0.601562,-0.240234 l 1.458985,-1.429688 c 0.16,-0.16 0.240234,-0.3691406 0.240234,-0.6191406 0,-0.23 -0.08,-0.4315625 -0.25,-0.6015625 -0.16,-0.17 -0.359609,-0.25 -0.599609,-0.25 z m -6.910157,2.5507812 c -0.93,0 -1.789609,0.2292189 -2.599609,0.6992189 -0.81,0.47 -1.440156,1.110156 -1.910156,1.910156 -0.47,0.8 -0.7011719,1.66961 -0.7011719,2.59961 0,0.94 0.2414059,1.811093 0.6914059,2.621093 0.47,0.8 1.098438,1.430391 1.898438,1.900391 0.8,0.47 1.671328,0.699219 2.611328,0.699219 0.94,0 1.809375,-0.229219 2.609375,-0.699219 0.8,-0.47 1.43039,-1.100391 1.90039,-1.900391 0.47,-0.8 0.699219,-1.669375 0.699219,-2.609375 0,-0.7 -0.140156,-1.381484 -0.410156,-2.021484 -0.27,-0.64 -0.639375,-1.190156 -1.109375,-1.660156 -0.46,-0.47 -1.020156,-0.839141 -1.660156,-1.119141 -0.65,-0.28 -1.319532,-0.4199219 -2.019532,-0.4199219 z m 0.0098,1.7207029 c 0.98,0 1.81,0.339532 2.5,1.019532 0.69,0.69 1.039062,1.50875 1.039062,2.46875 0,0.98 -0.349062,1.81 -1.039062,2.5 -0.69,0.69 -1.52,1.041015 -2.5,1.041015 -0.98,0 -1.810234,-0.351015 -2.490234,-1.041015 -0.69,-0.69 -1.029297,-1.52 -1.029297,-2.5 0,-0.96 0.339062,-1.77875 1.039062,-2.46875 0.68,-0.68 1.510469,-1.019532 2.480469,-1.019532 z M 5.2314793,14.12987 c -0.22,0 -0.4315625,0.08023 -0.6015625,0.240234 -0.17,0.17 -0.25,0.379141 -0.25,0.619141 0,0.24 0.091719,0.441328 0.2617188,0.611328 0.17,0.17 0.3696093,0.25 0.5996094,0.25 h 2.0390624 c 0.23,0 0.4300782,-0.08 0.5800782,-0.25 0.15,-0.17 0.2207031,-0.371328 0.2207031,-0.611328 0,-0.24 -0.080469,-0.439375 -0.2304687,-0.609375 -0.16,-0.17 -0.3500782,-0.25 -0.5800782,-0.25 z m 17.5097657,0 c -0.22,0 -0.410313,0.08023 -0.570313,0.240234 -0.16,0.18 -0.240234,0.379141 -0.240234,0.619141 0,0.24 0.08047,0.431562 0.230469,0.601562 0.15,0.17 0.350078,0.25 0.580078,0.25 h 2.019531 c 0.23,0 0.429609,-0.08 0.599609,-0.25 0.17,-0.17 0.259766,-0.371562 0.259766,-0.601562 0,-0.23 -0.08977,-0.42961 -0.259766,-0.59961 -0.17,-0.17 -0.369609,-0.259765 -0.599609,-0.259765 z M 9.5302734,19.649397 c -0.24,0 -0.4398437,0.07047 -0.5898437,0.230468 l -1.46875,1.429688 c -0.15,0.18 -0.2304687,0.381328 -0.2304687,0.611328 -1e-7,0.23 0.080234,0.429844 0.2402343,0.589844 0.41,0.32 0.8185156,0.32 1.2285157,0 l 1.419922,-1.419922 c 0.16,-0.18 0.240234,-0.400626 0.240234,-0.640625 0,-0.23 -0.08023,-0.420312 -0.240234,-0.570313 C 9.9698828,19.729866 9.7702735,19.649397 9.5302734,19.649397 Z m 10.9296876,0.0098 c -0.22,10e-7 -0.408594,0.07047 -0.558594,0.230469 -0.15,0.14 -0.230469,0.330547 -0.230469,0.560547 0,0.26 0.08047,0.470391 0.230469,0.650391 l 1.419922,1.419922 c 0.4,0.31 0.799219,0.31 1.199219,0 0.16,-0.16 0.240234,-0.359844 0.240234,-0.589844 0,-0.23 -0.08023,-0.441328 -0.240234,-0.611328 l -1.458985,-1.429688 c -0.16,-0.15 -0.361562,-0.230469 -0.601562,-0.230469 z m -5.458985,2.271485 c -0.23,0 -0.429609,0.08023 -0.599609,0.240234 -0.17,0.16 -0.25,0.35961 -0.25,0.59961 v 1.990234 c 0,0.24 0.08,0.449141 0.25,0.619141 0.16,0.17 0.369609,0.25 0.599609,0.25 0.23,0 0.42961,-0.08 0.59961,-0.25 0.17,-0.17 0.25,-0.379141 0.25,-0.619141 v -1.990234 c 0,-0.24 -0.08024,-0.43961 -0.240235,-0.59961 -0.16,-0.16 -0.369375,-0.240234 -0.609375,-0.240234 z"   class="light" /></g>'

tstorms2 = '<g transform="scale(2) translate(0,0)" id="tstorms"><path   d="m 10.108516,17.621093 c -0.09,0 -0.1687504,0.05063 -0.2187504,0.140626 l -0.4648438,1.220703 0.00977,0.0039 -0.5253907,1.357422 -0.109375,0.287109 c -6.073e-4,-1.54e-4 -0.00135,1.54e-4 -0.00195,0 l -1.21875,3.146484 -0.00195,-0.002 -0.048828,0.125 c -0.03,0.14 0.020625,0.220703 0.140625,0.220703 h 2.1308593 l -1.0410156,3.779297 h 0.2792969 l 3.9707043,-5.21875 c 0.04,-0.04 0.03953,-0.09062 0.01953,-0.140625 -0.02,-0.05 -0.06867,-0.07031 -0.138672,-0.07031 h -2.179687 l 2.478515,-4.640625 c 0.06,-0.14 0.02133,-0.208985 -0.138672,-0.208985 z"   id="path845"   class="light" /><path   d="m 14.278438,8 c -1.41,0 -2.669766,0.440547 -3.759766,1.310547 -1.0900001,0.87 -1.7896095,1.989375 -2.0996095,3.359375 -1.1,0.26 -2.0104688,0.830468 -2.7304688,1.730468 -0.72,0.9 -1.0585937,1.910547 -1.0585937,3.060547 0,1.11 0.3282812,2.100703 0.9882812,2.970703 0.4540835,0.598565 1.0053645,1.05874 1.6425782,1.398438 L 7.8780468,20.234375 C 7.5620131,20.035629 7.2772245,19.78301 7.0284375,19.470703 c -0.47,-0.59 -0.6992188,-1.259766 -0.6992188,-2.009766 0,-0.83 0.2798438,-1.550156 0.8398438,-2.160156 0.56,-0.61 1.2596094,-0.960547 2.0996093,-1.060547 l 0.5195313,-0.07031 c 0.13,0 0.2011719,-0.05992 0.2011719,-0.169922 l 0.070313,-0.519531 c 0.1,-1.080001 0.549375,-1.988751 1.359375,-2.71875 0.81,-0.73 1.759609,-1.101563 2.849609,-1.101563 1.09,0 2.03961,0.371562 2.84961,1.101563 0.82,0.73 1.28039,1.638749 1.40039,2.71875 l 0.06055,0.580078 c 0,0.12 0.05945,0.179687 0.189453,0.179687 h 1.611328 c 0.91,0 1.67836,0.321172 2.31836,0.951172 0.64,0.63 0.960937,1.389297 0.960937,2.279297 0,0.85 -0.300625,1.590937 -0.890625,2.210937 -0.59,0.62 -1.319453,0.959297 -2.189453,1.029297 -0.13,0 -0.199219,0.05945 -0.199219,0.189453 v 1.371094 c 0,0.11 0.06922,0.169922 0.199219,0.169922 0.65,-0.02 1.269375,-0.171406 1.859375,-0.441406 0.59,-0.27 1.101484,-0.62836 1.521485,-1.06836 0.42,-0.44 0.759765,-0.960312 1.009765,-1.570312 0.25,-0.6 0.378906,-1.23086 0.378906,-1.880859 0,-0.9 -0.219921,-1.730235 -0.669921,-2.490235 -0.45,-0.76 -1.050547,-1.358828 -1.810547,-1.798828 -0.76,-0.44 -1.588516,-0.660156 -2.478516,-0.660156 h -0.320313 c -0.329999,-1.33 -1.029375,-2.419766 -2.109374,-3.259766 -1.080001,-0.84 -2.301641,-1.271484 -3.681641,-1.271484 z"   id="path2-9"   class="cloud" /><path   id="path854"   d="m 15.830078,17.609531 c -0.16,0 -0.320703,0.05039 -0.470703,0.150391 -0.15,0.1 -0.258594,0.249219 -0.308594,0.449219 l -2.261719,8.720703 c -0.01,0.1 -0.01953,0.189297 -0.01953,0.279297 0,0.39 0.190078,0.651484 0.580078,0.771484 0.01,0 0.05133,-2.34e-4 0.111329,0.0098 0.06,0.01 0.108671,0.0098 0.138671,0.0098 0.17,0 0.330235,-0.05039 0.490235,-0.15039 0.16,-0.1 0.270312,-0.260469 0.320312,-0.480469 l 2.25,-8.689453 c 0.06,-0.24 0.03969,-0.450391 -0.07031,-0.650391 -0.11,-0.19 -0.27,-0.318672 -0.5,-0.388672 -0.17,-0.02 -0.259766,-0.03125 -0.259766,-0.03125 z m 3.359375,0.01953 c -0.17,0 -0.32875,0.05039 -0.46875,0.150391 -0.14,0.1 -0.240781,0.251172 -0.300781,0.451172 l -1.458984,5.699219 c 0,0.02 -0.0017,0.04938 -0.01172,0.109375 -0.02,0.05 -0.01953,0.08133 -0.01953,0.111328 0,0.13 0.02961,0.258906 0.09961,0.378906 0.14,0.22 0.309766,0.371406 0.509765,0.441406 0.11,0.03 0.210782,0.04883 0.300782,0.04883 0.09,0 0.200312,-0.02008 0.320312,-0.08008 0.21,-0.09 0.349922,-0.280312 0.419922,-0.570312 l 1.439453,-5.669922 c 0.03,-0.14 0.05078,-0.229531 0.05078,-0.269531 0,-0.15 -0.05016,-0.299219 -0.160156,-0.449219 -0.11,-0.15 -0.260937,-0.260313 -0.460937,-0.320313 -0.17,-0.02 -0.259766,-0.03125 -0.259766,-0.03125 z"   class="precip" /></g>'

partlycloudy2 = '<g transform="scale(2) translate(0,0)" id="partlycloudy"><path   id="path857"   d="m 15.280407,4.37 c -0.232814,0 -0.430665,0.078884 -0.594497,0.234094 -0.163833,0.1552095 -0.250936,0.3450447 -0.250936,0.5692361 V 7.190918 c 0,0.2328141 0.0871,0.4390864 0.250936,0.6029186 0.163832,0.1638322 0.361683,0.2509354 0.594497,0.2509354 0.241437,0 0.439087,-0.087103 0.602919,-0.2509354 0.163832,-0.1638322 0.250935,-0.3614817 0.250935,-0.6029186 V 5.1733301 c 0,-0.2241914 -0.0871,-0.4140266 -0.250935,-0.5692361 C 15.719494,4.4488846 15.521844,4.37 15.280407,4.37 Z M 8.3990518,7.190918 c -0.2414369,0 -0.4394906,0.076999 -0.5860773,0.2408306 -0.1465867,0.1638322 -0.2155687,0.3614817 -0.2155687,0.6029187 0,0.2414369 0.077403,0.4396926 0.2239893,0.5776565 l 1.3877233,1.4584572 c 0.4052691,0.310419 0.8106726,0.310419 1.2159416,0 0.163832,-0.1638325 0.242515,-0.3631665 0.242515,-0.6046035 0,-0.232814 -0.07868,-0.430463 -0.242515,-0.602918 L 9.0036544,7.4401692 C 8.8225769,7.2763371 8.6146204,7.190918 8.3990518,7.190918 Z m 13.7189242,0.00842 c -0.224191,0 -0.422245,0.08542 -0.586077,0.2492512 l -1.41467,1.4062483 c -0.155209,0.15521 -0.232409,0.353061 -0.232409,0.594498 0,0.241437 0.0772,0.448989 0.232409,0.6214445 0.15521,0.15521 0.353264,0.232409 0.586078,0.232409 0.232814,0 0.432551,-0.0772 0.587761,-0.232409 L 22.74784,8.6123276 c 0.15521,-0.1465867 0.22399,-0.3362197 0.22399,-0.5776566 0,-0.241437 -0.08542,-0.4392886 -0.249251,-0.594498 C 22.558746,7.2849635 22.359413,7.1993422 22.117976,7.1993424 Z m -6.84599,2.5346155 c -0.939878,0 -1.810372,0.233286 -2.603665,0.6989145 -0.793292,0.465629 -1.424167,1.094819 -1.881172,1.879489 -0.349158,0.606083 -0.55876,1.253027 -0.63997,1.943487 0.572945,-0.236708 1.161003,-0.348038 1.785178,-0.36714 0.172634,-0.577609 0.474188,-1.091387 0.933008,-1.53256 0.663951,-0.638083 1.475366,-0.96669 2.406621,-0.96669 0.957125,0 1.776152,0.344439 2.448726,1.025636 0.672574,0.681195 1.008794,1.518143 1.008794,2.492513 0,0.603592 -0.146384,1.163396 -0.439558,1.680761 -0.148005,0.261187 -0.323015,0.496098 -0.523764,0.705651 0.435092,0.380181 0.793803,0.809742 1.040792,1.340567 0.394585,-0.365512 0.733004,-0.788076 1.000373,-1.278254 0.413892,-0.758802 0.629865,-1.577828 0.629865,-2.448726 0,-0.698442 -0.138368,-1.371084 -0.414296,-2.009168 C 19.74699,12.260355 19.376818,11.708365 18.919813,11.25136 18.462807,10.794355 17.910817,10.424183 17.272734,10.148255 16.63465,9.8723265 15.97043,9.7339585 15.271986,9.7339585 Z M 5.5882385,14.062169 c -0.2500597,0 -0.4576119,0.07868 -0.6214441,0.242514 -0.1638322,0.146586 -0.2408306,0.352656 -0.2408305,0.611341 0,0.232813 0.076999,0.422446 0.2408305,0.577655 0.1638322,0.15521 0.3713844,0.22399 0.6214441,0.22399 h 1.4567726 c 0.2328142,0 0.4323499,-0.0772 0.5961821,-0.23241 0.1638321,-0.155209 0.2492512,-0.345045 0.2492512,-0.569235 0,-0.250061 -0.076999,-0.456131 -0.2408305,-0.611341 -0.1638323,-0.15521 -0.363368,-0.242514 -0.5961822,-0.242514 z m 17.3920125,0 c -0.25006,0 -0.457613,0.07868 -0.621445,0.242514 -0.163831,0.146586 -0.249251,0.352656 -0.249251,0.611341 0,0.232813 0.077,0.422446 0.240831,0.577655 0.163832,0.15521 0.371384,0.22399 0.621444,0.22399 h 1.456773 c 0.232814,0 0.432349,-0.0772 0.596181,-0.23241 0.163833,-0.155209 0.249252,-0.345045 0.249252,-0.569235 0,-0.250061 -0.077,-0.456131 -0.240831,-0.611341 -0.163832,-0.15521 -0.363367,-0.242514 -0.596181,-0.242514 z m -2.276944,5.441424 c -0.241437,0 -0.430868,0.0772 -0.586078,0.232411 -0.155209,0.155208 -0.232409,0.353262 -0.232409,0.586078 0,0.232813 0.0772,0.432147 0.232409,0.604602 l 1.41467,1.396144 c 0.362155,0.362155 0.767559,0.362155 1.215941,0 0.15521,-0.146586 0.22399,-0.336018 0.22399,-0.586076 0,-0.232815 -0.07741,-0.422449 -0.22399,-0.577657 l -1.456772,-1.439932 c -0.15521,-0.146586 -0.354947,-0.215568 -0.587761,-0.21557 z"   class="light" /><path   id="path853"   d="m 12.008142,14.744243 c -0.79944,0.01243 -1.439552,0.170503 -2.1270557,0.613022 -0.7294244,0.483304 -1.2324277,1.140419 -1.4820345,1.990642 -0.6553288,0.206946 -1.1731651,0.568697 -1.5611887,1.094684 -0.3880236,0.525988 -0.5860773,1.129446 -0.5860773,1.80202 0,0.836407 0.3022677,1.561998 0.9144827,2.174212 0.612215,0.612215 1.3277008,0.912798 2.1641072,0.912798 H 15.24504 c 0.836407,0 1.552297,-0.300786 2.147267,-0.904377 0.594969,-0.603593 0.897641,-1.328981 0.897641,-2.182633 0,-0.315549 -0.04772,-0.583211 -0.117889,-0.828592 -0.218757,-0.7288 -0.589271,-1.203309 -1.202469,-1.667289 -0.478638,-0.355431 -1.018572,-0.538921 -1.620133,-0.538921 -0.25006,-0.758802 -0.699318,-1.353637 -1.328778,-1.80202 C 13.425057,14.983511 12.75087,14.76705 12.008142,14.744243 Z M 11.875096,16.3829 c 0.500119,0 0.939678,0.163899 1.301833,0.500188 0.370778,0.336287 0.586347,0.749707 0.646706,1.241203 l 0.06905,0.560815 c 0.05174,0.129341 0.120919,0.197044 0.207148,0.197044 h 1.136788 c 0.370778,0 0.690763,0.138569 0.966691,0.405875 0.275928,0.267305 0.404191,0.585605 0.404191,0.965007 0,0.388024 -0.136886,0.716024 -0.404191,0.991952 -0.267305,0.275928 -0.595913,0.414296 -0.966691,0.414296 H 9.3303757 c -0.3880236,0 -0.7147448,-0.138368 -0.9734272,-0.414296 -0.2673051,-0.275928 -0.3974548,-0.61235 -0.3974547,-1.000374 0,-0.362155 0.1124325,-0.672641 0.3452467,-0.931324 0.2328141,-0.258682 0.5255833,-0.405067 0.8791159,-0.439558 l 0.5355534,-0.06905 c 0.1120957,0 0.1717813,-0.06771 0.1717813,-0.197043 l 0.07747,-0.483345 c 0.060359,-0.50012 0.2677089,-0.913541 0.6298649,-1.241204 0.362155,-0.336288 0.785073,-0.500188 1.27657,-0.500188 z"   class="cloud" /></g>'

partlysunny2 = '<g transform="scale(2) translate(0,0)" id="partlysunny"><path   id="path855"   d="m 17.759766,1.5 c -0.24,0 -0.429844,0.080469 -0.589844,0.2304687 -0.16,0.15 -0.230469,0.3498439 -0.230469,0.5898438 v 2.0488281 c 0,0.26 0.08047,0.4610937 0.230469,0.6210937 0.15,0.16 0.349844,0.2304688 0.589844,0.2304688 0.26,0 0.461093,-0.080469 0.621093,-0.2304688 0.16,-0.16 0.228516,-0.3610937 0.228516,-0.6210937 V 2.3203125 c 0,-0.2399999 -0.08023,-0.4298438 -0.240234,-0.5898438 C 18.209141,1.5704687 18.009766,1.5 17.759766,1.5 Z m -6.919922,2.8691406 c -0.24,0 -0.449141,0.08 -0.619141,0.25 -0.17,0.1600001 -0.2499999,0.3615625 -0.2499999,0.6015625 0,0.24 0.080235,0.4489062 0.2402349,0.6289062 l 0.658203,0.640625 c 0.25,0.19 0.460625,0.27 0.640625,0.25 0.21,0 0.390781,-0.089766 0.550781,-0.2597656 0.16,-0.17 0.240234,-0.3810937 0.240234,-0.6210937 0,-0.2400001 -0.09172,-0.4398437 -0.261719,-0.5898438 L 11.449219,4.609375 c -0.18,-0.1600001 -0.379375,-0.2402344 -0.609375,-0.2402344 z m 13.890625,0 c -0.24,0 -0.430078,0.080234 -0.580078,0.2402344 l -1.470703,1.4296875 c -0.150001,0.1899999 -0.21875,0.3910937 -0.21875,0.6210937 0,0.26 0.06875,0.4591406 0.21875,0.6191406 0.21,0.16 0.421093,0.2402344 0.621093,0.2402344 0.18,0 0.379844,-0.080234 0.589844,-0.2402344 l 1.429687,-1.4296875 c 0.160002,-0.18 0.240235,-0.390625 0.240235,-0.640625 0,-0.2399999 -0.08023,-0.4396093 -0.240235,-0.5996093 -0.16,-0.1600001 -0.359843,-0.2402344 -0.589843,-0.2402344 z m -6.970703,2.5800781 c -1.145923,0 -2.176855,0.3514587 -3.09961,1.046875 0.504737,0.2887054 0.998601,0.6326792 1.455078,1.0742189 0.499484,-0.2713159 1.044735,-0.4199219 1.644532,-0.4199219 0.99,0 1.829531,0.3392967 2.519531,1.0292969 0.69,0.6899994 1.041015,1.5197654 1.041015,2.5097654 0,0.288395 -0.03972,0.5769 -0.113281,0.863282 0.600233,0.52394 0.970428,0.98951 1.253907,1.484375 C 22.810508,13.832335 23,13.050775 23,12.189453 c 0,-0.71 -0.140156,-1.389062 -0.410156,-2.039062 -0.27,-0.6500003 -0.649141,-1.1999222 -1.119141,-1.6699222 -0.47,-0.47 -1.019922,-0.8510938 -1.669922,-1.1210938 -0.65,-0.2800001 -1.331015,-0.4101563 -2.041015,-0.4101563 z m 7.830078,4.3906253 c -0.24,0 -0.439375,0.08 -0.609375,0.25 -0.18,0.17 -0.259766,0.369609 -0.259766,0.599609 0,0.23 0.08977,0.420078 0.259766,0.580079 0.16,0.16 0.369375,0.240234 0.609375,0.240234 h 2.041015 c 0.23,0 0.420077,-0.08047 0.580079,-0.230469 0.159998,-0.15 0.228515,-0.349844 0.228515,-0.589844 0,-0.24 -0.07851,-0.439609 -0.228515,-0.599609 -0.150001,-0.16 -0.350079,-0.25 -0.580079,-0.25 z m -1.480469,6.320312 c -0.24,0 -0.439609,0.08023 -0.599609,0.240235 C 23.339766,18.060391 23.25,18.26 23.25,18.5 c 0,0.24 0.08,0.448907 0.25,0.628906 l 0.650391,0.63086 c 0.15,0.16 0.340078,0.240234 0.580078,0.240234 0.24,0 0.439609,-0.08 0.599609,-0.25 0.16,-0.17 0.240235,-0.371094 0.240234,-0.621094 0,-0.219999 -0.08023,-0.418126 -0.240234,-0.578124 l -0.65039,-0.650391 c -0.160002,-0.16 -0.350313,-0.240234 -0.570313,-0.240235 z"   class="light" /><path   id="path849"   d="m 11.179688,8.0292969 c -1.410001,0 -2.6504693,0.4405468 -3.7304692,1.3105469 -1.0800001,0.8700002 -1.7800782,1.9896092 -2.0800782,3.3496092 -1.12,0.26 -2.0282812,0.830469 -2.7382812,1.730469 -0.71,0.9 -1.0703125,1.920313 -1.0703125,3.070313 0,0.9 0.2201562,1.730234 0.6601562,2.490234 0.44,0.76 1.0388282,1.358828 1.7988281,1.798828 0.76,0.44 1.5807032,0.660156 2.4707032,0.660156 H 17.320312 c 0.890002,0 1.720469,-0.220156 2.480469,-0.660156 0.76,-0.44 1.368594,-1.038828 1.808594,-1.798828 0.44,-0.76 0.669922,-1.590234 0.669922,-2.490234 0,-0.595125 -0.129762,-1.19868 -0.357422,-1.802735 -0.289942,-0.712862 -0.55802,-1.154541 -1.279297,-1.796875 -0.936402,-0.857226 -2.037123,-1.300781 -3.322266,-1.300781 H 17 c -0.180857,-0.788537 -0.529944,-1.518006 -1.039062,-2.191406 -0.02329,-0.03076 -0.04472,-0.06579 -0.06836,-0.0957 -0.0015,-0.0019 -0.0024,-0.004 -0.0039,-0.0059 C 15.773745,10.150873 15.638669,10.013544 15.507812,9.8730469 14.83776,9.1898352 14.059093,8.7538463 13.222656,8.3828126 12.609999,8.1490155 11.930497,8.0292969 11.179688,8.0292969 Z m 0.0098,1.6796875 c 1.1,0 2.061094,0.3715626 2.871094,1.1015626 0.82,0.73 1.269141,1.628983 1.369141,2.708985 L 15.5,14.09961 c 0.02,0.11 0.09094,0.169921 0.210938,0.169922 h 1.609374 c 0.88,0 1.639297,0.320937 2.279297,0.960937 0.64,0.64 0.960938,1.389531 0.960938,2.269531 0,0.91 -0.321172,1.680313 -0.951172,2.320313 -0.63,0.64 -1.399297,0.958984 -2.279297,0.958984 H 6.4902344 c -0.88,0 -1.6295313,-0.31875 -2.2695313,-0.96875 -0.63,-0.65 -0.9511719,-1.420312 -0.9511719,-2.320312 0,-0.84 0.2798438,-1.559922 0.8398438,-2.169922 0.56,-0.61 1.2615625,-0.960547 2.1015625,-1.060547 l 0.5,-0.0293 c 0.12,0 0.1894531,-0.05969 0.1894531,-0.179687 l 0.070312,-0.541016 c 0.14,-1.08 0.6101563,-1.988985 1.4101563,-2.708984 0.8,-0.730001 1.7385936,-1.0917976 2.8085936,-1.0917976 z"   class="cloud" /></g>'

sprinklerWatering2 = '<g transform="translate(0,0)"><path   d="m 9.785,16.555 c 0,0.92 0.23,1.78 0.7,2.57 0.47,0.79 1.1,1.43 1.9,1.9 0.8,0.47 1.66,0.71 2.59,0.71 0.93,0 1.8,-0.24 2.61,-0.71 0.81,-0.47 1.45,-1.11 1.92,-1.9 0.47,-0.8 0.71,-1.65 0.71,-2.57 0,-0.6 -0.17,-1.31 -0.52,-2.14 -0.35,-0.83 -0.77,-1.6 -1.26,-2.3 -0.44,-0.57 -0.96,-1.2 -1.56,-1.88 -0.6,-0.68 -1.65,-1.73 -1.89,-1.97 l -1.28,1.29 c -0.62,0.6 -1.22,1.29 -1.79,2.08 -0.57,0.79 -1.07,1.64 -1.49,2.55 -0.44,0.91 -0.64,1.7 -0.64,2.37 z"   id="path2"   class="rainDropWatering" /></g>'

saturationSkip2 = '<g transform="translate(0,0)"><path   id="path2"   d="M 12.724609 7.4394531 L 12.380859 7.8242188 C 12.1204 8.1258033 11.887267 8.4540556 11.681641 8.8378906 C 11.634545 8.9226625 11.611082 8.9934112 11.574219 9.0722656 L 13.427734 10.925781 C 13.529105 10.869077 13.624622 10.803113 13.710938 10.716797 C 13.957688 10.456338 14.095703 10.139657 14.095703 9.7695312 C 14.095703 9.1800712 13.643071 8.3990405 12.724609 7.4394531 z M 18.400391 10.099609 L 17.892578 10.689453 C 17.508744 11.114413 17.166855 11.594207 16.851562 12.15625 C 16.536269 12.718294 16.371094 13.17089 16.371094 13.541016 C 16.371094 13.664728 16.383601 13.783612 16.402344 13.900391 L 18.068359 15.566406 C 18.176056 15.58282 18.284983 15.595703 18.400391 15.595703 C 18.962434 15.595703 19.455973 15.389731 19.853516 14.992188 C 20.25106 14.580936 20.455078 14.10306 20.455078 13.541016 C 20.455078 13.184598 20.278256 12.732002 19.935547 12.15625 C 19.592837 11.580499 19.248886 11.100595 18.933594 10.730469 C 18.851344 10.634509 18.742516 10.496495 18.619141 10.345703 C 18.495765 10.194911 18.414099 10.113318 18.400391 10.099609 z M 12.875 13.964844 L 12.533203 14.294922 C 11.998576 14.802132 11.394367 15.499616 10.722656 16.376953 C 10.366238 16.843038 10.092381 17.336504 9.8730469 17.857422 C 9.6537129 18.378341 9.5449219 18.830973 9.5449219 19.228516 C 9.5449219 20.174395 9.8596122 20.955314 10.503906 21.599609 C 11.1482 22.243903 11.94283 22.560547 12.875 22.560547 C 13.80717 22.560547 14.588127 22.230231 15.232422 21.585938 C 15.876716 20.941644 16.179688 20.146978 16.179688 19.228516 C 16.179688 18.830973 16.068943 18.378377 15.849609 17.84375 C 15.630275 17.322831 15.356345 16.829293 15.027344 16.390625 C 14.396758 15.554414 13.808174 14.856966 13.232422 14.294922 C 13.177592 14.253802 13.053209 14.143053 12.875 13.964844 z "   class="saturatedSoil" /><path   d="m 6.5126951,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457545 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'

rainSkip2 = '<g transform="translate(0,0)"><path   id="path844"   d="M 19.164062 14.560547 C 19.004062 14.560547 18.855078 14.610937 18.705078 14.710938 C 18.565078 14.810937 18.464297 14.960391 18.404297 15.150391 L 18.238281 15.736328 L 19.582031 17.080078 L 19.994141 15.630859 C 19.994141 15.610859 20.005625 15.569769 20.015625 15.509766 C 20.025625 15.449766 20.035156 15.399141 20.035156 15.369141 C 20.035156 15.209141 19.984766 15.050391 19.884766 14.900391 C 19.784766 14.750391 19.635781 14.649844 19.425781 14.589844 C 19.335781 14.569844 19.244062 14.560547 19.164062 14.560547 z M 12.435547 14.570312 C 12.285547 14.570312 12.124609 14.620702 11.974609 14.720703 C 11.824609 14.820703 11.714297 14.970156 11.654297 15.160156 L 10.025391 20.929688 C 9.9953906 21.019687 9.984375 21.090858 9.984375 21.130859 C 9.984375 21.300858 10.034531 21.460858 10.144531 21.630859 C 10.254531 21.790859 10.414766 21.900937 10.634766 21.960938 C 10.644766 21.960938 10.674375 21.970234 10.734375 21.990234 C 10.774375 22.000234 10.805705 22.009766 10.845703 22.009766 C 11.265703 22.009766 11.544063 21.799141 11.664062 21.369141 L 13.294922 15.640625 C 13.364922 15.390625 13.334844 15.170703 13.214844 14.970703 C 13.094844 14.770703 12.915781 14.639609 12.675781 14.599609 C 12.585781 14.579609 12.505547 14.570312 12.435547 14.570312 z M 15.113281 15.005859 C 15.087705 15.058499 15.057851 15.108509 15.044922 15.169922 L 12.605469 23.939453 C 12.535469 24.199453 12.554062 24.409844 12.664062 24.589844 C 12.814063 24.799844 12.985547 24.930469 13.185547 24.980469 C 13.255547 25.010469 13.345547 25.029297 13.435547 25.029297 C 13.625547 25.029297 13.785313 24.969606 13.945312 24.849609 C 14.105313 24.729608 14.194375 24.589923 14.234375 24.419922 L 16.464844 16.359375 L 15.113281 15.005859 z M 17.710938 17.605469 L 16.775391 20.919922 C 16.745391 21.039923 16.734375 21.110391 16.734375 21.150391 C 16.734375 21.310391 16.785005 21.469141 16.875 21.619141 C 16.985 21.779141 17.135937 21.879454 17.335938 21.939453 L 17.574219 21.990234 C 17.764219 21.990234 17.935938 21.930314 18.085938 21.820312 C 18.235937 21.710311 18.325234 21.549376 18.365234 21.359375 L 19.052734 18.945312 L 17.710938 17.605469 z "   class="rainDropsPredicted" /><path   id="path2"   d="M 14.304688 4.9707031 C 12.894687 4.9707031 11.644687 5.40125 10.554688 6.28125 C 10.219393 6.5519464 9.9327202 6.8518529 9.6699219 7.1679688 L 10.871094 8.3691406 C 11.035344 8.1516787 11.220942 7.9434094 11.435547 7.75 C 12.235547 7.02 13.195156 6.6601562 14.285156 6.6601562 C 15.375156 6.6601562 16.314766 7.02 17.134766 7.75 C 17.944766 8.47 18.415391 9.380937 18.525391 10.460938 L 18.605469 11.041016 C 18.605469 11.151016 18.665156 11.210938 18.785156 11.210938 L 20.394531 11.210938 C 21.284531 11.210938 22.055078 11.529922 22.705078 12.169922 C 23.355078 12.809922 23.685547 13.559688 23.685547 14.429688 C 23.685547 15.299687 23.385156 16.049453 22.785156 16.689453 C 22.185156 17.329453 21.455469 17.670938 20.605469 17.710938 C 20.475469 17.710938 20.404297 17.770624 20.404297 17.890625 L 20.404297 17.902344 L 21.728516 19.226562 C 22.174662 19.107834 22.602464 18.928356 23.005859 18.679688 C 23.735859 18.229688 24.314375 17.630859 24.734375 16.880859 C 25.154375 16.130859 25.365234 15.319453 25.365234 14.439453 C 25.365234 13.549453 25.135313 12.720703 24.695312 11.970703 C 24.255312 11.220703 23.644766 10.619453 22.884766 10.189453 C 22.124766 9.7594526 21.294297 9.5410156 20.404297 9.5410156 L 20.085938 9.5410156 C 19.765937 8.2010156 19.064375 7.1 17.984375 6.25 C 16.904375 5.4 15.684687 4.9707031 14.304688 4.9707031 z M 8.7578125 8.6523438 C 8.6279809 8.9665128 8.5239683 9.2955544 8.4453125 9.640625 C 7.3453125 9.900625 6.4348437 10.471094 5.7148438 11.371094 C 4.9948438 12.271094 4.6347656 13.289453 4.6347656 14.439453 C 4.6347656 15.769452 5.0758594 16.911094 6.0058594 17.871094 C 6.9358594 18.831094 8.0642969 19.340391 9.4042969 19.400391 C 9.5142969 19.400391 9.5742188 19.340469 9.5742188 19.230469 L 9.5742188 17.900391 C 9.5742188 17.780391 9.5142969 17.720703 9.4042969 17.720703 C 8.5542969 17.680703 7.8246094 17.341172 7.2246094 16.701172 C 6.6246094 16.061172 6.3242188 15.309452 6.3242188 14.439453 C 6.3242188 13.609453 6.6057812 12.89125 7.1757812 12.28125 C 7.7457813 11.67125 8.4453906 11.310937 9.2753906 11.210938 L 9.8046875 11.179688 C 9.9346875 11.179688 10.005859 11.110234 10.005859 10.990234 L 10.074219 10.460938 C 10.087664 10.315728 10.124267 10.181695 10.150391 10.042969 L 8.7578125 8.6523438 z "   class="windSkip" /><path   d="m 6.512695,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.568359,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.143554,5.9457545 A 0.84712499,0.84712499 0 0 0 6.512695,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'

windSkip2 = '<g transform="translate(0,0)"><path   id="path2"   d="M 18.689453 8.625 C 17.949453 8.625 17.290469 8.9050781 16.730469 9.4550781 C 16.540469 9.6250781 16.449219 9.8359379 16.449219 10.085938 C 16.449219 10.315934 16.540703 10.525315 16.720703 10.695312 C 16.900703 10.865311 17.109375 10.955078 17.359375 10.955078 C 17.599375 10.955078 17.800937 10.875312 17.960938 10.695312 C 18.150938 10.505316 18.399453 10.404297 18.689453 10.404297 C 18.989453 10.404297 19.229688 10.505314 19.429688 10.695312 C 19.629687 10.885311 19.730469 11.124063 19.730469 11.414062 C 19.730469 11.704063 19.629687 11.954297 19.429688 12.154297 C 19.229688 12.354297 18.989219 12.455078 18.699219 12.455078 L 14.957031 12.455078 L 16.746094 14.244141 L 18.689453 14.244141 C 19.459453 14.244141 20.129453 13.964297 20.689453 13.404297 C 21.249453 12.844297 21.529297 12.184297 21.529297 11.404297 C 21.529297 10.624299 21.259219 9.9755469 20.699219 9.4355469 C 20.139219 8.8955469 19.469453 8.625 18.689453 8.625 z M 4.0097656 12.455078 C 3.7497656 12.455078 3.5408594 12.544375 3.3808594 12.734375 C 3.1908594 12.904375 3.0996094 13.115469 3.0996094 13.355469 C 3.0996094 13.605469 3.1891406 13.814375 3.3691406 13.984375 C 3.5491406 14.154375 3.7597656 14.244141 4.0097656 14.244141 L 14.349609 14.244141 L 12.560547 12.455078 L 4.0097656 12.455078 z M 4.0097656 15.765625 C 3.7597656 15.765625 3.5508594 15.845391 3.3808594 16.025391 C 3.1908594 16.205391 3.0996094 16.404766 3.0996094 16.634766 C 3.0996094 16.884766 3.1891406 17.095156 3.3691406 17.285156 C 3.5491406 17.455156 3.7597656 17.544922 4.0097656 17.544922 L 17.652344 17.544922 L 15.873047 15.765625 L 4.0097656 15.765625 z M 18.267578 15.765625 L 20.046875 17.544922 L 24.050781 17.544922 C 24.340781 17.544922 24.579297 17.645937 24.779297 17.835938 C 24.979297 18.025937 25.080078 18.264688 25.080078 18.554688 C 25.080078 18.844687 24.979297 19.085156 24.779297 19.285156 C 24.579297 19.485156 24.340781 19.585938 24.050781 19.585938 C 23.770781 19.585937 23.539609 19.485391 23.349609 19.275391 C 23.169609 19.115391 22.960703 19.035156 22.720703 19.035156 C 22.470703 19.035156 22.259844 19.115391 22.089844 19.275391 C 22.033446 19.328471 21.999361 19.394898 21.960938 19.458984 L 23.859375 21.357422 C 23.923798 21.361407 23.984585 21.375 24.050781 21.375 C 24.830781 21.375 25.500547 21.094922 26.060547 20.544922 C 26.620547 19.994922 26.900391 19.324687 26.900391 18.554688 C 26.900391 17.784688 26.620547 17.125937 26.060547 16.585938 C 25.500547 16.035938 24.830781 15.765625 24.050781 15.765625 L 18.267578 15.765625 z "   class="windSkip" /><path   d="m 6.5126951,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457545 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'

freezeSkip2 = '<g transform="translate(0,0)"><path  id="path2"   d="M 15.019531 5.5859375 C 14.76998 5.5859375 14.569217 5.6737289 14.394531 5.8359375 C 14.219842 5.9981461 14.132812 6.2101915 14.132812 6.4472656 C 14.132812 6.6718621 14.219844 6.8709945 14.394531 7.0332031 C 14.569217 7.1954116 14.782457 7.2832031 15.019531 7.2832031 C 15.256606 7.2832031 15.45498 7.1954117 15.617188 7.0332031 C 15.7794 6.8709945 15.867188 6.6718621 15.867188 6.4472656 C 15.867188 6.2101915 15.779397 5.9981461 15.617188 5.8359375 C 15.45498 5.6737288 15.256606 5.5859375 15.019531 5.5859375 z M 15.042969 8.03125 C 14.793417 8.03125 14.594609 8.1182826 14.419922 8.2929688 C 14.245233 8.467655 14.158203 8.6808947 14.158203 8.9179688 L 14.158203 11.65625 L 18.34375 15.841797 L 21.144531 15.841797 C 21.369128 15.841797 21.570214 15.754006 21.732422 15.591797 C 21.894634 15.429589 21.980469 15.230456 21.980469 15.005859 C 21.980469 14.756308 21.894632 14.557498 21.732422 14.382812 C 21.570214 14.208122 21.369128 14.121094 21.144531 14.121094 L 17.115234 14.121094 L 19.958984 11.275391 C 20.108711 11.12566 20.183594 10.926527 20.183594 10.689453 C 20.183594 10.452379 20.108715 10.252811 19.958984 10.078125 C 19.784298 9.9034388 19.572252 9.8164062 19.347656 9.8164062 C 19.123059 9.8164062 18.924686 9.9034392 18.75 10.078125 L 15.892578 12.947266 L 15.892578 8.9179688 C 15.892578 8.6684171 15.804786 8.467655 15.642578 8.2929688 C 15.480369 8.1182825 15.280042 8.03125 15.042969 8.03125 z M 21.058594 8.0820312 C 20.821521 8.0820313 20.620434 8.1690637 20.470703 8.34375 C 20.296014 8.5059586 20.208984 8.7168097 20.208984 8.9414062 C 20.208984 9.1660028 20.296017 9.378048 20.470703 9.5527344 C 20.620434 9.7274197 20.821521 9.8164062 21.058594 9.8164062 C 21.295669 9.8164062 21.495236 9.7274206 21.669922 9.5527344 C 21.844611 9.3780481 21.931641 9.1660028 21.931641 8.9414062 C 21.931641 8.7168097 21.844607 8.5184362 21.669922 8.34375 C 21.495236 8.1690637 21.295669 8.0820312 21.058594 8.0820312 z M 8.4042969 8.2988281 C 8.38568 8.3166822 8.3610531 8.3235631 8.34375 8.34375 C 8.1690637 8.5059586 8.0820312 8.7168097 8.0820312 8.9414062 C 8.0820309 9.1660028 8.1690637 9.378048 8.34375 9.5527344 C 8.4934808 9.7274197 8.6926135 9.8164062 8.9296875 9.8164062 C 9.1667617 9.8164063 9.3663288 9.7274207 9.5410156 9.5527344 C 9.562202 9.531548 9.5692738 9.504665 9.5878906 9.4824219 L 8.4042969 8.2988281 z M 10.158203 10.052734 C 10.140929 10.06792 10.120317 10.073043 10.103516 10.089844 C 9.928825 10.26453 9.8398438 10.464097 9.8398438 10.701172 C 9.8398438 10.938246 9.9288285 11.137377 10.103516 11.287109 L 12.947266 14.132812 L 8.9179688 14.132812 C 8.6808946 14.132813 8.480568 14.219844 8.3183594 14.394531 C 8.1561517 14.569217 8.0683594 14.782457 8.0683594 15.019531 C 8.0683594 15.244128 8.1441085 15.442825 8.34375 15.580078 C 8.5059585 15.74229 8.7043323 15.830078 8.9414062 15.830078 L 12.984375 15.830078 L 10.115234 18.6875 C 9.9405437 18.849708 9.8535156 19.036362 9.8535156 19.273438 C 9.8535156 19.510511 9.9405471 19.71008 10.115234 19.884766 C 10.28992 20.059456 10.489489 20.146484 10.726562 20.146484 C 10.963637 20.146484 11.163204 20.059453 11.337891 19.884766 L 14.169922 17.052734 L 14.169922 21.070312 C 14.169922 21.307387 14.256955 21.519432 14.431641 21.681641 C 14.606328 21.843853 14.819566 21.931641 15.056641 21.931641 C 15.293714 21.931641 15.492089 21.843849 15.654297 21.681641 C 15.816509 21.519432 15.904297 21.307388 15.904297 21.070312 L 15.904297 17.027344 L 18.761719 19.896484 C 18.923928 20.071173 19.136731 20.160156 19.361328 20.160156 C 19.585924 20.160156 19.79797 20.071171 19.972656 19.896484 C 19.977861 19.890411 19.979351 19.883087 19.984375 19.876953 L 10.158203 10.052734 z M 6.4472656 14.132812 C 6.2101915 14.132813 6.0098648 14.219844 5.8476562 14.394531 C 5.6854476 14.569217 5.5976562 14.782457 5.5976562 15.019531 C 5.5976562 15.244128 5.6722112 15.442502 5.859375 15.617188 C 6.0215836 15.779399 6.2343878 15.867188 6.4589844 15.867188 C 6.6835809 15.867187 6.8963852 15.779397 7.0585938 15.617188 C 7.2208016 15.45498 7.3066406 15.256606 7.3066406 15.019531 C 7.3066406 14.76998 7.2208023 14.569217 7.0585938 14.394531 C 6.8963852 14.219842 6.6843397 14.132812 6.4472656 14.132812 z M 23.566406 14.132812 C 23.329332 14.132812 23.117287 14.219844 22.955078 14.394531 C 22.792866 14.569217 22.705078 14.782457 22.705078 15.019531 C 22.705078 15.244128 22.79287 15.443261 22.955078 15.605469 C 23.117287 15.76768 23.329332 15.855469 23.566406 15.855469 C 23.791002 15.855469 23.990135 15.767678 24.152344 15.605469 C 24.314556 15.443261 24.402344 15.244128 24.402344 15.019531 C 24.402344 14.76998 24.314552 14.569217 24.152344 14.394531 C 23.990135 14.219842 23.791002 14.132812 23.566406 14.132812 z M 8.9296875 20.197266 C 8.6926134 20.197266 8.4934811 20.284297 8.34375 20.458984 C 8.1690637 20.621192 8.0820312 20.833998 8.0820312 21.058594 C 8.0820309 21.295669 8.1690635 21.494042 8.34375 21.65625 C 8.4934811 21.830939 8.6926134 21.917969 8.9296875 21.917969 C 9.1667616 21.917969 9.3663293 21.830937 9.5410156 21.65625 C 9.7157018 21.494042 9.8027344 21.283191 9.8027344 21.058594 C 9.8027344 20.833998 9.7157018 20.63367 9.5410156 20.458984 C 9.3663293 20.284295 9.1667616 20.197266 8.9296875 20.197266 z M 20.525391 20.417969 C 20.508704 20.434287 20.486319 20.440766 20.470703 20.458984 C 20.296014 20.621192 20.208984 20.833998 20.208984 21.058594 C 20.208984 21.295669 20.296017 21.494042 20.470703 21.65625 C 20.620434 21.830939 20.821521 21.917969 21.058594 21.917969 C 21.295669 21.917969 21.495236 21.830937 21.669922 21.65625 C 21.687308 21.640106 21.693328 21.618659 21.708984 21.601562 L 20.525391 20.417969 z M 15.019531 22.716797 C 14.76998 22.716797 14.569217 22.804589 14.394531 22.966797 C 14.219842 23.129007 14.132812 23.328138 14.132812 23.552734 C 14.132812 23.802286 14.219844 24.001853 14.394531 24.164062 C 14.569217 24.326274 14.782457 24.414062 15.019531 24.414062 C 15.256606 24.414063 15.45498 24.32627 15.617188 24.164062 C 15.7794 24.001854 15.867188 23.789808 15.867188 23.552734 C 15.867188 23.328138 15.779397 23.129007 15.617188 22.966797 C 15.45498 22.804586 15.256606 22.716797 15.019531 22.716797 z "   class="freezeSkip0" /><path   d="m 6.5126951,5.6977075 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457544 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977075 Z"   id="path869"   class="skipStrikethrough" /></g>'

rainSensorSkip2 = '<g transform="translate(0,0)"><path   id="path2"   d="M 15 5.8496094 C 14.104678 5.8496094 13.912952 5.8611994 13.214844 5.9609375 C 11.946516 6.1421453 10.725634 6.5243764 9.5820312 7.0800781 L 11.283203 8.78125 C 12.062918 8.4811261 12.869781 8.2735315 13.703125 8.1699219 C 14.323876 8.0927729 15.290006 8.0694714 15.828125 8.1191406 C 17.269474 8.2522593 18.474363 8.5924445 19.691406 9.2089844 C 20.67514 9.7073399 21.471361 10.280372 22.279297 11.070312 C 22.469315 11.256108 22.60516 11.373334 22.65625 11.396484 C 22.761803 11.444474 22.936155 11.445087 23.042969 11.398438 C 23.154446 11.349697 24.055608 10.441836 24.085938 10.347656 C 24.098157 10.308406 24.105063 10.194361 24.101562 10.0625 C 24.096662 9.8836218 24.087821 9.8274816 24.056641 9.7675781 C 24.000024 9.6587637 23.418072 9.099267 22.984375 8.7363281 C 21.200546 7.2435141 19.064479 6.2865884 16.785156 5.9609375 C 16.087048 5.8612306 15.895328 5.8496094 15 5.8496094 z M 8.0625 7.9570312 C 7.7032104 8.1993889 7.351355 8.4553703 7.015625 8.7363281 C 6.5819283 9.099267 5.9999694 9.6587639 5.9433594 9.7675781 C 5.9121824 9.8274801 5.9029875 9.8836216 5.8984375 10.0625 C 5.8947975 10.194361 5.9014275 10.308406 5.9140625 10.347656 C 5.9425035 10.435976 6.8443948 11.34985 6.9511719 11.398438 C 7.0534716 11.444748 7.2400401 11.443584 7.34375 11.396484 C 7.394783 11.373324 7.5306853 11.256104 7.7207031 11.070312 C 8.3457208 10.459194 8.9666967 9.9798152 9.6699219 9.5625 L 8.0625 7.9570312 z M 15.279297 9.6191406 C 14.34242 9.5894845 13.400447 9.7173385 12.492188 9.9902344 L 14.431641 11.929688 C 14.619319 11.915045 14.79634 11.886719 15 11.886719 C 15.779637 11.886719 16.411825 11.988891 17.128906 12.232422 C 18.114934 12.56729 19.071509 13.173523 19.730469 13.880859 C 19.855737 14.015324 19.939921 14.090035 19.988281 14.109375 C 20.078431 14.145475 20.256194 14.146208 20.339844 14.111328 C 20.429624 14.073808 21.394032 13.105894 21.419922 13.027344 C 21.430722 12.993784 21.437094 12.872068 21.433594 12.748047 C 21.428694 12.569016 21.419902 12.515248 21.388672 12.455078 C 21.314452 12.312306 20.637725 11.684105 20.195312 11.347656 C 19.635649 10.922032 18.880399 10.497598 18.191406 10.222656 C 17.263131 9.8522298 16.2755 9.6506744 15.279297 9.6191406 z M 10.810547 10.705078 C 10.449852 10.904217 10.10299 11.120798 9.8046875 11.347656 C 9.3622803 11.684105 8.6855451 12.312305 8.6113281 12.455078 C 8.5800941 12.515248 8.5709462 12.569016 8.5664062 12.748047 C 8.5629962 12.871773 8.5690461 12.993944 8.5800781 13.027344 C 8.6040591 13.100014 9.5501104 14.054646 9.6464844 14.103516 C 9.7282854 14.144736 9.9145656 14.148195 10.011719 14.109375 C 10.060079 14.090035 10.144263 14.015324 10.269531 13.880859 C 10.843093 13.26519 11.644505 12.736921 12.492188 12.386719 L 10.810547 10.705078 z M 16.015625 13.513672 L 18.480469 15.978516 C 18.573889 15.876594 18.725061 15.724027 18.732422 15.701172 C 18.762692 15.607272 18.746061 15.232316 18.707031 15.134766 C 18.671911 15.046986 18.337212 14.715002 18.052734 14.484375 C 17.498253 14.03485 16.771247 13.68123 16.076172 13.523438 C 16.053349 13.518256 16.037427 13.518404 16.015625 13.513672 z M 13.697266 13.589844 C 13.073211 13.767358 12.441215 14.083704 11.947266 14.484375 C 11.695388 14.688695 11.341935 15.034404 11.296875 15.121094 C 11.264855 15.182724 11.257053 15.235707 11.251953 15.423828 C 11.246653 15.622167 11.251233 15.662726 11.283203 15.728516 C 11.331483 15.827786 12.221089 16.717349 12.322266 16.767578 C 12.419756 16.816138 12.608213 16.818144 12.710938 16.771484 C 12.754917 16.751504 12.834297 16.682415 12.904297 16.603516 C 12.969547 16.529956 13.097083 16.407168 13.189453 16.330078 C 13.971104 15.677754 15.021866 15.508337 15.949219 15.841797 L 13.697266 13.589844 z M 14.992188 17.664062 L 14.376953 18.285156 C 14.078378 18.574101 13.788169 18.906666 13.513672 19.287109 C 13.239176 19.667552 12.999136 20.077392 12.796875 20.515625 C 12.584983 20.953856 12.488281 21.333596 12.488281 21.65625 C 12.488281 22.099298 12.599833 22.514088 12.826172 22.894531 C 13.052512 23.274974 13.354976 23.582254 13.740234 23.808594 C 14.125494 24.034933 14.540419 24.150391 14.988281 24.150391 C 15.436145 24.150391 15.854067 24.034933 16.244141 23.808594 C 16.634215 23.582254 16.943584 23.274974 17.169922 22.894531 C 17.396263 22.509271 17.511719 22.099298 17.511719 21.65625 C 17.511719 21.367306 17.430269 21.024706 17.261719 20.625 C 17.093169 20.225295 16.890268 19.854679 16.654297 19.517578 C 16.442405 19.243081 16.191288 18.94075 15.902344 18.613281 C 15.6134 18.28581 15.107765 17.779641 14.992188 17.664062 z "   class="rainSensorSkip" /><path   d="m 6.5126951,5.6977078 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457547 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977078 Z"   id="path869" /></g>'
    
genericSkip2 = '<g transform="translate(0,0)"><path   id="path2"   d="M 14.984375 8.265625 L 13.705078 9.5546875 C 13.433672 9.8173385 13.167199 10.104361 12.904297 10.402344 L 20.095703 17.59375 C 20.167572 17.25627 20.214844 16.912128 20.214844 16.554688 C 20.214844 15.954688 20.045312 15.244063 19.695312 14.414062 C 19.345312 13.584062 18.925547 12.815234 18.435547 12.115234 C 17.995547 11.545234 17.475 10.914375 16.875 10.234375 C 16.275 9.554375 15.224375 8.505625 14.984375 8.265625 z M 11.845703 11.740234 C 11.305856 12.501335 10.827803 13.3145 10.425781 14.185547 C 9.9857813 15.095547 9.7851563 15.884687 9.7851562 16.554688 C 9.7851562 17.474688 10.014375 18.335 10.484375 19.125 C 10.954375 19.915 11.584766 20.555391 12.384766 21.025391 C 13.184766 21.495391 14.044609 21.734375 14.974609 21.734375 C 15.904609 21.734375 16.775937 21.495391 17.585938 21.025391 C 18.337642 20.589216 18.935648 20.000121 19.394531 19.287109 L 11.845703 11.740234 z "   class="rainDropSkip" /><path   d="m 6.5126951,5.6977076 a 0.84712499,0.84712499 0 0 0 -0.5683593,0.2480469 0.84712499,0.84712499 0 0 0 0,1.1972656 L 22.858398,24.05513 a 0.84712499,0.84712499 0 0 0 1.197266,0 0.84712499,0.84712499 0 0 0 0,-1.197266 L 7.1435545,5.9457545 A 0.84712499,0.84712499 0 0 0 6.5126951,5.6977076 Z"   id="path869"   class="skipStrikethrough" /></g>'

    
    
